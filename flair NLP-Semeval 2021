{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"flair NLP-Semeval 2021","provenance":[],"collapsed_sections":["cPPtVRQyzdi7","rCq4_X6bRfPz"],"toc_visible":true},"kernelspec":{"name":"python3","display_name":"Python 3"},"accelerator":"GPU","widgets":{"application/vnd.jupyter.widget-state+json":{"8c071706041e4e20b231ecc46bfa31cd":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","state":{"_view_name":"HBoxView","_dom_classes":[],"_model_name":"HBoxModel","_view_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_view_count":null,"_view_module_version":"1.5.0","box_style":"","layout":"IPY_MODEL_ef4b7c054b5747fdb83cfd5ff7356444","_model_module":"@jupyter-widgets/controls","children":["IPY_MODEL_bd5f2ddf533a403cac455758e53623bc","IPY_MODEL_9c0aafe9ce194c468cc5de18089bcee0"]}},"ef4b7c054b5747fdb83cfd5ff7356444":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","state":{"_view_name":"LayoutView","grid_template_rows":null,"right":null,"justify_content":null,"_view_module":"@jupyter-widgets/base","overflow":null,"_model_module_version":"1.2.0","_view_count":null,"flex_flow":null,"width":null,"min_width":null,"border":null,"align_items":null,"bottom":null,"_model_module":"@jupyter-widgets/base","top":null,"grid_column":null,"overflow_y":null,"overflow_x":null,"grid_auto_flow":null,"grid_area":null,"grid_template_columns":null,"flex":null,"_model_name":"LayoutModel","justify_items":null,"grid_row":null,"max_height":null,"align_content":null,"visibility":null,"align_self":null,"height":null,"min_height":null,"padding":null,"grid_auto_rows":null,"grid_gap":null,"max_width":null,"order":null,"_view_module_version":"1.2.0","grid_template_areas":null,"object_position":null,"object_fit":null,"grid_auto_columns":null,"margin":null,"display":null,"left":null}},"bd5f2ddf533a403cac455758e53623bc":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","state":{"_view_name":"ProgressView","style":"IPY_MODEL_94f6031989a747b4bf2d3fdf3ae529b1","_dom_classes":[],"description":"Downloading: 100%","_model_name":"FloatProgressModel","bar_style":"success","max":434,"_view_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","value":434,"_view_count":null,"_view_module_version":"1.5.0","orientation":"horizontal","min":0,"description_tooltip":null,"_model_module":"@jupyter-widgets/controls","layout":"IPY_MODEL_0a3ec455541c4acc9caa3b838a8fd942"}},"9c0aafe9ce194c468cc5de18089bcee0":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","state":{"_view_name":"HTMLView","style":"IPY_MODEL_85258fddc2ef4eb79284097eec05b004","_dom_classes":[],"description":"","_model_name":"HTMLModel","placeholder":"​","_view_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","value":" 434/434 [00:00&lt;00:00, 4.63kB/s]","_view_count":null,"_view_module_version":"1.5.0","description_tooltip":null,"_model_module":"@jupyter-widgets/controls","layout":"IPY_MODEL_e1e626430c504aecabb5705091467803"}},"94f6031989a747b4bf2d3fdf3ae529b1":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","state":{"_view_name":"StyleView","_model_name":"ProgressStyleModel","description_width":"initial","_view_module":"@jupyter-widgets/base","_model_module_version":"1.5.0","_view_count":null,"_view_module_version":"1.2.0","bar_color":null,"_model_module":"@jupyter-widgets/controls"}},"0a3ec455541c4acc9caa3b838a8fd942":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","state":{"_view_name":"LayoutView","grid_template_rows":null,"right":null,"justify_content":null,"_view_module":"@jupyter-widgets/base","overflow":null,"_model_module_version":"1.2.0","_view_count":null,"flex_flow":null,"width":null,"min_width":null,"border":null,"align_items":null,"bottom":null,"_model_module":"@jupyter-widgets/base","top":null,"grid_column":null,"overflow_y":null,"overflow_x":null,"grid_auto_flow":null,"grid_area":null,"grid_template_columns":null,"flex":null,"_model_name":"LayoutModel","justify_items":null,"grid_row":null,"max_height":null,"align_content":null,"visibility":null,"align_self":null,"height":null,"min_height":null,"padding":null,"grid_auto_rows":null,"grid_gap":null,"max_width":null,"order":null,"_view_module_version":"1.2.0","grid_template_areas":null,"object_position":null,"object_fit":null,"grid_auto_columns":null,"margin":null,"display":null,"left":null}},"85258fddc2ef4eb79284097eec05b004":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","state":{"_view_name":"StyleView","_model_name":"DescriptionStyleModel","description_width":"","_view_module":"@jupyter-widgets/base","_model_module_version":"1.5.0","_view_count":null,"_view_module_version":"1.2.0","_model_module":"@jupyter-widgets/controls"}},"e1e626430c504aecabb5705091467803":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","state":{"_view_name":"LayoutView","grid_template_rows":null,"right":null,"justify_content":null,"_view_module":"@jupyter-widgets/base","overflow":null,"_model_module_version":"1.2.0","_view_count":null,"flex_flow":null,"width":null,"min_width":null,"border":null,"align_items":null,"bottom":null,"_model_module":"@jupyter-widgets/base","top":null,"grid_column":null,"overflow_y":null,"overflow_x":null,"grid_auto_flow":null,"grid_area":null,"grid_template_columns":null,"flex":null,"_model_name":"LayoutModel","justify_items":null,"grid_row":null,"max_height":null,"align_content":null,"visibility":null,"align_self":null,"height":null,"min_height":null,"padding":null,"grid_auto_rows":null,"grid_gap":null,"max_width":null,"order":null,"_view_module_version":"1.2.0","grid_template_areas":null,"object_position":null,"object_fit":null,"grid_auto_columns":null,"margin":null,"display":null,"left":null}},"73e38564694043679343dc0a7619cdb8":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","state":{"_view_name":"HBoxView","_dom_classes":[],"_model_name":"HBoxModel","_view_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_view_count":null,"_view_module_version":"1.5.0","box_style":"","layout":"IPY_MODEL_45b4649476d442629444c94eed994895","_model_module":"@jupyter-widgets/controls","children":["IPY_MODEL_d1ebc416b92349b88ae9eb835a61dcc7","IPY_MODEL_b25d132fb94d4d7fb14bb41c816358b4"]}},"45b4649476d442629444c94eed994895":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","state":{"_view_name":"LayoutView","grid_template_rows":null,"right":null,"justify_content":null,"_view_module":"@jupyter-widgets/base","overflow":null,"_model_module_version":"1.2.0","_view_count":null,"flex_flow":null,"width":null,"min_width":null,"border":null,"align_items":null,"bottom":null,"_model_module":"@jupyter-widgets/base","top":null,"grid_column":null,"overflow_y":null,"overflow_x":null,"grid_auto_flow":null,"grid_area":null,"grid_template_columns":null,"flex":null,"_model_name":"LayoutModel","justify_items":null,"grid_row":null,"max_height":null,"align_content":null,"visibility":null,"align_self":null,"height":null,"min_height":null,"padding":null,"grid_auto_rows":null,"grid_gap":null,"max_width":null,"order":null,"_view_module_version":"1.2.0","grid_template_areas":null,"object_position":null,"object_fit":null,"grid_auto_columns":null,"margin":null,"display":null,"left":null}},"d1ebc416b92349b88ae9eb835a61dcc7":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","state":{"_view_name":"ProgressView","style":"IPY_MODEL_28b1979667a04f9e903041a26e1e768f","_dom_classes":[],"description":"Downloading: 100%","_model_name":"FloatProgressModel","bar_style":"success","max":231508,"_view_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","value":231508,"_view_count":null,"_view_module_version":"1.5.0","orientation":"horizontal","min":0,"description_tooltip":null,"_model_module":"@jupyter-widgets/controls","layout":"IPY_MODEL_3cb2db92f10344af8cc91f92bbe59284"}},"b25d132fb94d4d7fb14bb41c816358b4":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","state":{"_view_name":"HTMLView","style":"IPY_MODEL_b5e1a3ec61504d5d8bfd28b6505f4f3a","_dom_classes":[],"description":"","_model_name":"HTMLModel","placeholder":"​","_view_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","value":" 232k/232k [00:43&lt;00:00, 5.37kB/s]","_view_count":null,"_view_module_version":"1.5.0","description_tooltip":null,"_model_module":"@jupyter-widgets/controls","layout":"IPY_MODEL_15dc922d7b44494a84584d010aea3c8c"}},"28b1979667a04f9e903041a26e1e768f":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","state":{"_view_name":"StyleView","_model_name":"ProgressStyleModel","description_width":"initial","_view_module":"@jupyter-widgets/base","_model_module_version":"1.5.0","_view_count":null,"_view_module_version":"1.2.0","bar_color":null,"_model_module":"@jupyter-widgets/controls"}},"3cb2db92f10344af8cc91f92bbe59284":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","state":{"_view_name":"LayoutView","grid_template_rows":null,"right":null,"justify_content":null,"_view_module":"@jupyter-widgets/base","overflow":null,"_model_module_version":"1.2.0","_view_count":null,"flex_flow":null,"width":null,"min_width":null,"border":null,"align_items":null,"bottom":null,"_model_module":"@jupyter-widgets/base","top":null,"grid_column":null,"overflow_y":null,"overflow_x":null,"grid_auto_flow":null,"grid_area":null,"grid_template_columns":null,"flex":null,"_model_name":"LayoutModel","justify_items":null,"grid_row":null,"max_height":null,"align_content":null,"visibility":null,"align_self":null,"height":null,"min_height":null,"padding":null,"grid_auto_rows":null,"grid_gap":null,"max_width":null,"order":null,"_view_module_version":"1.2.0","grid_template_areas":null,"object_position":null,"object_fit":null,"grid_auto_columns":null,"margin":null,"display":null,"left":null}},"b5e1a3ec61504d5d8bfd28b6505f4f3a":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","state":{"_view_name":"StyleView","_model_name":"DescriptionStyleModel","description_width":"","_view_module":"@jupyter-widgets/base","_model_module_version":"1.5.0","_view_count":null,"_view_module_version":"1.2.0","_model_module":"@jupyter-widgets/controls"}},"15dc922d7b44494a84584d010aea3c8c":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","state":{"_view_name":"LayoutView","grid_template_rows":null,"right":null,"justify_content":null,"_view_module":"@jupyter-widgets/base","overflow":null,"_model_module_version":"1.2.0","_view_count":null,"flex_flow":null,"width":null,"min_width":null,"border":null,"align_items":null,"bottom":null,"_model_module":"@jupyter-widgets/base","top":null,"grid_column":null,"overflow_y":null,"overflow_x":null,"grid_auto_flow":null,"grid_area":null,"grid_template_columns":null,"flex":null,"_model_name":"LayoutModel","justify_items":null,"grid_row":null,"max_height":null,"align_content":null,"visibility":null,"align_self":null,"height":null,"min_height":null,"padding":null,"grid_auto_rows":null,"grid_gap":null,"max_width":null,"order":null,"_view_module_version":"1.2.0","grid_template_areas":null,"object_position":null,"object_fit":null,"grid_auto_columns":null,"margin":null,"display":null,"left":null}},"4e511478791c4564ba4835a8fc587e41":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","state":{"_view_name":"HBoxView","_dom_classes":[],"_model_name":"HBoxModel","_view_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_view_count":null,"_view_module_version":"1.5.0","box_style":"","layout":"IPY_MODEL_a6befa7072d04c09bfdac3054e39fa2d","_model_module":"@jupyter-widgets/controls","children":["IPY_MODEL_6e7f7839edd9437a9478cfc70f720456","IPY_MODEL_a0eb86a6c7504ea5bbca61365e9e8f77"]}},"a6befa7072d04c09bfdac3054e39fa2d":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","state":{"_view_name":"LayoutView","grid_template_rows":null,"right":null,"justify_content":null,"_view_module":"@jupyter-widgets/base","overflow":null,"_model_module_version":"1.2.0","_view_count":null,"flex_flow":null,"width":null,"min_width":null,"border":null,"align_items":null,"bottom":null,"_model_module":"@jupyter-widgets/base","top":null,"grid_column":null,"overflow_y":null,"overflow_x":null,"grid_auto_flow":null,"grid_area":null,"grid_template_columns":null,"flex":null,"_model_name":"LayoutModel","justify_items":null,"grid_row":null,"max_height":null,"align_content":null,"visibility":null,"align_self":null,"height":null,"min_height":null,"padding":null,"grid_auto_rows":null,"grid_gap":null,"max_width":null,"order":null,"_view_module_version":"1.2.0","grid_template_areas":null,"object_position":null,"object_fit":null,"grid_auto_columns":null,"margin":null,"display":null,"left":null}},"6e7f7839edd9437a9478cfc70f720456":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","state":{"_view_name":"ProgressView","style":"IPY_MODEL_56cbb3828d9747c49e6039affd3efc45","_dom_classes":[],"description":"Downloading: 100%","_model_name":"FloatProgressModel","bar_style":"success","max":466062,"_view_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","value":466062,"_view_count":null,"_view_module_version":"1.5.0","orientation":"horizontal","min":0,"description_tooltip":null,"_model_module":"@jupyter-widgets/controls","layout":"IPY_MODEL_aee2b2c128f14f6e8cd4b11f1f322038"}},"a0eb86a6c7504ea5bbca61365e9e8f77":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","state":{"_view_name":"HTMLView","style":"IPY_MODEL_1fff1683756c447ab43dc4a2cb294f3e","_dom_classes":[],"description":"","_model_name":"HTMLModel","placeholder":"​","_view_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","value":" 466k/466k [00:00&lt;00:00, 2.99MB/s]","_view_count":null,"_view_module_version":"1.5.0","description_tooltip":null,"_model_module":"@jupyter-widgets/controls","layout":"IPY_MODEL_f0941c6a15a449759f78977161db4c57"}},"56cbb3828d9747c49e6039affd3efc45":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","state":{"_view_name":"StyleView","_model_name":"ProgressStyleModel","description_width":"initial","_view_module":"@jupyter-widgets/base","_model_module_version":"1.5.0","_view_count":null,"_view_module_version":"1.2.0","bar_color":null,"_model_module":"@jupyter-widgets/controls"}},"aee2b2c128f14f6e8cd4b11f1f322038":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","state":{"_view_name":"LayoutView","grid_template_rows":null,"right":null,"justify_content":null,"_view_module":"@jupyter-widgets/base","overflow":null,"_model_module_version":"1.2.0","_view_count":null,"flex_flow":null,"width":null,"min_width":null,"border":null,"align_items":null,"bottom":null,"_model_module":"@jupyter-widgets/base","top":null,"grid_column":null,"overflow_y":null,"overflow_x":null,"grid_auto_flow":null,"grid_area":null,"grid_template_columns":null,"flex":null,"_model_name":"LayoutModel","justify_items":null,"grid_row":null,"max_height":null,"align_content":null,"visibility":null,"align_self":null,"height":null,"min_height":null,"padding":null,"grid_auto_rows":null,"grid_gap":null,"max_width":null,"order":null,"_view_module_version":"1.2.0","grid_template_areas":null,"object_position":null,"object_fit":null,"grid_auto_columns":null,"margin":null,"display":null,"left":null}},"1fff1683756c447ab43dc4a2cb294f3e":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","state":{"_view_name":"StyleView","_model_name":"DescriptionStyleModel","description_width":"","_view_module":"@jupyter-widgets/base","_model_module_version":"1.5.0","_view_count":null,"_view_module_version":"1.2.0","_model_module":"@jupyter-widgets/controls"}},"f0941c6a15a449759f78977161db4c57":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","state":{"_view_name":"LayoutView","grid_template_rows":null,"right":null,"justify_content":null,"_view_module":"@jupyter-widgets/base","overflow":null,"_model_module_version":"1.2.0","_view_count":null,"flex_flow":null,"width":null,"min_width":null,"border":null,"align_items":null,"bottom":null,"_model_module":"@jupyter-widgets/base","top":null,"grid_column":null,"overflow_y":null,"overflow_x":null,"grid_auto_flow":null,"grid_area":null,"grid_template_columns":null,"flex":null,"_model_name":"LayoutModel","justify_items":null,"grid_row":null,"max_height":null,"align_content":null,"visibility":null,"align_self":null,"height":null,"min_height":null,"padding":null,"grid_auto_rows":null,"grid_gap":null,"max_width":null,"order":null,"_view_module_version":"1.2.0","grid_template_areas":null,"object_position":null,"object_fit":null,"grid_auto_columns":null,"margin":null,"display":null,"left":null}},"d58c9e4bfae341f4a7a027dd1c1d8632":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","state":{"_view_name":"HBoxView","_dom_classes":[],"_model_name":"HBoxModel","_view_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_view_count":null,"_view_module_version":"1.5.0","box_style":"","layout":"IPY_MODEL_f5b97522574f44f0af1e89e22b22a5a9","_model_module":"@jupyter-widgets/controls","children":["IPY_MODEL_38298765dfa848b491f20889cffc5d74","IPY_MODEL_94f88af192934d54a34c03c42f71e3b2"]}},"f5b97522574f44f0af1e89e22b22a5a9":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","state":{"_view_name":"LayoutView","grid_template_rows":null,"right":null,"justify_content":null,"_view_module":"@jupyter-widgets/base","overflow":null,"_model_module_version":"1.2.0","_view_count":null,"flex_flow":null,"width":null,"min_width":null,"border":null,"align_items":null,"bottom":null,"_model_module":"@jupyter-widgets/base","top":null,"grid_column":null,"overflow_y":null,"overflow_x":null,"grid_auto_flow":null,"grid_area":null,"grid_template_columns":null,"flex":null,"_model_name":"LayoutModel","justify_items":null,"grid_row":null,"max_height":null,"align_content":null,"visibility":null,"align_self":null,"height":null,"min_height":null,"padding":null,"grid_auto_rows":null,"grid_gap":null,"max_width":null,"order":null,"_view_module_version":"1.2.0","grid_template_areas":null,"object_position":null,"object_fit":null,"grid_auto_columns":null,"margin":null,"display":null,"left":null}},"38298765dfa848b491f20889cffc5d74":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","state":{"_view_name":"ProgressView","style":"IPY_MODEL_f974066b9bbc47ab9ae36762fe69c659","_dom_classes":[],"description":"Downloading: 100%","_model_name":"FloatProgressModel","bar_style":"success","max":28,"_view_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","value":28,"_view_count":null,"_view_module_version":"1.5.0","orientation":"horizontal","min":0,"description_tooltip":null,"_model_module":"@jupyter-widgets/controls","layout":"IPY_MODEL_cc2ca899f06e403293c856a4380bc299"}},"94f88af192934d54a34c03c42f71e3b2":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","state":{"_view_name":"HTMLView","style":"IPY_MODEL_7519843f1451436281820e30a2b3cd35","_dom_classes":[],"description":"","_model_name":"HTMLModel","placeholder":"​","_view_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","value":" 28.0/28.0 [00:42&lt;00:00, 1.53s/B]","_view_count":null,"_view_module_version":"1.5.0","description_tooltip":null,"_model_module":"@jupyter-widgets/controls","layout":"IPY_MODEL_0019926329a14584bc193c7753972e7d"}},"f974066b9bbc47ab9ae36762fe69c659":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","state":{"_view_name":"StyleView","_model_name":"ProgressStyleModel","description_width":"initial","_view_module":"@jupyter-widgets/base","_model_module_version":"1.5.0","_view_count":null,"_view_module_version":"1.2.0","bar_color":null,"_model_module":"@jupyter-widgets/controls"}},"cc2ca899f06e403293c856a4380bc299":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","state":{"_view_name":"LayoutView","grid_template_rows":null,"right":null,"justify_content":null,"_view_module":"@jupyter-widgets/base","overflow":null,"_model_module_version":"1.2.0","_view_count":null,"flex_flow":null,"width":null,"min_width":null,"border":null,"align_items":null,"bottom":null,"_model_module":"@jupyter-widgets/base","top":null,"grid_column":null,"overflow_y":null,"overflow_x":null,"grid_auto_flow":null,"grid_area":null,"grid_template_columns":null,"flex":null,"_model_name":"LayoutModel","justify_items":null,"grid_row":null,"max_height":null,"align_content":null,"visibility":null,"align_self":null,"height":null,"min_height":null,"padding":null,"grid_auto_rows":null,"grid_gap":null,"max_width":null,"order":null,"_view_module_version":"1.2.0","grid_template_areas":null,"object_position":null,"object_fit":null,"grid_auto_columns":null,"margin":null,"display":null,"left":null}},"7519843f1451436281820e30a2b3cd35":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","state":{"_view_name":"StyleView","_model_name":"DescriptionStyleModel","description_width":"","_view_module":"@jupyter-widgets/base","_model_module_version":"1.5.0","_view_count":null,"_view_module_version":"1.2.0","_model_module":"@jupyter-widgets/controls"}},"0019926329a14584bc193c7753972e7d":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","state":{"_view_name":"LayoutView","grid_template_rows":null,"right":null,"justify_content":null,"_view_module":"@jupyter-widgets/base","overflow":null,"_model_module_version":"1.2.0","_view_count":null,"flex_flow":null,"width":null,"min_width":null,"border":null,"align_items":null,"bottom":null,"_model_module":"@jupyter-widgets/base","top":null,"grid_column":null,"overflow_y":null,"overflow_x":null,"grid_auto_flow":null,"grid_area":null,"grid_template_columns":null,"flex":null,"_model_name":"LayoutModel","justify_items":null,"grid_row":null,"max_height":null,"align_content":null,"visibility":null,"align_self":null,"height":null,"min_height":null,"padding":null,"grid_auto_rows":null,"grid_gap":null,"max_width":null,"order":null,"_view_module_version":"1.2.0","grid_template_areas":null,"object_position":null,"object_fit":null,"grid_auto_columns":null,"margin":null,"display":null,"left":null}},"63811e0a5582489e8520b2090fe762e9":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","state":{"_view_name":"HBoxView","_dom_classes":[],"_model_name":"HBoxModel","_view_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_view_count":null,"_view_module_version":"1.5.0","box_style":"","layout":"IPY_MODEL_96172604a79844f98dab21920a5823fb","_model_module":"@jupyter-widgets/controls","children":["IPY_MODEL_39c8ee42565a40d0831f1b8ee36775c9","IPY_MODEL_fb0cd47dff1d4ebdb7022e6e6300fc9e"]}},"96172604a79844f98dab21920a5823fb":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","state":{"_view_name":"LayoutView","grid_template_rows":null,"right":null,"justify_content":null,"_view_module":"@jupyter-widgets/base","overflow":null,"_model_module_version":"1.2.0","_view_count":null,"flex_flow":null,"width":null,"min_width":null,"border":null,"align_items":null,"bottom":null,"_model_module":"@jupyter-widgets/base","top":null,"grid_column":null,"overflow_y":null,"overflow_x":null,"grid_auto_flow":null,"grid_area":null,"grid_template_columns":null,"flex":null,"_model_name":"LayoutModel","justify_items":null,"grid_row":null,"max_height":null,"align_content":null,"visibility":null,"align_self":null,"height":null,"min_height":null,"padding":null,"grid_auto_rows":null,"grid_gap":null,"max_width":null,"order":null,"_view_module_version":"1.2.0","grid_template_areas":null,"object_position":null,"object_fit":null,"grid_auto_columns":null,"margin":null,"display":null,"left":null}},"39c8ee42565a40d0831f1b8ee36775c9":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","state":{"_view_name":"ProgressView","style":"IPY_MODEL_b2107b09e7a9496b8cf0f61814ae5fe0","_dom_classes":[],"description":"Downloading: 100%","_model_name":"FloatProgressModel","bar_style":"success","max":1344997306,"_view_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","value":1344997306,"_view_count":null,"_view_module_version":"1.5.0","orientation":"horizontal","min":0,"description_tooltip":null,"_model_module":"@jupyter-widgets/controls","layout":"IPY_MODEL_7486527d0bfb4f879d883b0f21ed4773"}},"fb0cd47dff1d4ebdb7022e6e6300fc9e":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","state":{"_view_name":"HTMLView","style":"IPY_MODEL_732ed96a3f3e482d8edd2b66a15baf8a","_dom_classes":[],"description":"","_model_name":"HTMLModel","placeholder":"​","_view_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","value":" 1.34G/1.34G [00:37&lt;00:00, 36.1MB/s]","_view_count":null,"_view_module_version":"1.5.0","description_tooltip":null,"_model_module":"@jupyter-widgets/controls","layout":"IPY_MODEL_c6f55ed9d690470f8a7905494638101c"}},"b2107b09e7a9496b8cf0f61814ae5fe0":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","state":{"_view_name":"StyleView","_model_name":"ProgressStyleModel","description_width":"initial","_view_module":"@jupyter-widgets/base","_model_module_version":"1.5.0","_view_count":null,"_view_module_version":"1.2.0","bar_color":null,"_model_module":"@jupyter-widgets/controls"}},"7486527d0bfb4f879d883b0f21ed4773":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","state":{"_view_name":"LayoutView","grid_template_rows":null,"right":null,"justify_content":null,"_view_module":"@jupyter-widgets/base","overflow":null,"_model_module_version":"1.2.0","_view_count":null,"flex_flow":null,"width":null,"min_width":null,"border":null,"align_items":null,"bottom":null,"_model_module":"@jupyter-widgets/base","top":null,"grid_column":null,"overflow_y":null,"overflow_x":null,"grid_auto_flow":null,"grid_area":null,"grid_template_columns":null,"flex":null,"_model_name":"LayoutModel","justify_items":null,"grid_row":null,"max_height":null,"align_content":null,"visibility":null,"align_self":null,"height":null,"min_height":null,"padding":null,"grid_auto_rows":null,"grid_gap":null,"max_width":null,"order":null,"_view_module_version":"1.2.0","grid_template_areas":null,"object_position":null,"object_fit":null,"grid_auto_columns":null,"margin":null,"display":null,"left":null}},"732ed96a3f3e482d8edd2b66a15baf8a":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","state":{"_view_name":"StyleView","_model_name":"DescriptionStyleModel","description_width":"","_view_module":"@jupyter-widgets/base","_model_module_version":"1.5.0","_view_count":null,"_view_module_version":"1.2.0","_model_module":"@jupyter-widgets/controls"}},"c6f55ed9d690470f8a7905494638101c":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","state":{"_view_name":"LayoutView","grid_template_rows":null,"right":null,"justify_content":null,"_view_module":"@jupyter-widgets/base","overflow":null,"_model_module_version":"1.2.0","_view_count":null,"flex_flow":null,"width":null,"min_width":null,"border":null,"align_items":null,"bottom":null,"_model_module":"@jupyter-widgets/base","top":null,"grid_column":null,"overflow_y":null,"overflow_x":null,"grid_auto_flow":null,"grid_area":null,"grid_template_columns":null,"flex":null,"_model_name":"LayoutModel","justify_items":null,"grid_row":null,"max_height":null,"align_content":null,"visibility":null,"align_self":null,"height":null,"min_height":null,"padding":null,"grid_auto_rows":null,"grid_gap":null,"max_width":null,"order":null,"_view_module_version":"1.2.0","grid_template_areas":null,"object_position":null,"object_fit":null,"grid_auto_columns":null,"margin":null,"display":null,"left":null}},"f178f3bf4fb64fe8a8c0346fa34a57c0":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","state":{"_view_name":"HBoxView","_dom_classes":[],"_model_name":"HBoxModel","_view_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_view_count":null,"_view_module_version":"1.5.0","box_style":"","layout":"IPY_MODEL_6f2f37c2175141559c309ded6a3faaa0","_model_module":"@jupyter-widgets/controls","children":["IPY_MODEL_3a97753f7fe346099715a2ed601092a2","IPY_MODEL_22c84a61a57b43cb86ac1b32b02faa86"]}},"6f2f37c2175141559c309ded6a3faaa0":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","state":{"_view_name":"LayoutView","grid_template_rows":null,"right":null,"justify_content":null,"_view_module":"@jupyter-widgets/base","overflow":null,"_model_module_version":"1.2.0","_view_count":null,"flex_flow":null,"width":null,"min_width":null,"border":null,"align_items":null,"bottom":null,"_model_module":"@jupyter-widgets/base","top":null,"grid_column":null,"overflow_y":null,"overflow_x":null,"grid_auto_flow":null,"grid_area":null,"grid_template_columns":null,"flex":null,"_model_name":"LayoutModel","justify_items":null,"grid_row":null,"max_height":null,"align_content":null,"visibility":null,"align_self":null,"height":null,"min_height":null,"padding":null,"grid_auto_rows":null,"grid_gap":null,"max_width":null,"order":null,"_view_module_version":"1.2.0","grid_template_areas":null,"object_position":null,"object_fit":null,"grid_auto_columns":null,"margin":null,"display":null,"left":null}},"3a97753f7fe346099715a2ed601092a2":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","state":{"_view_name":"ProgressView","style":"IPY_MODEL_9ab38e6ed424434d854f83b45a81c938","_dom_classes":[],"description":"Epoch: 100%","_model_name":"FloatProgressModel","bar_style":"success","max":1,"_view_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","value":1,"_view_count":null,"_view_module_version":"1.5.0","orientation":"horizontal","min":0,"description_tooltip":null,"_model_module":"@jupyter-widgets/controls","layout":"IPY_MODEL_4a930a0b64f0403c825874670833daad"}},"22c84a61a57b43cb86ac1b32b02faa86":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","state":{"_view_name":"HTMLView","style":"IPY_MODEL_c810c20071b54f409acc74db9684e413","_dom_classes":[],"description":"","_model_name":"HTMLModel","placeholder":"​","_view_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","value":" 1/1 [00:01&lt;00:00,  1.69s/it]","_view_count":null,"_view_module_version":"1.5.0","description_tooltip":null,"_model_module":"@jupyter-widgets/controls","layout":"IPY_MODEL_0218154a4382482bbd36421a1a747fe5"}},"9ab38e6ed424434d854f83b45a81c938":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","state":{"_view_name":"StyleView","_model_name":"ProgressStyleModel","description_width":"initial","_view_module":"@jupyter-widgets/base","_model_module_version":"1.5.0","_view_count":null,"_view_module_version":"1.2.0","bar_color":null,"_model_module":"@jupyter-widgets/controls"}},"4a930a0b64f0403c825874670833daad":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","state":{"_view_name":"LayoutView","grid_template_rows":null,"right":null,"justify_content":null,"_view_module":"@jupyter-widgets/base","overflow":null,"_model_module_version":"1.2.0","_view_count":null,"flex_flow":null,"width":null,"min_width":null,"border":null,"align_items":null,"bottom":null,"_model_module":"@jupyter-widgets/base","top":null,"grid_column":null,"overflow_y":null,"overflow_x":null,"grid_auto_flow":null,"grid_area":null,"grid_template_columns":null,"flex":null,"_model_name":"LayoutModel","justify_items":null,"grid_row":null,"max_height":null,"align_content":null,"visibility":null,"align_self":null,"height":null,"min_height":null,"padding":null,"grid_auto_rows":null,"grid_gap":null,"max_width":null,"order":null,"_view_module_version":"1.2.0","grid_template_areas":null,"object_position":null,"object_fit":null,"grid_auto_columns":null,"margin":null,"display":null,"left":null}},"c810c20071b54f409acc74db9684e413":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","state":{"_view_name":"StyleView","_model_name":"DescriptionStyleModel","description_width":"","_view_module":"@jupyter-widgets/base","_model_module_version":"1.5.0","_view_count":null,"_view_module_version":"1.2.0","_model_module":"@jupyter-widgets/controls"}},"0218154a4382482bbd36421a1a747fe5":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","state":{"_view_name":"LayoutView","grid_template_rows":null,"right":null,"justify_content":null,"_view_module":"@jupyter-widgets/base","overflow":null,"_model_module_version":"1.2.0","_view_count":null,"flex_flow":null,"width":null,"min_width":null,"border":null,"align_items":null,"bottom":null,"_model_module":"@jupyter-widgets/base","top":null,"grid_column":null,"overflow_y":null,"overflow_x":null,"grid_auto_flow":null,"grid_area":null,"grid_template_columns":null,"flex":null,"_model_name":"LayoutModel","justify_items":null,"grid_row":null,"max_height":null,"align_content":null,"visibility":null,"align_self":null,"height":null,"min_height":null,"padding":null,"grid_auto_rows":null,"grid_gap":null,"max_width":null,"order":null,"_view_module_version":"1.2.0","grid_template_areas":null,"object_position":null,"object_fit":null,"grid_auto_columns":null,"margin":null,"display":null,"left":null}},"6eae68ec757e47eda05484795ee7a3d8":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","state":{"_view_name":"HBoxView","_dom_classes":[],"_model_name":"HBoxModel","_view_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_view_count":null,"_view_module_version":"1.5.0","box_style":"","layout":"IPY_MODEL_13c90f2486a7451aa6eae74d8222c0fd","_model_module":"@jupyter-widgets/controls","children":["IPY_MODEL_7d5b2e4a980f4914bb9043dcfcd4bd34","IPY_MODEL_66dc6d7abd4b4caeaa32fa7ed5acb1a7"]}},"13c90f2486a7451aa6eae74d8222c0fd":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","state":{"_view_name":"LayoutView","grid_template_rows":null,"right":null,"justify_content":null,"_view_module":"@jupyter-widgets/base","overflow":null,"_model_module_version":"1.2.0","_view_count":null,"flex_flow":null,"width":null,"min_width":null,"border":null,"align_items":null,"bottom":null,"_model_module":"@jupyter-widgets/base","top":null,"grid_column":null,"overflow_y":null,"overflow_x":null,"grid_auto_flow":null,"grid_area":null,"grid_template_columns":null,"flex":null,"_model_name":"LayoutModel","justify_items":null,"grid_row":null,"max_height":null,"align_content":null,"visibility":null,"align_self":null,"height":null,"min_height":null,"padding":null,"grid_auto_rows":null,"grid_gap":null,"max_width":null,"order":null,"_view_module_version":"1.2.0","grid_template_areas":null,"object_position":null,"object_fit":null,"grid_auto_columns":null,"margin":null,"display":null,"left":null}},"7d5b2e4a980f4914bb9043dcfcd4bd34":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","state":{"_view_name":"ProgressView","style":"IPY_MODEL_f28e7bdadb4e4b9999f5f6c0c2571458","_dom_classes":[],"description":"Current iteration: 100%","_model_name":"FloatProgressModel","bar_style":"success","max":1,"_view_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","value":1,"_view_count":null,"_view_module_version":"1.5.0","orientation":"horizontal","min":0,"description_tooltip":null,"_model_module":"@jupyter-widgets/controls","layout":"IPY_MODEL_8f98c56ab905470ba2c7318fc534221e"}},"66dc6d7abd4b4caeaa32fa7ed5acb1a7":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","state":{"_view_name":"HTMLView","style":"IPY_MODEL_2d0da82ecf97456ea2c852f7df98dc82","_dom_classes":[],"description":"","_model_name":"HTMLModel","placeholder":"​","_view_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","value":" 1/1 [00:01&lt;00:00,  1.66s/it]","_view_count":null,"_view_module_version":"1.5.0","description_tooltip":null,"_model_module":"@jupyter-widgets/controls","layout":"IPY_MODEL_950a162020fd4e409f8393ad4a5aeead"}},"f28e7bdadb4e4b9999f5f6c0c2571458":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","state":{"_view_name":"StyleView","_model_name":"ProgressStyleModel","description_width":"initial","_view_module":"@jupyter-widgets/base","_model_module_version":"1.5.0","_view_count":null,"_view_module_version":"1.2.0","bar_color":null,"_model_module":"@jupyter-widgets/controls"}},"8f98c56ab905470ba2c7318fc534221e":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","state":{"_view_name":"LayoutView","grid_template_rows":null,"right":null,"justify_content":null,"_view_module":"@jupyter-widgets/base","overflow":null,"_model_module_version":"1.2.0","_view_count":null,"flex_flow":null,"width":null,"min_width":null,"border":null,"align_items":null,"bottom":null,"_model_module":"@jupyter-widgets/base","top":null,"grid_column":null,"overflow_y":null,"overflow_x":null,"grid_auto_flow":null,"grid_area":null,"grid_template_columns":null,"flex":null,"_model_name":"LayoutModel","justify_items":null,"grid_row":null,"max_height":null,"align_content":null,"visibility":null,"align_self":null,"height":null,"min_height":null,"padding":null,"grid_auto_rows":null,"grid_gap":null,"max_width":null,"order":null,"_view_module_version":"1.2.0","grid_template_areas":null,"object_position":null,"object_fit":null,"grid_auto_columns":null,"margin":null,"display":null,"left":null}},"2d0da82ecf97456ea2c852f7df98dc82":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","state":{"_view_name":"StyleView","_model_name":"DescriptionStyleModel","description_width":"","_view_module":"@jupyter-widgets/base","_model_module_version":"1.5.0","_view_count":null,"_view_module_version":"1.2.0","_model_module":"@jupyter-widgets/controls"}},"950a162020fd4e409f8393ad4a5aeead":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","state":{"_view_name":"LayoutView","grid_template_rows":null,"right":null,"justify_content":null,"_view_module":"@jupyter-widgets/base","overflow":null,"_model_module_version":"1.2.0","_view_count":null,"flex_flow":null,"width":null,"min_width":null,"border":null,"align_items":null,"bottom":null,"_model_module":"@jupyter-widgets/base","top":null,"grid_column":null,"overflow_y":null,"overflow_x":null,"grid_auto_flow":null,"grid_area":null,"grid_template_columns":null,"flex":null,"_model_name":"LayoutModel","justify_items":null,"grid_row":null,"max_height":null,"align_content":null,"visibility":null,"align_self":null,"height":null,"min_height":null,"padding":null,"grid_auto_rows":null,"grid_gap":null,"max_width":null,"order":null,"_view_module_version":"1.2.0","grid_template_areas":null,"object_position":null,"object_fit":null,"grid_auto_columns":null,"margin":null,"display":null,"left":null}},"7776d539d0f244a5bb31b9a2bc34cd27":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","state":{"_view_name":"HBoxView","_dom_classes":[],"_model_name":"HBoxModel","_view_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_view_count":null,"_view_module_version":"1.5.0","box_style":"","layout":"IPY_MODEL_92c641b9326c44d09be5677acf145ff3","_model_module":"@jupyter-widgets/controls","children":["IPY_MODEL_ab0c7b49323d4aab867aa9b3f9021e9d","IPY_MODEL_617ef44111a443f59d6c377d68f95dbb"]}},"92c641b9326c44d09be5677acf145ff3":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","state":{"_view_name":"LayoutView","grid_template_rows":null,"right":null,"justify_content":null,"_view_module":"@jupyter-widgets/base","overflow":null,"_model_module_version":"1.2.0","_view_count":null,"flex_flow":null,"width":null,"min_width":null,"border":null,"align_items":null,"bottom":null,"_model_module":"@jupyter-widgets/base","top":null,"grid_column":null,"overflow_y":null,"overflow_x":null,"grid_auto_flow":null,"grid_area":null,"grid_template_columns":null,"flex":null,"_model_name":"LayoutModel","justify_items":null,"grid_row":null,"max_height":null,"align_content":null,"visibility":null,"align_self":null,"height":null,"min_height":null,"padding":null,"grid_auto_rows":null,"grid_gap":null,"max_width":null,"order":null,"_view_module_version":"1.2.0","grid_template_areas":null,"object_position":null,"object_fit":null,"grid_auto_columns":null,"margin":null,"display":null,"left":null}},"ab0c7b49323d4aab867aa9b3f9021e9d":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","state":{"_view_name":"ProgressView","style":"IPY_MODEL_bdd15277ba9441b495a276c80ecaec40","_dom_classes":[],"description":"100%","_model_name":"FloatProgressModel","bar_style":"success","max":1,"_view_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","value":1,"_view_count":null,"_view_module_version":"1.5.0","orientation":"horizontal","min":0,"description_tooltip":null,"_model_module":"@jupyter-widgets/controls","layout":"IPY_MODEL_412fc808fd1042ff9167c053f7841c01"}},"617ef44111a443f59d6c377d68f95dbb":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","state":{"_view_name":"HTMLView","style":"IPY_MODEL_d6840cb51ab94fc2afbc21fe54305f64","_dom_classes":[],"description":"","_model_name":"HTMLModel","placeholder":"​","_view_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","value":" 1/1 [00:17&lt;00:00, 17.13s/it]","_view_count":null,"_view_module_version":"1.5.0","description_tooltip":null,"_model_module":"@jupyter-widgets/controls","layout":"IPY_MODEL_3343292ac2e5454d8709cc88c51aa76c"}},"bdd15277ba9441b495a276c80ecaec40":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","state":{"_view_name":"StyleView","_model_name":"ProgressStyleModel","description_width":"initial","_view_module":"@jupyter-widgets/base","_model_module_version":"1.5.0","_view_count":null,"_view_module_version":"1.2.0","bar_color":null,"_model_module":"@jupyter-widgets/controls"}},"412fc808fd1042ff9167c053f7841c01":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","state":{"_view_name":"LayoutView","grid_template_rows":null,"right":null,"justify_content":null,"_view_module":"@jupyter-widgets/base","overflow":null,"_model_module_version":"1.2.0","_view_count":null,"flex_flow":null,"width":null,"min_width":null,"border":null,"align_items":null,"bottom":null,"_model_module":"@jupyter-widgets/base","top":null,"grid_column":null,"overflow_y":null,"overflow_x":null,"grid_auto_flow":null,"grid_area":null,"grid_template_columns":null,"flex":null,"_model_name":"LayoutModel","justify_items":null,"grid_row":null,"max_height":null,"align_content":null,"visibility":null,"align_self":null,"height":null,"min_height":null,"padding":null,"grid_auto_rows":null,"grid_gap":null,"max_width":null,"order":null,"_view_module_version":"1.2.0","grid_template_areas":null,"object_position":null,"object_fit":null,"grid_auto_columns":null,"margin":null,"display":null,"left":null}},"d6840cb51ab94fc2afbc21fe54305f64":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","state":{"_view_name":"StyleView","_model_name":"DescriptionStyleModel","description_width":"","_view_module":"@jupyter-widgets/base","_model_module_version":"1.5.0","_view_count":null,"_view_module_version":"1.2.0","_model_module":"@jupyter-widgets/controls"}},"3343292ac2e5454d8709cc88c51aa76c":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","state":{"_view_name":"LayoutView","grid_template_rows":null,"right":null,"justify_content":null,"_view_module":"@jupyter-widgets/base","overflow":null,"_model_module_version":"1.2.0","_view_count":null,"flex_flow":null,"width":null,"min_width":null,"border":null,"align_items":null,"bottom":null,"_model_module":"@jupyter-widgets/base","top":null,"grid_column":null,"overflow_y":null,"overflow_x":null,"grid_auto_flow":null,"grid_area":null,"grid_template_columns":null,"flex":null,"_model_name":"LayoutModel","justify_items":null,"grid_row":null,"max_height":null,"align_content":null,"visibility":null,"align_self":null,"height":null,"min_height":null,"padding":null,"grid_auto_rows":null,"grid_gap":null,"max_width":null,"order":null,"_view_module_version":"1.2.0","grid_template_areas":null,"object_position":null,"object_fit":null,"grid_auto_columns":null,"margin":null,"display":null,"left":null}},"758e1912acbf454484300859469420d4":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","state":{"_view_name":"HBoxView","_dom_classes":[],"_model_name":"HBoxModel","_view_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_view_count":null,"_view_module_version":"1.5.0","box_style":"","layout":"IPY_MODEL_0cc6d9f334da4846bac47e87555246c6","_model_module":"@jupyter-widgets/controls","children":["IPY_MODEL_fa8b6a13bd6b40bd92925d9e028c545f","IPY_MODEL_1447423645d34917a9a071f6e3fe9d41"]}},"0cc6d9f334da4846bac47e87555246c6":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","state":{"_view_name":"LayoutView","grid_template_rows":null,"right":null,"justify_content":null,"_view_module":"@jupyter-widgets/base","overflow":null,"_model_module_version":"1.2.0","_view_count":null,"flex_flow":null,"width":null,"min_width":null,"border":null,"align_items":null,"bottom":null,"_model_module":"@jupyter-widgets/base","top":null,"grid_column":null,"overflow_y":null,"overflow_x":null,"grid_auto_flow":null,"grid_area":null,"grid_template_columns":null,"flex":null,"_model_name":"LayoutModel","justify_items":null,"grid_row":null,"max_height":null,"align_content":null,"visibility":null,"align_self":null,"height":null,"min_height":null,"padding":null,"grid_auto_rows":null,"grid_gap":null,"max_width":null,"order":null,"_view_module_version":"1.2.0","grid_template_areas":null,"object_position":null,"object_fit":null,"grid_auto_columns":null,"margin":null,"display":null,"left":null}},"fa8b6a13bd6b40bd92925d9e028c545f":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","state":{"_view_name":"ProgressView","style":"IPY_MODEL_34c528108c3845cab068fcd9214383cd","_dom_classes":[],"description":"100%","_model_name":"FloatProgressModel","bar_style":"success","max":1,"_view_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","value":1,"_view_count":null,"_view_module_version":"1.5.0","orientation":"horizontal","min":0,"description_tooltip":null,"_model_module":"@jupyter-widgets/controls","layout":"IPY_MODEL_3726f2e0cd654c5d8ad9e7d5b3513939"}},"1447423645d34917a9a071f6e3fe9d41":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","state":{"_view_name":"HTMLView","style":"IPY_MODEL_5f6b39876e7a4a4084d4f55723eb7430","_dom_classes":[],"description":"","_model_name":"HTMLModel","placeholder":"​","_view_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","value":" 1/1 [04:09&lt;00:00, 249.50s/it]","_view_count":null,"_view_module_version":"1.5.0","description_tooltip":null,"_model_module":"@jupyter-widgets/controls","layout":"IPY_MODEL_7da52ed0ac844bc28c038b8e2f268d3c"}},"34c528108c3845cab068fcd9214383cd":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","state":{"_view_name":"StyleView","_model_name":"ProgressStyleModel","description_width":"initial","_view_module":"@jupyter-widgets/base","_model_module_version":"1.5.0","_view_count":null,"_view_module_version":"1.2.0","bar_color":null,"_model_module":"@jupyter-widgets/controls"}},"3726f2e0cd654c5d8ad9e7d5b3513939":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","state":{"_view_name":"LayoutView","grid_template_rows":null,"right":null,"justify_content":null,"_view_module":"@jupyter-widgets/base","overflow":null,"_model_module_version":"1.2.0","_view_count":null,"flex_flow":null,"width":null,"min_width":null,"border":null,"align_items":null,"bottom":null,"_model_module":"@jupyter-widgets/base","top":null,"grid_column":null,"overflow_y":null,"overflow_x":null,"grid_auto_flow":null,"grid_area":null,"grid_template_columns":null,"flex":null,"_model_name":"LayoutModel","justify_items":null,"grid_row":null,"max_height":null,"align_content":null,"visibility":null,"align_self":null,"height":null,"min_height":null,"padding":null,"grid_auto_rows":null,"grid_gap":null,"max_width":null,"order":null,"_view_module_version":"1.2.0","grid_template_areas":null,"object_position":null,"object_fit":null,"grid_auto_columns":null,"margin":null,"display":null,"left":null}},"5f6b39876e7a4a4084d4f55723eb7430":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","state":{"_view_name":"StyleView","_model_name":"DescriptionStyleModel","description_width":"","_view_module":"@jupyter-widgets/base","_model_module_version":"1.5.0","_view_count":null,"_view_module_version":"1.2.0","_model_module":"@jupyter-widgets/controls"}},"7da52ed0ac844bc28c038b8e2f268d3c":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","state":{"_view_name":"LayoutView","grid_template_rows":null,"right":null,"justify_content":null,"_view_module":"@jupyter-widgets/base","overflow":null,"_model_module_version":"1.2.0","_view_count":null,"flex_flow":null,"width":null,"min_width":null,"border":null,"align_items":null,"bottom":null,"_model_module":"@jupyter-widgets/base","top":null,"grid_column":null,"overflow_y":null,"overflow_x":null,"grid_auto_flow":null,"grid_area":null,"grid_template_columns":null,"flex":null,"_model_name":"LayoutModel","justify_items":null,"grid_row":null,"max_height":null,"align_content":null,"visibility":null,"align_self":null,"height":null,"min_height":null,"padding":null,"grid_auto_rows":null,"grid_gap":null,"max_width":null,"order":null,"_view_module_version":"1.2.0","grid_template_areas":null,"object_position":null,"object_fit":null,"grid_auto_columns":null,"margin":null,"display":null,"left":null}}}}},"cells":[{"cell_type":"markdown","metadata":{"id":"cPPtVRQyzdi7"},"source":["#Code for Converting Data(CSV) to JSON\n","\n"]},{"cell_type":"code","metadata":{"id":"V1cNp_Cizazl"},"source":["import pandas as pd\n","data=pd.read_csv('/content/drive/MyDrive/Toxic Span Detection - Semeval 2021/data_pre-process-Ambuje/tsd_train.csv')"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"nhGbgyqMza2I"},"source":["def properlist(a):\n","    l=[]\n","    l1=[]\n","    # a.append(0)\n","    for i in range(len(a)-1):\n","        # print('i',i)\n","        if a[i]==a[i+1]-1:\n","            l.append(a[i])\n","        else:\n","            # print(a[i])\n","            l.append(a[i])\n","            # print(l)\n","            l1.append(l)\n","            # print(l1)\n","            l=[]\n","            # print(l)\n","    return l1\n","final_data=pd.DataFrame(columns=['spans','text'])"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"nZQOTBzDza5X","executionInfo":{"status":"ok","timestamp":1610657377603,"user_tz":-330,"elapsed":19745,"user":{"displayName":"AMBUJE GUPTA","photoUrl":"","userId":"08374827863947652219"}},"outputId":"615549b3-d44a-4ad5-9ec0-ee1cf6a86801"},"source":["for i in range(0,len(data['spans'])):\n","    a=data['spans'][i]\n","    if len(a)!=2:\n","        print(a)\n","        print(len(a))\n","        a=list(map(int,a[1:-1].split(', ')))\n","        a.append(0)\n","        l1=properlist(a)\n","        final_data=final_data.append({'spans':l1,'text':data['text'][i]},ignore_index=True)\n","    else:\n","        continue\n","        # final_data=final_data.append({'spans':l1,'text':data['text'][i]},ignore_index=True)"],"execution_count":null,"outputs":[{"output_type":"stream","text":["\u001b[1;30;43mStreaming output truncated to the last 5000 lines.\u001b[0m\n","[17, 18, 19, 20, 21, 22]\n","24\n","[0, 1, 2, 3, 4, 5, 6, 7, 8]\n","27\n","[131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165]\n","175\n","[148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 234, 235, 236, 237, 238, 239, 240, 241, 242]\n","95\n","[0, 1, 2, 3, 4, 5]\n","18\n","[36, 37, 38, 39, 40, 41, 42]\n","28\n","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47]\n","182\n","[13, 14, 15, 16, 17, 18, 19, 20]\n","32\n","[255, 256, 257, 258, 259, 260]\n","30\n","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14]\n","50\n","[135, 136, 137, 138, 139, 158, 159, 160, 161, 162, 163, 164, 165, 196, 197, 198, 199, 200]\n","90\n","[28, 29, 30, 31, 32, 33, 67, 68, 69, 70, 71, 72, 73, 74, 75]\n","60\n","[20, 21, 22, 23, 24, 25, 26, 27, 28]\n","36\n","[15, 16, 17, 18, 19, 20]\n","24\n","[975, 976, 977, 978, 979, 980]\n","30\n","[66, 67, 68, 69, 70]\n","20\n","[24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41]\n","72\n","[9, 10, 11, 12, 13]\n","19\n","[16, 17, 18, 19, 20, 21, 22, 23, 24, 25]\n","40\n","[15, 16, 17, 18, 19, 20]\n","24\n","[56, 57, 58, 59, 60, 61]\n","24\n","[5, 6, 7, 8]\n","12\n","[389, 390, 391, 392, 393, 394, 395, 396]\n","40\n","[103, 104, 105, 106, 107, 108]\n","30\n","[8, 9, 10, 11]\n","14\n","[100, 101, 102, 103, 104, 105, 106, 107, 108]\n","45\n","[69, 70, 71]\n","12\n","[31, 32, 33, 34, 35]\n","20\n","[42, 43, 44, 45, 46, 47]\n","24\n","[22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36]\n","60\n","[195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206]\n","60\n","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 79, 80, 81, 82, 83, 84]\n","106\n","[129, 130, 131, 132, 133, 134, 135, 136, 137, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217]\n","175\n","[234, 235, 236, 237, 238, 239]\n","30\n","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]\n","54\n","[25, 26, 27, 28]\n","16\n","[12, 13, 14, 15, 16]\n","20\n","[145, 146, 147, 148, 149, 150]\n","30\n","[12, 13, 14, 15, 16]\n","20\n","[13, 14, 15, 16, 17, 18, 19, 20]\n","32\n","[66, 67, 68, 69, 70, 71, 72, 73, 74, 75]\n","40\n","[17, 18, 19, 20, 21, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195]\n","70\n","[157, 158, 159, 160, 161]\n","25\n","[39, 40, 41, 42, 43]\n","20\n","[0, 1, 2, 3, 4]\n","15\n","[14, 15, 16, 17, 18, 19]\n","24\n","[750, 751, 752, 753, 754, 755, 756, 757, 758, 869, 870, 871, 872, 873, 874, 953, 954, 955, 956, 957, 958, 959]\n","110\n","[25, 26, 27, 28, 29, 30]\n","24\n","[102, 103, 104, 105, 106, 107]\n","30\n","[346, 347, 348, 349, 350, 351, 412, 413, 414, 415, 416]\n","55\n","[73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91]\n","76\n","[18, 19, 20, 21, 22, 23]\n","24\n","[98, 99, 100, 101, 102, 103, 104, 105, 106]\n","43\n","[31, 32, 33, 34, 35, 36, 37, 172, 173, 174, 175, 176, 177, 186, 187, 188, 189, 190, 191]\n","88\n","[16, 17, 18, 19, 20, 65, 66, 67, 68, 69, 70, 87, 88, 89, 90, 91, 92]\n","68\n","[307, 308, 309, 310, 311, 312]\n","30\n","[11, 12, 13, 14, 15, 16]\n","24\n","[0, 1, 2, 3]\n","12\n","[86, 87, 88, 89, 90, 177, 178, 179, 180, 181, 182, 183, 184]\n","60\n","[82, 83, 84, 85, 86, 87, 88, 89, 121, 122, 123, 124]\n","52\n","[204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216]\n","65\n","[13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46]\n","80\n","[124, 125, 126, 127, 128, 129]\n","30\n","[15, 16, 17, 18, 19, 20]\n","24\n","[173, 174, 175, 176, 177, 178, 179]\n","35\n","[140, 141, 142, 143, 144, 145, 146, 147, 148]\n","45\n","[400, 401, 402, 403, 404, 405]\n","30\n","[8, 9, 10, 11, 12, 14, 15, 16, 17]\n","34\n","[14, 15, 16, 17, 18, 19, 82, 83, 84, 85, 86, 87, 216, 217, 218, 219, 220, 221]\n","78\n","[4, 5, 6, 7, 8, 9, 47, 48, 49, 50, 51, 52, 53, 54]\n","50\n","[418, 419, 420, 421, 422, 423]\n","30\n","[62, 63, 64, 65, 66]\n","20\n","[11, 12, 13, 14, 15]\n","20\n","[141, 142, 143, 144]\n","20\n","[25, 26, 27, 28]\n","16\n","[0, 1, 2, 3, 4, 5]\n","18\n","[29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 252, 253, 254, 255, 256, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361]\n","142\n","[13, 14, 15, 16, 17, 18]\n","24\n","[684, 685, 686, 687, 688, 689, 703, 704, 705, 706, 707, 708]\n","60\n","[126, 127, 128, 129, 130, 131, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297]\n","225\n","[61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 111, 112, 113, 114, 115]\n","117\n","[65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76]\n","48\n","[3, 4, 5, 6, 7, 8, 9, 277, 278, 279, 280, 281, 282, 283, 284]\n","61\n","[523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534]\n","60\n","[83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 117, 118, 119, 120, 121, 122, 619, 620, 621, 622]\n","98\n","[88, 89, 90, 91, 92, 93, 94]\n","28\n","[10, 11, 12, 13, 14, 15, 16]\n","28\n","[7, 8, 9, 10, 11, 12]\n","21\n","[0, 1, 2, 3]\n","12\n","[78, 79, 80, 81, 82, 83]\n","24\n","[86, 87, 88, 89, 90, 91]\n","24\n","[50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63]\n","56\n","[8, 9, 10, 11]\n","14\n","[14, 15, 16, 17, 18]\n","20\n","[86, 87, 88, 89, 90, 91, 92, 93, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254]\n","127\n","[17, 18, 19, 20, 21, 22, 23]\n","28\n","[14, 15, 16, 17, 18, 19]\n","24\n","[54, 55, 56, 57, 58]\n","20\n","[54, 55, 56, 57, 58]\n","20\n","[248, 249, 250, 251, 252, 253, 254]\n","35\n","[58, 59, 60, 61, 62, 63, 64, 65]\n","32\n","[59, 60, 61, 62, 63]\n","20\n","[26, 27, 28, 29, 30, 31, 32, 33, 34, 35]\n","40\n","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27]\n","102\n","[91, 92, 93, 94, 95, 96, 97, 98, 99]\n","36\n","[10, 11, 12, 13, 14, 15]\n","24\n","[183, 184, 185, 186, 187, 188, 189, 190]\n","40\n","[53, 54, 55, 56]\n","16\n","[4, 5, 6, 7, 8]\n","15\n","[37, 38, 39, 40, 41, 42, 48, 49, 50, 51, 52, 53, 54, 55]\n","56\n","[27, 28, 29, 30, 31, 32]\n","24\n","[305, 306, 307, 308, 309, 310, 311]\n","35\n","[135, 136, 137, 138]\n","20\n","[4, 5, 6, 7, 8, 9, 10, 11]\n","26\n","[82, 83, 84, 85, 86, 87]\n","24\n","[13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27]\n","60\n","[70, 71, 72, 73, 74, 75, 76, 116, 117, 118, 119, 120]\n","53\n","[20, 21, 22, 23, 24, 25, 26, 27, 28, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40]\n","76\n","[14, 15, 16, 17, 18, 19, 20, 21]\n","32\n","[19, 20, 21, 218, 219, 220]\n","27\n","[219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 245, 246, 247, 248, 249, 250, 251]\n","125\n","[32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 156, 157, 158, 159, 160, 161, 347, 348, 349, 350, 351, 352, 407, 408, 409, 410, 411, 412]\n","274\n","[66, 67, 68, 69]\n","16\n","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 81, 82, 83]\n","106\n","[80, 81, 82, 83, 84, 85]\n","24\n","[8, 9, 10, 11, 12, 232, 233, 234, 235, 236, 237, 238, 239, 240]\n","63\n","[456, 457, 458, 459, 460, 461]\n","30\n","[123, 124, 125, 126, 127, 128, 129, 130, 131, 132]\n","50\n","[32, 33, 34, 35, 36]\n","20\n","[51, 52, 53, 54, 55, 56, 57, 58, 59]\n","36\n","[0, 1, 2, 3]\n","12\n","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 191, 192, 193, 194, 195, 196, 197, 198, 199]\n","99\n","[5, 6, 7, 8, 9]\n","15\n","[98, 99, 100, 101, 102, 103, 104]\n","33\n","[16, 17, 18, 19, 20, 41, 42, 43, 44]\n","36\n","[60, 61, 62, 63, 174, 175, 176, 177, 178, 179, 180]\n","51\n","[89, 90, 91, 92, 93]\n","20\n","[118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131]\n","70\n","[25, 26, 27, 28, 29, 30, 31]\n","28\n","[104, 105, 106, 107]\n","20\n","[23, 24, 25, 26, 27, 28]\n","24\n","[15, 16, 17, 18, 19]\n","20\n","[26, 27, 28, 29]\n","16\n","[66, 67, 68, 69, 70, 71, 72, 73]\n","32\n","[12, 13, 14, 15, 16]\n","20\n","[15, 16, 17, 18, 19, 112, 113, 114, 115, 116, 117]\n","50\n","[9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 166, 167, 168, 169, 170, 171, 172, 173, 174]\n","84\n","[80, 81, 82, 83, 84, 85, 86, 87]\n","32\n","[235, 236, 237, 238, 239, 240]\n","30\n","[17, 18, 19, 20, 21, 22]\n","24\n","[87, 88, 89, 90, 91, 92, 93, 94, 134, 135, 136, 137, 138, 139, 140, 141]\n","72\n","[190, 191, 192, 193, 194]\n","25\n","[144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154]\n","55\n","[38, 39, 40, 41, 42, 43, 92, 93, 94, 95]\n","40\n","[116, 117, 118, 119, 120, 121, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171]\n","240\n","[361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432]\n","180\n","[73, 74, 75, 76, 77, 78, 79, 80, 81, 201, 202, 203, 204, 205, 206, 207, 208]\n","76\n","[57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 155, 156, 157, 158, 159]\n","65\n","[16, 17, 18, 19, 20, 21]\n","24\n","[154, 155, 156, 157, 158, 159]\n","30\n","[55, 56, 57, 58, 59, 60]\n","24\n","[20, 21, 22, 23, 24, 25]\n","24\n","[135, 136, 137, 138, 139, 140, 141]\n","35\n","[299, 300, 301, 302, 303, 304, 305, 306, 307]\n","45\n","[212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 426, 427, 428, 429, 430]\n","110\n","[144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166]\n","115\n","[13, 14, 15, 16, 17]\n","20\n","[7, 8, 9, 10, 11, 12]\n","21\n","[69, 70, 71, 72, 73, 74]\n","24\n","[45, 46, 47, 48, 49, 50, 51, 78, 79, 80, 81, 82, 83, 84]\n","56\n","[32, 33, 34, 35, 36, 37]\n","24\n","[7, 8, 9, 10, 11, 12]\n","21\n","[114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130]\n","85\n","[14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 178, 179, 180, 181, 182]\n","109\n","[215, 216, 217, 218, 219, 220, 221, 222]\n","40\n","[42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 134, 135, 136, 137, 138, 286, 287, 288, 289, 290]\n","94\n","[14, 15, 16, 17, 18, 19, 71, 72, 73, 74, 75, 76]\n","48\n","[48, 49, 50, 51, 52, 53]\n","24\n","[26, 27, 28, 29]\n","16\n","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14]\n","50\n","[0, 1, 2, 3, 37, 38, 39, 40, 41, 42]\n","36\n","[33, 34, 35, 36, 37, 38]\n","24\n","[27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43]\n","68\n","[10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 28, 29, 30, 31, 32]\n","72\n","[16, 17, 18, 19, 20, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117]\n","142\n","[0, 1, 2]\n","9\n","[249, 250, 251, 252, 253, 254]\n","30\n","[0, 1, 2, 3, 4]\n","15\n","[12, 13, 14, 15, 16, 17]\n","24\n","[17, 18, 19, 20, 21, 22, 23, 24, 152, 153, 154, 155, 156, 418, 419, 420, 421, 422, 423, 571, 572, 573, 574, 575, 576]\n","117\n","[114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141]\n","140\n","[25, 26, 27, 28, 29, 30, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580]\n","159\n","[24, 25, 26, 27]\n","16\n","[45, 46, 47, 48, 49, 50, 51, 52, 53, 54]\n","40\n","[49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59]\n","44\n","[28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 74, 75, 76, 77, 78, 79, 80, 81]\n","92\n","[18, 19, 20, 21]\n","16\n","[9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25]\n","67\n","[12, 13, 14, 15, 16, 17, 18, 19, 198, 199, 200, 201, 202, 203, 204, 205, 206, 288, 289, 290, 291, 292, 293, 296, 297, 298, 299, 300, 301, 302, 303, 306, 307, 308, 309, 310, 311, 359, 360, 361, 362, 363, 364, 388, 389, 390, 391, 392, 393, 571, 572, 573, 574, 575, 576, 577, 578, 699, 700, 701, 702, 703]\n","302\n","[4, 5, 6, 7, 8]\n","15\n","[126, 127, 128, 129, 130, 131, 132, 133, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150]\n","100\n","[35, 36, 37, 38, 39]\n","20\n","[210, 211, 212, 213, 214, 215]\n","30\n","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42]\n","162\n","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\n","34\n","[280, 281, 282, 283]\n","20\n","[0, 1, 2, 3, 4]\n","15\n","[29, 30, 31, 32, 33, 34]\n","24\n","[55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66]\n","44\n","[25, 26, 27, 28, 29]\n","20\n","[26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 168, 169, 170, 171]\n","248\n","[50, 51, 52, 53, 54, 55]\n","24\n","[207, 208, 209, 210, 211, 212, 213, 214, 215, 216]\n","50\n","[49, 50, 51, 52, 53, 54, 55, 56, 57]\n","36\n","[1, 2, 3, 4, 15, 16, 17, 18, 19, 20]\n","36\n","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26]\n","98\n","[463, 464, 465, 466, 467, 468, 469, 470, 471, 472]\n","50\n","[311, 312, 313, 314, 315, 316, 317]\n","35\n","[7, 8, 9, 10, 11, 12, 13, 14, 17, 18, 19, 20, 21, 22]\n","53\n","[47, 48, 49, 50]\n","16\n","[31, 32, 33, 34, 35, 36, 37]\n","28\n","[279, 280, 281, 282, 283]\n","25\n","[82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97]\n","64\n","[30, 31, 32, 33, 34, 156, 157, 158, 159, 160]\n","45\n","[28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38]\n","44\n","[32, 33, 34, 35, 36]\n","20\n","[83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119]\n","102\n","[8, 9, 10, 11, 12, 13]\n","22\n","[12, 13, 14, 15, 16, 17, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35]\n","84\n","[50, 51, 52, 53, 54, 55, 56, 57, 58, 88, 89, 90, 91, 92, 93, 94, 95]\n","68\n","[46, 47, 48, 49, 98, 99, 100, 101, 102]\n","39\n","[4, 5, 6, 7, 8, 9, 10, 11, 12, 41, 42, 43, 44, 45, 46, 47, 48]\n","62\n","[155, 156, 157, 158, 159, 160, 161, 162, 170, 171, 172, 173, 174, 175, 176, 177, 439, 440, 441, 442, 443, 444]\n","110\n","[139, 140, 141, 142, 143]\n","25\n","[9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21]\n","51\n","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46]\n","178\n","[71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 115, 116, 117, 118]\n","116\n","[29, 30, 31, 32, 33, 34, 35, 36]\n","32\n","[16, 17, 18, 19, 20, 21]\n","24\n","[41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 100, 101, 102, 103, 104, 105]\n","106\n","[0, 1, 2, 3, 4, 5, 6, 7, 268, 269, 270, 271, 272, 273, 274, 275]\n","64\n","[43, 44, 45, 46, 47]\n","20\n","[15, 16, 17, 18, 19]\n","20\n","[72, 73, 74, 75, 76, 77]\n","24\n","[19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34]\n","64\n","[6, 7, 8, 9, 10, 28, 29, 30, 31]\n","32\n","[72, 73, 74, 75, 76, 77, 78, 79, 80]\n","36\n","[174, 175, 176, 317, 318, 319, 320, 321, 322, 323, 324, 325]\n","60\n","[18, 19, 20, 21, 22, 23]\n","24\n","[27, 28, 29, 30, 31, 32, 33, 34, 35]\n","36\n","[16, 17, 18, 19, 20]\n","20\n","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38]\n","146\n","[458, 459, 460, 829, 830, 831, 832]\n","35\n","[33, 34, 35, 36, 37, 38]\n","24\n","[68, 69, 70, 71, 72]\n","20\n","[0, 1, 2, 3, 103, 104, 105, 106]\n","32\n","[272, 273, 274, 275, 276, 277, 283, 284, 285, 286, 287]\n","55\n","[607, 608, 609, 610, 611, 612]\n","30\n","[32, 33, 34, 35, 36, 37, 38, 39, 40, 46, 47, 48, 49, 55, 56, 57, 58, 59, 60, 61, 62, 63, 78, 79, 80, 81, 82, 83, 84, 85, 123, 124, 125, 126, 127, 128, 166, 167, 168, 169, 170]\n","175\n","[34, 35, 36, 37, 132, 133, 134, 135, 136, 137, 138, 139]\n","56\n","[2, 3, 4, 5, 6, 7]\n","18\n","[2, 3, 4, 5]\n","12\n","[12, 13, 14, 15, 16, 17, 18, 19, 20, 21]\n","40\n","[142, 143, 144, 145, 146]\n","25\n","[12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 57, 58, 59, 60]\n","92\n","[36, 37, 38, 39, 40, 41, 42, 43, 44]\n","36\n","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 67, 68, 69, 70, 71, 72, 73, 74]\n","106\n","[5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 68, 69, 70, 71, 72, 73, 74]\n","83\n","[59, 60, 61, 62]\n","16\n","[210, 211, 212, 213, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238]\n","95\n","[12, 13, 14, 15, 16, 17, 18, 19, 20]\n","36\n","[26, 27, 28, 29, 30]\n","20\n","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]\n","54\n","[516, 517, 518, 519, 520, 521, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708]\n","80\n","[39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 300, 301, 302, 303, 304, 305, 306]\n","103\n","[293, 294, 295, 296, 297, 298, 299]\n","35\n","[54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67]\n","56\n","[54, 55, 56, 57, 255, 256, 257, 258]\n","36\n","[56, 57, 58, 59, 60]\n","20\n","[72, 73, 74, 75]\n","16\n","[35, 36, 37, 38, 39]\n","20\n","[6, 7, 8, 9, 10, 11, 12]\n","24\n","[332, 333, 334, 335, 336, 337, 338, 339]\n","40\n","[66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77]\n","48\n","[70, 71, 72, 73, 74, 75]\n","24\n","[25, 26, 27, 28, 29]\n","20\n","[118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130]\n","65\n","[0, 1, 2, 3, 4, 5, 6]\n","21\n","[35, 36, 37, 38, 39, 40, 41, 42, 43]\n","36\n","[12, 13, 14, 15, 16, 17, 18]\n","28\n","[9, 10, 11, 12, 13, 14, 15]\n","27\n","[84, 85, 86, 87]\n","16\n","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23]\n","86\n","[265, 266, 267, 268, 269, 270, 271, 272, 273]\n","45\n","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]\n","46\n","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47]\n","182\n","[0, 1, 2, 3, 4, 5]\n","18\n","[37, 38, 39, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337]\n","77\n","[0, 1, 2, 3, 4, 5, 6, 7, 8, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80]\n","83\n","[22, 23, 24, 25, 26, 27, 28]\n","28\n","[0, 1, 2, 3, 4, 5, 9, 10, 11, 12, 13, 14, 15]\n","45\n","[14, 15, 16, 17, 18]\n","20\n","[20, 21, 22, 23, 24, 25, 26]\n","28\n","[78, 79, 80, 81, 82, 83]\n","24\n","[366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398]\n","165\n","[44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58]\n","60\n","[39, 40, 41, 42, 43, 44]\n","24\n","[216, 217, 218, 219, 220, 221, 222, 223, 224]\n","45\n","[29, 30, 31, 32]\n","16\n","[52, 53, 54, 55, 56]\n","20\n","[148, 149, 150, 151, 160, 161, 162, 163, 164, 165, 166, 167]\n","60\n","[20, 21, 22, 23, 24, 25]\n","24\n","[56, 57, 58, 59, 60, 61, 62, 63]\n","32\n","[69, 70, 71, 72, 73, 74, 75, 76, 77, 119, 120, 121, 122, 123, 124]\n","66\n","[43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 60, 61, 62, 63, 64]\n","60\n","[116, 117, 118, 119]\n","20\n","[24, 25, 26, 27]\n","16\n","[64, 65, 66, 67, 68, 69, 70, 71]\n","32\n","[116, 117, 118, 119, 120]\n","25\n","[40, 41, 42, 43, 44, 67, 68, 69, 70, 71, 72, 73, 74, 140, 141, 142, 143, 144, 145]\n","82\n","[0, 1, 2, 3, 10, 11, 12, 13, 14, 15, 16, 17]\n","44\n","[150, 151, 152, 153]\n","20\n","[52, 53, 54, 55, 56, 57, 58, 231, 232, 233, 234, 235, 236]\n","58\n","[58, 59, 60, 61, 62, 63, 255, 256, 257, 258, 259, 408, 409, 410, 411, 412, 413, 430, 431, 432, 433, 434]\n","104\n","[35, 36, 37, 38, 39, 40, 200, 201, 202, 203, 204, 205]\n","54\n","[168, 169, 170, 171, 172, 173, 174, 175]\n","40\n","[460, 461, 462, 463]\n","20\n","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]\n","30\n","[50, 51, 52, 53, 54]\n","20\n","[63, 64, 65, 66]\n","16\n","[197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212]\n","80\n","[18, 19, 20, 21, 22]\n","20\n","[89, 90, 91, 92]\n","16\n","[47, 48, 49, 50, 51, 52]\n","24\n","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25]\n","94\n","[0, 1, 2, 3, 4]\n","15\n","[107, 108, 109, 110, 111, 112, 113]\n","35\n","[47, 48, 49, 50, 51, 57, 58, 59, 60, 89, 90, 91, 96, 97, 98, 99, 100, 101, 102, 103]\n","84\n","[4, 5, 6, 7, 8, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237]\n","65\n","[636, 637, 638, 639, 640]\n","25\n","[22, 23, 24, 25, 26]\n","20\n","[69, 70, 71, 72, 73]\n","20\n","[61, 62, 63, 64, 65]\n","20\n","[30, 31, 32, 33, 34, 35, 36, 37]\n","32\n","[43, 44, 45, 46]\n","16\n","[132, 133, 134, 135, 136, 137, 138, 139, 140]\n","45\n","[21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38]\n","72\n","[38, 39, 40, 41, 42]\n","20\n","[49, 50, 51, 52, 53, 54, 55]\n","28\n","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88]\n","134\n","[589, 590, 591, 592, 593, 594, 595, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883]\n","105\n","[13, 14, 15, 16, 17]\n","20\n","[27, 28, 29, 30, 31, 32, 33]\n","28\n","[441, 442, 443, 444, 445, 446]\n","30\n","[291, 292, 293, 294, 295, 296, 297, 298, 299]\n","45\n","[53, 54, 55, 56, 57, 58, 59, 60, 61]\n","36\n","[111, 112, 113, 114, 115]\n","25\n","[50, 51, 52, 53, 54, 55, 56, 57, 58]\n","36\n","[30, 31, 32, 33, 34]\n","20\n","[136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146]\n","55\n","[4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 69, 70, 71, 72, 73, 74]\n","90\n","[26, 27, 28, 29, 31, 32, 33, 34, 35, 36]\n","40\n","[283, 284, 285, 286, 479, 480, 481, 482, 483, 484]\n","50\n","[227, 228, 229, 230, 231, 232, 233, 234, 235, 264, 265, 266, 267, 268, 269, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 461, 462, 463, 464, 465, 466, 467, 468, 469]\n","170\n","[24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 61, 62, 63, 64, 65, 66]\n","112\n","[17, 18, 19, 20, 137, 138, 139, 140, 141, 142]\n","46\n","[46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56]\n","44\n","[44, 45, 46, 47, 48]\n","20\n","[17, 18, 19, 20, 21, 22, 23, 57, 58, 59, 60, 61, 62, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97]\n","112\n","[464, 465, 466, 467, 468, 469, 470, 471, 472, 633, 634, 635, 636]\n","65\n","[0, 1, 2, 3, 4, 5, 19, 20, 21, 22, 23, 24]\n","42\n","[8, 9, 10, 11, 12, 13]\n","22\n","[104, 105, 106, 107, 108, 109]\n","30\n","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31]\n","118\n","[212, 213, 214, 215, 216, 217, 218, 219]\n","40\n","[96, 97, 98]\n","12\n","[78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115]\n","164\n","[6, 7, 8, 9]\n","12\n","[194, 195, 196, 197, 325, 326, 327, 328, 329, 330, 331]\n","55\n","[16, 17, 18, 19, 20, 21, 40, 41, 42, 43, 44]\n","44\n","[34, 35, 36]\n","12\n","[228, 229, 230, 231]\n","20\n","[94, 95, 96, 97, 98]\n","20\n","[11, 12, 13, 14, 101, 102, 103, 104, 105, 106]\n","46\n","[128, 129, 130, 131, 132, 133]\n","30\n","[66, 67, 68]\n","12\n","[33, 34, 35, 36, 37, 38, 39, 93, 94, 95, 96, 97, 98, 99, 100]\n","61\n","[48, 49, 50, 51, 52, 53, 54, 55, 56]\n","36\n","[116, 117, 118, 119, 120]\n","25\n","[36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48]\n","52\n","[8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21]\n","54\n","[59, 60, 61, 62, 63, 64, 65, 66]\n","32\n","[44, 45, 46, 47]\n","16\n","[150, 151, 152, 153, 154, 155, 156]\n","35\n","[33, 34, 35, 36, 37, 38, 39, 40]\n","32\n","[16, 17, 18, 19]\n","16\n","[9, 10, 11, 12]\n","15\n","[10, 11, 12, 23, 24, 25, 26, 27]\n","32\n","[253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 282, 283, 284, 285, 286, 287]\n","100\n","[23, 24, 25, 26, 27]\n","20\n","[33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54]\n","84\n","[70, 71, 72, 73, 74, 75]\n","24\n","[20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30]\n","44\n","[58, 59, 60, 61, 62]\n","20\n","[83, 84, 85, 86, 87, 88, 89, 90, 93, 94, 95, 96, 97, 98, 99, 116, 117, 118, 119, 120, 121]\n","90\n","[3, 4, 5, 6]\n","12\n","[211, 212, 213, 214, 215]\n","25\n","[58, 59, 60, 61]\n","16\n","[24, 25, 26, 27, 28, 29, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95]\n","64\n","[74, 75, 76, 77, 78, 79, 80, 81, 82, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311]\n","86\n","[523, 524, 525, 526, 527, 528, 529, 530, 531, 532]\n","50\n","[10, 11, 12, 13, 14, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33]\n","72\n","[21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33]\n","52\n","[122, 123, 124, 125, 126, 127, 128, 129, 130]\n","45\n","[50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 602, 603, 604, 605, 606]\n","65\n","[50, 51, 52, 53, 54, 55]\n","24\n","[34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45]\n","48\n","[12, 13, 14, 15, 16, 17]\n","24\n","[9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103]\n","119\n","[46, 47, 48, 49, 50, 51, 52, 53, 54, 241, 242, 243, 244, 245, 246]\n","66\n","[43, 44, 45, 46, 47, 48, 49]\n","28\n","[86, 87, 88, 89]\n","16\n","[59, 60, 61, 62, 63, 64, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544]\n","94\n","[202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 219, 220, 221, 222, 223, 224]\n","80\n","[77, 78, 79, 80, 81, 82, 83]\n","28\n","[260, 261, 262, 263, 264]\n","25\n","[167, 168, 169, 170, 171, 172, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 386, 387, 388, 389, 390, 391]\n","135\n","[11, 12, 13, 14, 15, 16, 17, 18, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264]\n","182\n","[25, 26, 27, 28, 140, 141, 142, 143, 144]\n","41\n","[258, 259, 260, 261, 262]\n","25\n","[10, 11, 12, 13, 14, 15, 16]\n","28\n","[44, 45, 46, 47, 48]\n","20\n","[27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42]\n","64\n","[53, 54, 55, 56, 57, 58]\n","24\n","[57, 58, 59, 60, 61, 62]\n","24\n","[83, 84, 85, 86, 87, 88, 89, 90]\n","32\n","[143, 144, 145, 146, 147, 148, 149, 150, 151]\n","45\n","[41, 42, 43, 44, 45]\n","20\n","[15, 16, 17, 18, 19, 180, 181, 182, 183, 184, 185]\n","50\n","[36, 37, 38, 39, 241, 242, 243, 244, 245, 246, 401, 402, 403, 404, 405, 406]\n","76\n","[71, 72, 73, 74, 75, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162]\n","70\n","[454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464]\n","55\n","[39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51]\n","52\n","[46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66]\n","84\n","[109, 110, 111, 112, 113]\n","25\n","[5, 6, 7, 8, 9]\n","15\n","[203, 204, 205, 206, 207, 208]\n","30\n","[42, 43, 44, 45, 46, 47, 48, 177, 178, 179, 180, 181, 253, 254, 255, 256, 257, 258, 259, 278, 279, 280, 281, 282, 304, 305, 306, 307, 308, 309]\n","143\n","[38, 39, 40, 41, 42]\n","20\n","[13, 14, 15, 16, 17]\n","20\n","[76, 77, 78, 79, 80, 81, 82]\n","28\n","[32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43]\n","44\n","[7, 8, 9, 10, 11, 12]\n","21\n","[26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40]\n","60\n","[12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23]\n","48\n","[155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172]\n","90\n","[17, 18, 19, 20, 21, 22]\n","24\n","[598, 599, 600, 601, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649]\n","205\n","[8, 9, 10, 11]\n","14\n","[144, 145, 146, 147, 148, 299, 300, 301, 302, 303]\n","50\n","[95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440]\n","470\n","[18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34]\n","68\n","[12, 13, 14, 15, 16, 17, 18, 19, 20, 21]\n","40\n","[364, 365, 366, 367, 368, 369]\n","30\n","[138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164]\n","135\n","[95, 96, 97, 98, 302, 303, 304, 305, 306, 307, 308, 334, 335, 336, 337, 349, 350, 351, 352]\n","91\n","[49, 50, 51, 52, 53, 54]\n","24\n","[39, 40, 41, 42, 43, 44, 45, 46, 47, 62, 63, 64, 65, 66, 67, 68, 69, 70]\n","72\n","[113, 114, 115, 116, 117]\n","25\n","[0, 1, 2, 3, 4, 140, 141, 142, 143, 144]\n","40\n","[7, 8, 9, 10, 11, 12, 13, 14]\n","29\n","[6, 7, 8, 9, 10, 11]\n","20\n","[36, 37, 38, 39, 40, 41]\n","24\n","[34, 35, 36, 37, 38, 39, 92, 93, 94]\n","36\n","[27, 28, 29, 30, 31, 32, 33]\n","28\n","[47, 48, 49, 50, 51, 52, 53, 149, 150, 151, 152, 153, 154, 155]\n","63\n","[0, 1, 2, 3, 4, 5, 6]\n","21\n","[26, 27, 28, 29, 30, 31]\n","24\n","[32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44]\n","52\n","[0, 1, 2]\n","9\n","[13, 14, 15, 16, 17, 18, 40, 41, 42, 43]\n","40\n","[30, 31, 32, 33, 34]\n","20\n","[35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 89, 90, 91, 92, 93]\n","80\n","[88, 89, 90, 91, 92]\n","20\n","[26, 27, 28, 29]\n","16\n","[86, 87, 88, 89, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124]\n","71\n","[23, 24, 25, 26, 27, 28, 173, 174, 175, 176, 177, 178, 243, 244, 245, 246, 247, 248]\n","84\n","[245, 246, 247, 248, 249, 250, 251]\n","35\n","[72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83]\n","48\n","[71, 72, 73, 74, 76, 77, 78, 79, 80, 81]\n","40\n","[56, 57, 58, 59, 60]\n","20\n","[14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 50, 51, 52, 53, 54, 55]\n","68\n","[16, 17, 18, 19, 20, 21, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 618, 619, 620, 621, 622]\n","139\n","[21, 22, 23, 24, 25, 26, 27, 28]\n","32\n","[38, 39, 40, 41, 42, 43]\n","24\n","[194, 195, 196, 197, 198, 199, 847, 848, 849, 850]\n","50\n","[186, 187, 188, 189]\n","20\n","[23, 24, 25, 26, 27]\n","20\n","[11, 12, 13, 14, 15, 16]\n","24\n","[9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31]\n","91\n","[173, 174, 175, 176, 177]\n","25\n","[214, 215, 216, 217]\n","20\n","[42, 43, 44, 45, 46, 50, 51, 52, 53]\n","36\n","[27, 28, 29, 30, 31]\n","20\n","[133, 134, 135, 136, 137, 138, 139]\n","35\n","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18]\n","66\n","[95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109]\n","70\n","[102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 137, 138, 139, 140, 141, 142, 143, 144, 195, 196]\n","105\n","[348, 349, 350, 351, 352, 353, 354, 355, 356]\n","45\n","[14, 15, 16, 17, 18, 19]\n","24\n","[19, 20, 21, 22, 23, 24, 25, 26]\n","32\n","[32, 33, 34, 35]\n","16\n","[76, 77, 78, 79, 80, 81, 82, 137, 138, 139, 140, 141, 142, 143, 144, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213]\n","128\n","[12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25]\n","52\n","[41, 42, 43, 44, 45, 46, 212, 213, 214, 215, 216, 217]\n","54\n","[9, 10, 11, 12, 13]\n","19\n","[104, 105, 106, 107, 108, 109, 110, 111, 112]\n","45\n","[63, 64, 65]\n","12\n","[41, 42, 43, 44, 45]\n","20\n","[69, 70, 71, 72, 73, 176, 177, 178, 179, 180, 181, 182, 183, 184]\n","65\n","[5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27]\n","87\n","[9, 10, 11, 12, 13, 14, 15]\n","27\n","[12, 13, 14, 15, 16]\n","20\n","[26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97]\n","108\n","[102, 103, 104, 105, 106, 107, 108, 109]\n","40\n","[13, 14, 15, 16, 17, 18, 19, 20, 21]\n","36\n","[11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35]\n","100\n","[0, 1, 2, 3, 4, 40, 41, 42, 43, 44, 45, 114, 115, 116, 117, 118, 119, 120, 121]\n","79\n","[128, 129, 130, 131, 132, 328, 329, 330, 331, 332, 333, 334, 335]\n","65\n","[5, 6, 7, 8, 9, 10, 11, 12]\n","27\n","[36, 37, 38, 39, 40, 41]\n","24\n","[42, 43, 44, 45, 46]\n","20\n","[98, 99, 100]\n","13\n","[77, 78, 79, 83, 84, 85, 86, 87, 116, 117, 118, 125, 126, 127, 128, 129, 130]\n","77\n","[14, 15, 16, 17, 18, 76, 77, 78, 79, 80, 187, 188, 189, 190, 191, 192, 193, 194, 195, 201, 202, 203, 204, 205, 206, 207, 208, 209]\n","130\n","[153, 154, 155, 156, 157, 158]\n","30\n","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14]\n","50\n","[45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55]\n","44\n","[77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89]\n","52\n","[20, 21, 22, 23, 24, 25, 26]\n","28\n","[20, 21, 22, 23, 24, 25]\n","24\n","[0, 1, 2, 3, 4, 5, 6, 7, 8]\n","27\n","[11, 12, 13, 14, 15, 16, 17]\n","28\n","[5, 6, 7, 8, 9, 10, 11, 12, 13]\n","31\n","[118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155]\n","190\n","[40, 41, 42, 43]\n","16\n","[4, 5, 6, 7]\n","12\n","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21]\n","78\n","[79, 80, 81, 82, 83]\n","20\n","[72, 73, 74, 75, 76, 77]\n","24\n","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50]\n","194\n","[40, 41, 42, 43]\n","16\n","[7, 8, 9, 10, 11, 12, 81, 82, 83, 84, 85, 86]\n","45\n","[22, 23, 24, 25]\n","16\n","[31, 32, 33, 34, 35, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53]\n","68\n","[19, 20, 21, 22, 23, 24, 25, 26, 27]\n","36\n","[16, 17, 18, 19, 20, 21, 22, 23, 28, 29, 30, 31]\n","48\n","[38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51]\n","56\n","[14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 36, 37, 38, 39]\n","80\n","[21, 22, 23, 24]\n","16\n","[62, 63, 64, 65, 75, 76, 77, 78, 79, 80, 92, 93, 94, 95, 96]\n","60\n","[51, 52, 53]\n","12\n","[262, 263, 264, 265, 266]\n","25\n","[22, 23, 24, 25, 26]\n","20\n","[64, 65, 66, 67, 68, 69, 75, 76, 77, 78, 79, 80]\n","48\n","[69, 70, 71, 72, 73, 74, 323, 324, 325, 326]\n","44\n","[36, 37, 38, 39, 40, 41, 42, 43]\n","32\n","[41, 42, 43, 44]\n","16\n","[58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128]\n","118\n","[20, 21, 22, 23, 24, 25, 26]\n","28\n","[8, 9, 10, 11, 12, 13, 14, 15, 16, 424, 425, 426, 427, 428, 429, 430, 431]\n","74\n","[127, 128, 129, 130, 131, 132, 133]\n","35\n","[0, 1, 2, 3, 4, 5, 6, 34, 35, 36, 37, 38, 39, 40, 41]\n","53\n","[143, 144, 145, 146, 147]\n","25\n","[18, 19, 20, 21, 22, 23, 24, 25, 138, 139, 140, 141, 142]\n","57\n","[52, 53, 54, 55, 56, 57]\n","24\n","[11, 12, 13, 14]\n","16\n","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20]\n","74\n","[24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39]\n","64\n","[200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212]\n","65\n","[127, 128, 129, 130, 131, 132, 133, 134, 135, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186]\n","165\n","[19, 20, 21, 22, 23, 24, 25, 26, 27, 28]\n","40\n","[86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103]\n","76\n","[92, 93, 94, 95]\n","16\n","[130, 131, 132, 133, 134]\n","25\n","[218, 219, 220, 221, 222, 223, 224, 225, 226]\n","45\n","[20, 21, 22, 23, 24]\n","20\n","[18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29]\n","48\n","[39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58]\n","80\n","[54, 55, 56, 57]\n","16\n","[55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76]\n","88\n","[365, 366, 367, 368, 369]\n","25\n","[9, 10, 11, 12, 13]\n","19\n","[17, 18, 19, 20, 21, 22, 23, 24, 67, 68, 69, 70]\n","48\n","[37, 38, 39, 40, 41, 42, 43]\n","28\n","[20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30]\n","44\n","[9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 112, 113, 114, 115, 116, 117, 118, 119]\n","159\n","[11, 12, 13, 14, 15, 16, 38, 39, 40, 41, 42, 43, 44, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270]\n","112\n","[73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102]\n","107\n","[181, 182, 183, 184, 185, 186]\n","30\n","[119, 120, 121, 122, 123, 124, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 204, 205, 206, 207, 208, 209, 210, 211]\n","150\n","[11, 12, 13, 14]\n","16\n","[195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215]\n","105\n","[43, 44, 45, 46, 47, 48, 49, 50, 51]\n","36\n","[42, 43, 44]\n","12\n","[43, 44, 45, 46, 47, 48, 49, 50, 51]\n","36\n","[9, 10, 11, 12, 13]\n","19\n","[137, 138, 139, 140, 167, 168, 169, 170, 171, 172, 173, 174]\n","60\n","[109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 148, 149, 150, 151]\n","70\n","[29, 30, 31, 32, 33, 34, 35, 36, 37, 42, 43, 44, 45, 46, 47, 48, 49, 50]\n","72\n","[70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82]\n","52\n","[38, 39, 40, 41, 42]\n","20\n","[90, 91, 92, 93, 94, 95, 96, 97, 98]\n","36\n","[48, 49, 50, 51, 52, 53, 54, 55]\n","32\n","[54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66]\n","52\n","[12, 13, 14, 15, 16]\n","20\n","[7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27]\n","81\n","[52, 53, 54, 55, 56, 179, 180, 181, 182, 183, 184, 185, 186]\n","60\n","[78, 79, 80, 81, 82]\n","20\n","[19, 20, 21, 22, 23, 33, 34, 35, 36, 37, 38, 39, 40, 41]\n","56\n","[4, 5, 6, 7, 8]\n","15\n","[13, 14, 15, 16, 17, 18, 19, 20, 21, 22]\n","40\n","[11, 12, 13, 14, 15, 16]\n","24\n","[144, 145, 146, 147, 148]\n","25\n","[107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126]\n","100\n","[104, 105, 106, 159, 160, 161, 162, 163, 164, 165, 166, 167]\n","60\n","[15, 16, 17, 18, 19, 20, 21, 22]\n","32\n","[323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334]\n","60\n","[78, 79, 80, 81, 82, 83]\n","24\n","[18, 19, 20, 21, 22]\n","20\n","[11, 12, 13, 14]\n","16\n","[16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 74, 75, 76, 77, 78, 79, 82, 83, 84, 85, 86, 87, 88, 95, 96, 97, 98, 99, 100]\n","117\n","[25, 26, 27, 28, 29, 30]\n","24\n","[11, 12, 13, 14, 15, 203, 204, 205, 206, 207, 208, 209, 210, 211]\n","65\n","[437, 438, 439, 440, 441, 442, 443, 444]\n","40\n","[91, 92, 93, 94]\n","16\n","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 100, 101, 102, 103, 104, 111, 112, 113, 114, 115, 116, 117, 118]\n","95\n","[42, 43, 44, 45, 46]\n","20\n","[7, 8, 9, 10, 11, 12]\n","21\n","[426, 427, 428, 429, 430, 435, 436, 437, 438, 439, 440]\n","55\n","[39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59]\n","84\n","[363, 364, 365, 366, 367, 368, 369, 411, 412, 413, 414, 415]\n","60\n","[124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135]\n","60\n","[44, 45, 46, 47, 48, 49, 50, 51]\n","32\n","[192, 193, 194, 195, 196, 475, 476, 477, 478, 479]\n","50\n","[4, 5, 6, 7, 8]\n","15\n","[11, 12, 13, 14, 15, 16, 165, 166, 167, 168]\n","44\n","[62, 63, 64, 65]\n","16\n","[16, 17, 18, 19, 20, 21, 22, 23]\n","32\n","[85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101]\n","70\n","[83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 114, 115, 116, 117, 118, 119]\n","118\n","[22, 23, 24, 25, 26, 27, 28, 29]\n","32\n","[373, 374, 375, 376, 377]\n","25\n","[19, 20, 21, 22, 23, 24]\n","24\n","[18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35]\n","72\n","[83, 84, 85, 86, 87, 88]\n","24\n","[367, 368, 369, 370]\n","20\n","[133, 134, 135, 136, 137]\n","25\n","[17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40]\n","96\n","[31, 32, 33, 34, 35, 36, 37, 38, 39]\n","36\n","[127, 128, 129, 130, 131]\n","25\n","[23, 24, 25, 26, 27]\n","20\n","[259, 260, 261, 262, 263, 264, 265]\n","35\n","[0, 1, 2, 3, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31]\n","60\n","[139, 140, 141, 142, 143, 144, 147, 148, 149, 150, 151, 152, 153, 154]\n","70\n","[292, 293, 294, 295, 296]\n","25\n","[36, 37, 38, 39, 40, 41, 42, 43]\n","32\n","[26, 27, 28, 29, 30, 31, 378, 379, 380, 381, 382, 383, 392, 393, 394, 395, 396, 397]\n","84\n","[98, 99, 100, 101, 102]\n","23\n","[14, 15, 16, 17, 18, 78, 79, 80, 81]\n","36\n","[6, 7, 8, 9, 10, 11, 56, 57, 58, 59, 92, 93, 94, 95, 96]\n","56\n","[31, 32, 33, 34, 35, 36]\n","24\n","[0, 1, 2, 3, 4, 5]\n","18\n","[25, 26, 27, 28, 29, 30]\n","24\n","[278, 279, 280, 281, 282, 283]\n","30\n","[17, 18, 19, 20, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186]\n","166\n","[55, 56, 57, 58, 59, 60]\n","24\n","[74, 75, 76, 77, 78, 79, 80, 81]\n","32\n","[23, 24, 25, 26, 27, 28, 29, 30, 31]\n","36\n","[18, 19, 20, 21, 22]\n","20\n","[259, 260, 261, 262, 263, 264]\n","30\n","[65, 66, 67, 68, 69, 70, 71, 72, 73]\n","36\n","[10, 11, 12, 13, 14]\n","20\n","[16, 17, 18, 19, 269, 270, 271, 272, 273, 335, 336, 337, 338, 339]\n","66\n","[150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 172, 173, 174, 175, 176, 177, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 228, 229, 230, 231]\n","180\n","[194, 195, 196, 197, 198]\n","25\n","[44, 45, 46, 47, 48, 49]\n","24\n","[16, 17, 18, 19, 20]\n","20\n","[11, 12, 13, 14, 15, 27, 28, 29, 30, 31, 32, 33, 34, 161, 162, 163, 164, 165, 166, 167, 168]\n","92\n","[9, 10, 11, 12, 91, 92, 93, 94, 95, 96, 97]\n","43\n","[52, 53, 54, 55, 56, 57, 58, 59]\n","32\n","[105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117]\n","65\n","[34, 35, 36, 37, 38]\n","20\n","[35, 36, 37, 38, 39, 40, 41, 42]\n","32\n","[25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36]\n","48\n","[136, 137, 138, 139, 140, 141]\n","30\n","[41, 42, 43, 44, 45, 46]\n","24\n","[30, 31, 32, 33]\n","16\n","[261, 262, 263, 264, 265, 266, 267]\n","35\n","[152, 153, 154, 155, 156]\n","25\n","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20]\n","74\n","[87, 88, 89, 90, 91, 92]\n","24\n","[11, 12, 13, 14]\n","16\n","[32, 33, 34, 35, 36, 37, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342]\n","129\n","[19, 20, 21, 22, 167, 168, 169, 170, 171, 172, 173]\n","51\n","[31, 32, 33, 34, 35, 36, 37, 38, 39]\n","36\n","[8, 9, 10, 11]\n","14\n","[23, 24, 25, 26]\n","16\n","[134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148]\n","75\n","[154, 155, 156, 157, 158, 159]\n","30\n","[390, 391, 392, 393, 394]\n","25\n","[282, 283, 284, 285, 288, 289, 290, 291, 292, 293, 294, 295, 296, 306, 307, 308, 309, 310, 311, 312, 313]\n","105\n","[110, 111, 112, 113]\n","20\n","[13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34]\n","88\n","[8, 9, 10, 11, 12, 18, 19, 20, 21, 22]\n","38\n","[185, 186, 187, 188, 189, 190]\n","30\n","[83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 185, 186, 187, 188]\n","60\n","[0, 1, 2, 3, 4, 5, 81, 82, 83, 84, 85, 86]\n","42\n","[13, 14, 15, 16, 205, 206, 207]\n","31\n","[56, 57, 58, 59]\n","16\n","[8, 9, 10]\n","10\n","[15, 16, 17, 18, 19, 20]\n","24\n","[18, 19, 20, 21, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 376, 377, 378, 379, 380, 381, 382, 383, 384, 408, 409, 410, 411, 429, 430, 431, 432, 433, 578, 579, 580, 581, 582, 583, 584, 585, 586, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664]\n","250\n","[82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92]\n","44\n","[74, 75, 76, 77]\n","16\n","[15, 16, 17, 18, 19, 52, 53, 54, 55, 56, 57, 58]\n","48\n","[71, 72, 73, 121, 122, 123, 124, 125, 126, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226]\n","92\n","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 888, 889, 890, 891, 892, 893, 894, 895, 896]\n","91\n","[349, 350, 351, 352, 353, 354, 355, 356]\n","40\n","[7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 33, 34, 35, 36, 37, 38]\n","85\n","[46, 47, 48, 49, 50, 51, 52]\n","28\n","[103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 141, 142, 143, 144]\n","75\n","[47, 48, 49, 50]\n","16\n","[36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 248, 249, 250, 251, 252]\n","73\n","[41, 42, 43, 44, 45, 46, 47, 48, 49, 50]\n","40\n","[11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23]\n","52\n","[0, 1, 2, 3, 4, 5, 34, 35, 36, 37, 38, 39]\n","42\n","[21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32]\n","48\n","[190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244]\n","275\n","[78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111]\n","148\n","[9, 10, 11, 12, 13, 14, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55]\n","75\n","[596, 597, 598, 599, 600, 601, 602]\n","35\n","[137, 138, 139, 140, 141, 142]\n","30\n","[27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51]\n","100\n","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17]\n","62\n","[0, 1, 2, 3]\n","12\n","[80, 81, 82, 83, 84, 85]\n","24\n","[0, 1, 2, 3, 4, 5]\n","18\n","[54, 55, 56, 57, 58, 59]\n","24\n","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]\n","46\n","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24]\n","90\n","[88, 89, 90, 91, 92]\n","20\n","[71, 72, 73, 74, 75, 76, 77, 78, 79]\n","36\n","[351, 352, 353, 354, 355, 356]\n","30\n","[95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106]\n","55\n","[197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 215, 216, 217, 218, 219, 220, 221, 222, 225, 226, 227, 228, 229, 230]\n","140\n","[187, 188, 189, 190, 191, 192]\n","30\n","[379, 380, 381, 382, 383]\n","25\n","[38, 39, 40, 41, 42, 43]\n","24\n","[53, 54, 55, 56, 57, 58]\n","24\n","[95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130]\n","175\n","[49, 50, 51, 52, 53, 54, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322]\n","194\n","[468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702]\n","130\n","[85, 86, 87, 88, 89]\n","20\n","[969, 970, 971, 972, 973, 974]\n","30\n","[14, 15, 16, 17, 18, 19, 20]\n","28\n","[18, 19, 20, 21, 22, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45]\n","92\n","[22, 23, 24, 25, 26, 27]\n","24\n","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]\n","30\n","[383, 384, 385, 386, 387, 388]\n","30\n","[55, 56, 57, 58, 59, 60]\n","24\n","[0, 1, 2, 3, 28, 29, 30, 31, 32]\n","32\n","[54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 164, 165, 166, 167, 168, 169, 170, 171, 172, 184, 185, 186, 187, 188, 189, 190, 191]\n","153\n","[279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302]\n","120\n","[244, 245, 246, 247, 248, 249, 250, 251, 252]\n","45\n","[14, 15, 16, 17, 18, 19, 20, 21, 32, 33, 34, 35, 36, 37, 38, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 84, 85, 86, 87, 88, 89, 90, 91, 92]\n","136\n","[7, 8, 9, 10]\n","13\n","[20, 21, 22, 23, 24, 25, 26, 27]\n","32\n","[164, 165, 166, 167, 168, 169, 170]\n","35\n","[78, 79, 80, 81, 82, 83, 84, 85, 86]\n","36\n","[25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37]\n","52\n","[67, 68, 69, 70, 71, 72, 73, 74]\n","32\n","[87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115]\n","132\n","[0, 1, 2, 3, 4, 5]\n","18\n","[37, 38, 39, 40, 41, 42]\n","24\n","[52, 53, 54, 55, 56, 57]\n","24\n","[73, 74, 75, 76, 77]\n","20\n","[36, 37, 38, 39, 40, 41, 42, 43, 142, 143, 144, 145, 146, 147]\n","62\n","[6, 7, 8, 9, 10, 11]\n","20\n","[3, 4, 5, 6]\n","12\n","[212, 213, 214, 215, 216, 217, 218, 219, 222, 223, 224, 225, 226, 227, 228, 229, 232, 233, 234, 235, 236, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 253, 254, 255, 256, 257, 258]\n","195\n","[102, 103, 104, 105, 106, 107, 108, 128, 129, 130, 131]\n","55\n","[8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 114, 115, 116, 117, 118, 119]\n","120\n","[15, 16, 17, 18]\n","16\n","[8, 9, 10, 11, 12, 13, 14, 15, 16, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91]\n","74\n","[8, 9, 10, 11, 617, 618, 619, 620, 621]\n","39\n","[24, 25, 26, 27, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 297, 298, 299, 300]\n","111\n","[34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334]\n","122\n","[29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89]\n","156\n","[4, 5, 6, 7, 8, 9, 10, 11, 470, 471, 472, 473, 474, 475, 476, 477, 478]\n","71\n","[97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129]\n","147\n","[262, 263, 264, 265]\n","20\n","[101, 102, 103, 104, 105]\n","25\n","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16]\n","58\n","[39, 40, 41, 42, 206, 207, 208, 209, 210]\n","41\n","[19, 20, 21, 22, 23, 24, 25, 26]\n","32\n","[7, 8, 9, 10, 11, 12]\n","21\n","[221, 222, 223, 224, 225]\n","25\n","[28, 29, 30, 31, 32, 33]\n","24\n","[6, 7, 8, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132]\n","59\n","[47, 48, 49, 50, 51, 52]\n","24\n","[72, 73, 74, 75, 76, 77, 78, 79]\n","32\n","[26, 27, 28, 29, 30, 31, 32, 33]\n","32\n","[26, 27, 28, 29, 30, 31, 32, 48, 49, 50, 51]\n","44\n","[124, 125, 126, 127]\n","20\n","[343, 344, 345, 346, 347, 348, 349, 350, 351]\n","45\n","[81, 82, 83, 84, 85]\n","20\n","[86, 87, 88, 89, 90, 91, 96, 97, 98, 99]\n","40\n","[11, 12, 13, 14, 16, 17, 18, 19]\n","32\n","[155, 156, 157, 158, 159, 348, 349, 350, 351, 352]\n","50\n","[10, 11, 12, 13]\n","16\n","[466, 467, 468, 469]\n","20\n","[0, 1, 2, 3, 4, 5, 6]\n","21\n","[45, 46, 47, 48, 49, 50]\n","24\n","[5, 6, 7, 8, 9]\n","15\n","[5, 6, 7, 8, 9, 10]\n","19\n","[0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 11]\n","35\n","[46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58]\n","48\n","[17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 63, 64, 65, 66, 67, 68, 69]\n","76\n","[176, 177, 178, 179, 180, 181, 182, 183, 184]\n","45\n","[20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46]\n","108\n","[31, 32, 33, 34, 35, 36, 37, 38]\n","32\n","[57, 58, 59, 60, 61, 262, 263, 264, 265]\n","40\n","[168, 169, 170, 171, 172, 173]\n","30\n","[0, 1, 2, 3, 4, 5, 6, 7]\n","24\n","[231, 232, 233, 234]\n","20\n","[22, 23, 24, 25, 26]\n","20\n","[966, 967, 968, 969, 970, 971]\n","30\n","[96, 97, 98, 99, 100, 101, 102, 103, 104]\n","41\n","[359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382]\n","120\n","[38, 39, 40, 41, 42, 43, 44]\n","28\n","[69, 70, 71, 72]\n","16\n","[57, 58, 59, 60, 61, 62, 63]\n","28\n","[32, 33, 34, 35, 36, 37, 38, 107, 108, 109, 110]\n","48\n","[11, 12, 13, 14]\n","16\n","[111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132]\n","110\n","[91, 92, 93, 94, 95, 96, 106, 107, 108, 109, 110, 111, 127, 128, 129, 130, 131, 259, 260, 261, 262, 263, 264]\n","109\n","[70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 249, 250, 251, 252, 253, 254, 255, 256, 257, 541, 542, 543, 544, 545]\n","122\n","[30, 31, 32, 33, 34, 35]\n","24\n","[59, 60, 61]\n","12\n","[5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23]\n","71\n","[80, 81, 82, 83, 84, 85]\n","24\n","[145, 146, 147, 148, 149, 150]\n","30\n","[52, 53, 54, 55, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288]\n","141\n","[83, 84, 85, 86, 87, 88]\n","24\n","[28, 29, 30, 31, 32, 33, 274, 275, 276, 277, 278, 279, 280]\n","59\n","[8, 9, 10, 11, 12, 13, 14, 15]\n","30\n","[32, 33, 34, 35, 36, 37, 38, 39, 40, 160, 161, 162, 163, 164, 165, 166, 167]\n","76\n","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 42, 43, 44, 45, 46, 47, 48]\n","146\n","[194, 195, 196, 197, 198, 199, 200, 203, 204, 205, 206, 207, 208, 209]\n","70\n","[57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77]\n","84\n","[30, 31, 32, 33, 34]\n","20\n","[48, 49, 50, 51, 52]\n","20\n","[26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 212, 213, 214, 215, 216]\n","149\n","[11, 12, 13, 14]\n","16\n","[92, 93, 94, 95, 96, 97]\n","24\n","[433, 434, 435, 436, 437, 438, 439, 440, 441]\n","45\n","[107, 108, 109, 110, 111]\n","25\n","[41, 42, 43, 44, 45, 46]\n","24\n","[59, 60, 61, 62, 63, 64, 65, 161, 162, 163, 164]\n","48\n","[0, 1, 2, 3, 4, 5]\n","18\n","[0, 1, 2, 3, 4]\n","15\n","[14, 15, 16, 17, 18, 19]\n","24\n","[38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55]\n","72\n","[186, 187, 188, 189]\n","20\n","[65, 66, 67, 68]\n","16\n","[164, 165, 166, 167, 168]\n","25\n","[16, 17, 18, 19, 20, 21, 22]\n","28\n","[92, 93, 94, 95, 121, 122, 123, 124, 125, 126]\n","46\n","[41, 42, 43, 44, 45, 116, 117, 118, 119, 120]\n","45\n","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94]\n","94\n","[10, 11, 12, 32, 33, 34, 35, 36, 37]\n","36\n","[163, 164, 165, 166, 167, 168, 169, 170, 171]\n","45\n","[809, 810, 811, 812, 813, 814, 815, 816, 817]\n","45\n","[0, 1, 2, 3, 4, 5, 6]\n","21\n","[113, 114, 115, 116, 117, 118, 119]\n","35\n","[34, 35, 36, 37, 38, 39]\n","24\n","[120, 121, 122, 123, 124, 125]\n","30\n","[38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55]\n","72\n","[80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90]\n","44\n","[282, 283, 284, 285, 286, 287, 326, 327, 328, 329, 330]\n","55\n","[77, 78, 79, 80, 81, 82]\n","24\n","[11, 12, 13, 14, 15]\n","20\n","[75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95]\n","84\n","[16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 400, 401, 402, 403, 404, 405]\n","70\n","[19, 20, 21, 22, 23, 64, 65, 66]\n","32\n","[31, 32, 33, 34, 35]\n","20\n","[24, 25, 26, 27, 28, 29, 30, 31]\n","32\n","[16, 17, 18, 19, 20]\n","20\n","[177, 178, 179, 180, 181, 182, 183]\n","35\n","[14, 15, 16, 17, 18, 19, 98, 99, 100, 101, 102, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 242, 243, 244, 245, 246]\n","177\n","[52, 53, 54, 55, 56, 57, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153]\n","84\n","[30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47]\n","68\n","[261, 262, 263, 264, 265]\n","25\n","[27, 28, 29, 30, 31]\n","20\n","[109, 110, 111, 112, 113]\n","25\n","[16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78]\n","236\n","[140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152]\n","65\n","[15, 16, 17, 18, 19, 20, 21, 22, 23, 866, 867, 868, 869, 870, 871]\n","66\n","[51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66]\n","64\n","[107, 108, 109, 110, 111, 112]\n","30\n","[76, 77, 78, 79, 80]\n","20\n","[15, 16, 17]\n","12\n","[159, 160, 161, 162, 163, 178, 179, 180, 181, 182, 183, 184, 700, 701, 702, 703, 704, 705, 706]\n","95\n","[36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47]\n","48\n","[147, 148, 149, 150, 151, 152, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184]\n","80\n","[8, 9, 10, 11, 12, 13, 14]\n","26\n","[686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 748, 749, 750, 751, 752, 753, 754, 755, 791, 792, 793, 794, 795, 796, 797, 798]\n","145\n","[59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74]\n","64\n","[15, 16, 17, 18, 19]\n","20\n","[18, 19, 20, 21, 22]\n","20\n","[13, 14, 15, 16, 17]\n","20\n","[77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89]\n","52\n","[320, 321, 322, 323]\n","20\n","[83, 84, 85, 86, 87, 88, 91, 92, 93, 94, 95, 96, 97, 100, 101, 102, 103, 104, 105, 108, 109, 110, 111, 112]\n","107\n","[2, 3, 4, 5, 6, 7]\n","18\n","[104, 105, 106, 107, 108, 109]\n","30\n","[21, 22, 23, 24, 25, 26]\n","24\n","[60, 61, 62]\n","12\n","[15, 16, 17, 18]\n","16\n","[10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29]\n","80\n","[0, 1, 2, 3]\n","12\n","[98, 99, 100, 101, 102]\n","23\n","[91, 92, 93, 94, 95, 96, 97, 98, 99, 100]\n","41\n","[18, 19, 20, 21]\n","16\n","[111, 112, 113, 114, 115]\n","25\n","[61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71]\n","44\n","[287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 334, 335, 336, 337, 338, 339]\n","80\n","[10, 11, 12, 13, 37, 38, 39, 40, 41, 42]\n","40\n","[11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23]\n","52\n","[93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 179, 180, 181, 182, 183, 184, 185]\n","88\n","[5, 6, 7, 8, 9, 45, 46, 47, 48, 49, 50, 51]\n","43\n","[22, 23, 24, 25, 26, 27]\n","24\n","[44, 45, 46, 47, 48, 49]\n","24\n","[28, 29, 30, 31]\n","16\n","[16, 17, 18, 19, 20]\n","20\n","[92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105]\n","62\n","[26, 27, 28, 29, 30, 31]\n","24\n","[8, 9, 10, 11, 12, 13, 14, 15, 21, 22, 23, 24, 25, 26]\n","54\n","[63, 64, 65, 66, 67, 68, 69, 70]\n","32\n","[818, 819, 820, 821, 822, 823, 824, 825, 826, 836, 837, 838, 839]\n","65\n","[10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 22, 23, 24, 25, 26, 27, 28, 29, 30]\n","76\n","[6, 7, 8, 9, 10, 11]\n","20\n","[206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 219, 220, 221, 222, 223, 224, 225, 226]\n","95\n","[251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265]\n","75\n","[29, 30, 31, 32, 33, 34, 35, 36, 37]\n","36\n","[35, 36, 37, 38]\n","16\n","[156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185]\n","140\n","[293, 294, 295, 296, 297, 298, 299]\n","35\n","[388, 389, 390, 391, 392]\n","25\n","[20, 21, 22, 23, 24]\n","20\n","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14]\n","50\n","[90, 91, 92, 93, 94, 95, 107, 108, 109, 110, 111, 112, 113, 121, 122, 123, 124, 125, 126, 127, 128, 129]\n","104\n","[50, 51, 52, 53, 54, 55]\n","24\n","[10, 11, 12, 13, 14, 15]\n","24\n","[19, 20, 21, 22, 23]\n","20\n","[11, 12, 13, 14, 15, 16, 17, 18]\n","32\n","[51, 52, 53, 54, 55, 56, 57, 58, 59, 73, 74, 75, 76]\n","52\n","[15, 16, 17, 18, 19, 20, 21, 22]\n","32\n","[117, 118, 119, 120, 121, 122, 123, 124, 125]\n","45\n","[56, 57, 58, 59, 60, 61, 62]\n","28\n","[32, 33, 34, 35, 36, 37]\n","24\n","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19]\n","70\n","[0, 1, 2, 3]\n","12\n","[4, 5, 6, 7, 8, 9, 10, 11, 12, 112, 113, 114, 115, 116, 117, 118, 119, 120, 296, 297, 298, 299, 300]\n","100\n","[146, 147, 148, 149, 150, 151, 202, 203, 204, 205, 206, 207, 208]\n","65\n","[105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116]\n","60\n","[32, 33, 34, 35, 36, 37]\n","24\n","[43, 44, 45, 46]\n","16\n","[19, 20, 21, 22, 23, 24, 25, 26, 27, 28]\n","40\n","[57, 58, 59, 60, 61, 62]\n","24\n","[13, 14, 15, 16, 17, 18, 19]\n","28\n","[0, 1, 2, 3, 4, 5, 19, 20, 21, 22, 23, 24]\n","42\n","[25, 26, 27, 28, 29, 30, 31, 56, 57, 58, 59, 60]\n","48\n","[112, 113, 114, 115, 116, 117, 118]\n","35\n","[41, 42, 43, 44, 45, 46, 47, 48, 49]\n","36\n","[12, 13, 14, 15, 16, 17, 45, 46, 47, 48]\n","40\n","[116, 117, 118, 119, 120]\n","25\n","[53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150]\n","250\n","[7, 8, 9, 10]\n","13\n","[127, 128, 129, 130, 131, 132]\n","30\n","[49, 50, 51, 52, 53, 54, 55, 56]\n","32\n","[100, 101, 102, 103, 104, 105, 106, 521, 522, 523, 524, 525, 526, 527]\n","70\n","[70, 71, 72, 73]\n","16\n","[9, 10, 11, 12, 23, 24, 25, 26, 27, 28, 29, 30]\n","47\n","[13, 14, 15, 16, 17, 18]\n","24\n","[131, 132, 133, 134]\n","20\n","[138, 139, 140, 141, 142, 143, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160]\n","90\n","[474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484]\n","55\n","[19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37]\n","72\n","[39, 40, 41, 42, 43, 44, 45, 46, 47]\n","36\n","[119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140]\n","110\n","[10, 11, 12, 13, 14]\n","20\n","[16, 17, 18, 19, 20, 21]\n","24\n","[479, 480, 481, 482, 483, 484, 485, 486, 487, 488]\n","50\n","[13, 14, 15, 16, 17, 18]\n","24\n","[21, 22, 23, 24, 25, 125, 126, 127, 128, 129, 130, 131, 132]\n","60\n","[142, 143, 144, 145, 146, 147]\n","30\n","[981, 982, 983, 984, 985, 986, 987, 988, 989, 990]\n","50\n","[442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453]\n","60\n","[45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61]\n","68\n","[27, 28, 29, 30, 31, 32]\n","24\n","[22, 23, 24, 25, 26, 27, 28]\n","28\n","[17, 18, 19, 20, 21, 22, 35, 36, 37, 38, 39, 40]\n","48\n","[506, 507, 508, 509, 510, 511, 512]\n","35\n","[77, 78, 79, 80, 113, 114, 115, 116, 117]\n","41\n","[114, 115, 116, 117, 118, 119, 120, 121, 122, 153, 154, 155, 156]\n","65\n","[310, 311, 312, 313, 314, 315, 316, 317, 318]\n","45\n","[102, 103, 104, 105, 106, 107]\n","30\n","[0, 1, 2, 3, 92, 93, 94, 95]\n","28\n","[173, 174, 175, 176]\n","20\n","[125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137]\n","65\n","[0, 1, 2, 3, 4, 5, 6, 244, 245, 246, 247, 248, 249, 250, 251]\n","61\n","[526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 567, 568, 569, 570, 571, 572]\n","80\n","[47, 48, 49, 50, 51, 52]\n","24\n","[5, 6, 7, 8, 9, 10, 11, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359]\n","88\n","[142, 143, 144, 145, 146]\n","25\n","[119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144]\n","130\n","[25, 26, 27, 28, 29, 30, 31, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215]\n","93\n","[9, 10, 11, 12, 13, 14, 15, 16]\n","31\n","[6, 7, 8, 9, 10]\n","16\n","[31, 32, 33, 34, 35, 36, 37, 38]\n","32\n","[34, 35, 36]\n","12\n","[22, 23, 24, 25, 26, 27, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145]\n","214\n","[53, 54, 55, 56, 57]\n","20\n","[23, 24, 25, 26, 27, 28, 29, 30, 31]\n","36\n","[106, 107, 108, 109, 110, 111, 112, 113]\n","40\n","[249, 250, 251, 252, 253, 254]\n","30\n","[284, 285, 286, 287, 288, 289, 290, 291]\n","40\n","[10, 11, 12, 13, 14, 15, 16, 17]\n","32\n","[11, 12, 13, 14, 15, 16, 17, 18, 19]\n","36\n","[79, 80, 81, 82, 83, 84, 85, 86, 87, 110, 111, 112, 113, 114, 115, 116]\n","71\n","[331, 332, 333, 334, 335, 336, 338, 339, 340, 341, 342]\n","55\n","[44, 45, 46, 47, 48]\n","20\n","[284, 285, 286, 287, 288, 289, 290, 291, 292]\n","45\n","[151, 152, 153, 154, 155, 156, 157]\n","35\n","[302, 303, 304, 305, 306, 307, 308, 309, 339, 340, 341, 342, 343, 344, 345, 346]\n","80\n","[80, 81, 82, 83, 84]\n","20\n","[5, 6, 7, 8, 9, 10]\n","19\n","[19, 20, 21, 22, 23]\n","20\n","[77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 149, 150, 151, 152, 153, 154, 155, 156, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184]\n","189\n","[13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30]\n","72\n","[173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199]\n","135\n","[152, 153, 154, 155, 156, 157]\n","30\n","[16, 17, 18, 19, 20, 21, 22, 23, 24, 25]\n","40\n","[57, 58, 59, 60, 61, 62]\n","24\n","[60, 61, 62, 63]\n","16\n","[14, 15, 16, 17, 18]\n","20\n","[55, 56, 57, 58, 59, 60, 61, 62, 63]\n","36\n","[11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 103, 104, 105, 106]\n","200\n","[14, 15, 16, 17, 18, 19]\n","24\n","[7, 8, 9, 10, 11, 12, 13, 113, 114, 115, 116, 117, 118, 119]\n","60\n","[16, 17, 18, 19, 20]\n","20\n","[27, 28, 29, 30, 50, 51, 52, 53]\n","32\n","[271, 272, 273, 274, 275]\n","25\n","[35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54]\n","80\n","[39, 40, 41, 42, 43, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145]\n","80\n","[11, 12, 13, 14, 15, 32, 33, 34, 35]\n","36\n","[43, 44, 45, 46, 47]\n","20\n","[26, 27, 28, 29, 30, 31]\n","24\n","[108, 109, 110, 111, 112]\n","25\n","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48]\n","186\n","[119, 120, 121, 122, 123, 124, 192, 193, 194, 195]\n","50\n","[4, 5, 6, 7, 8, 9, 10, 102, 103, 104, 105]\n","42\n","[4, 5, 6, 7, 8, 9]\n","18\n","[125, 126, 127, 128, 129]\n","25\n","[171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199]\n","145\n","[59, 60, 61, 62, 63, 64]\n","24\n","[10, 11, 12, 13, 14, 15, 16, 54, 55, 56, 57, 58, 59, 60, 101, 102, 103, 104, 105, 106, 139, 140, 141, 142, 143]\n","111\n","[108, 109, 110, 111, 112, 113, 114]\n","35\n","[28, 29, 30, 31, 32, 33]\n","24\n","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\n","34\n","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]\n","38\n","[182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193]\n","60\n","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60]\n","234\n","[72, 73, 74, 75]\n","16\n","[163, 164, 165, 166, 167]\n","25\n","[141, 142, 143, 144]\n","20\n","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20]\n","74\n","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379]\n","1059\n","[29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41]\n","52\n","[98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150]\n","258\n","[42, 43, 44, 45, 46, 47]\n","24\n","[70, 71, 72, 73, 74, 75, 83, 84, 85, 86, 87, 88]\n","48\n","[7, 8, 9, 10]\n","13\n","[146, 147, 148, 149, 150, 151, 152]\n","35\n","[418, 419, 420, 421, 422, 423]\n","30\n","[19, 20, 21, 22, 23, 24, 97, 98, 99, 100, 101, 102]\n","51\n","[43, 44, 45, 46, 47, 48, 58, 59, 60, 61, 62, 63]\n","48\n","[16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 166, 167, 168, 169]\n","128\n","[59, 60, 61, 62, 63, 64, 65, 66, 82, 83, 84, 85, 86, 87, 88, 89]\n","64\n","[62, 63, 64, 65, 66, 67, 68, 69, 70, 98, 99, 100, 101, 102, 103, 104, 142, 143, 144, 145, 146]\n","94\n","[10, 11, 12, 13, 14, 15, 16, 67, 68, 69, 70]\n","44\n","[29, 30, 31, 32, 33, 34, 35, 36, 37]\n","36\n","[0, 1, 2, 3, 4, 5, 136, 137, 138, 139, 140, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 307, 308, 309, 310]\n","123\n","[17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31]\n","60\n","[54, 55, 56, 57, 58, 59]\n","24\n","[35, 36, 37, 38, 39, 40, 41]\n","28\n","[23, 24, 25, 26, 27, 28, 29, 30, 78, 79, 80, 81]\n","48\n","[36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46]\n","44\n","[39, 40, 41, 42]\n","16\n","[7, 8, 9, 10, 11, 12, 91, 92, 93, 94, 95, 96]\n","45\n","[47, 48, 49, 50, 51, 52]\n","24\n","[91, 92, 93, 94, 95]\n","20\n","[53, 54, 55, 56, 57, 58, 411, 412, 413, 414, 415, 416, 438, 439, 440, 441, 442, 443]\n","84\n","[99, 100, 101, 102, 103, 104]\n","29\n","[13, 14, 15, 16, 17]\n","20\n","[13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25]\n","52\n","[118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134]\n","85\n","[48, 49, 50, 51, 52, 53, 54, 55, 56, 57]\n","40\n","[8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24]\n","66\n","[144, 145, 146, 147, 148]\n","25\n","[3, 4, 5, 6, 7]\n","15\n","[45, 46, 47, 48, 49, 50]\n","24\n","[33, 34, 35, 36, 37, 38, 39]\n","28\n","[58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 184, 185, 186, 187, 188]\n","65\n","[0, 1, 2, 3, 4, 5]\n","18\n","[46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60]\n","60\n","[116, 117, 118, 119, 120, 121, 122, 123]\n","40\n","[143, 144, 145, 146, 147, 148, 149, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165]\n","85\n","[38, 39, 40, 41, 42, 43]\n","24\n","[182, 183, 184, 185, 186, 187, 188, 189, 190]\n","45\n","[26, 27, 28, 29, 30, 31, 32, 264, 265, 266, 267, 268]\n","53\n","[11, 12, 13, 14, 15, 60, 61, 62, 63, 64, 65, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 145, 146, 147, 148, 149]\n","129\n","[229, 230, 231, 232, 233, 234]\n","30\n","[93, 94, 95, 96]\n","16\n","[128, 129, 130, 131, 132, 167, 168, 169, 170]\n","45\n","[105, 106, 107, 108, 109]\n","25\n","[18, 19, 20, 21, 22, 23, 24, 25, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306]\n","117\n","[14, 15, 16, 17, 18, 19]\n","24\n","[224, 225, 226, 227, 228, 229]\n","30\n","[8, 9, 10, 11, 12, 13, 41, 42, 43, 44, 45, 46, 47, 48]\n","54\n","[6, 7, 8, 9, 10, 11, 12, 13, 14, 21, 22, 23, 24, 25, 26, 27, 35, 36, 37, 38, 39, 40, 41, 42, 50, 51, 52, 53, 54, 55]\n","116\n","[162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 249, 250, 251, 252, 253, 254, 255]\n","195\n","[76, 77, 78, 79, 80, 81]\n","24\n","[44, 45, 46, 47, 48, 49, 71, 72, 73, 74]\n","40\n","[8, 9, 10, 11, 12, 13, 14, 148, 149, 150, 151, 157, 158, 159, 160, 161, 162, 163, 164, 174, 175, 176, 177, 178, 179, 180, 181]\n","126\n","[34, 35, 36, 37, 38, 39, 40]\n","28\n","[153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174]\n","110\n","[188, 189, 190, 191, 192, 193, 194, 195, 196, 197]\n","50\n","[61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71]\n","44\n","[117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156]\n","200\n","[57, 58, 59, 60, 61, 62, 206, 207, 208, 209, 274, 275, 276, 277, 278, 279, 280, 281, 920, 921, 922, 923, 924, 925, 926]\n","119\n","[0, 1, 2, 3, 4, 5]\n","18\n","[63, 64, 65, 66, 67]\n","20\n","[99, 100, 101, 102, 103, 104]\n","29\n","[13, 14, 15, 16, 17, 18, 19]\n","28\n","[22, 23, 24, 25, 26, 27]\n","24\n","[31, 32, 33, 34, 35, 36]\n","24\n","[31, 32, 33, 34, 35, 36, 37, 38, 39]\n","36\n","[24, 25, 26, 27, 28, 29, 35, 36, 37, 38]\n","40\n","[112, 113, 114, 115, 116, 117]\n","30\n","[56, 57, 58, 59, 61, 62, 63, 64]\n","32\n","[20, 21, 22, 23, 24, 25, 31, 32, 33, 34]\n","40\n","[35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45]\n","44\n","[50, 51, 52, 53, 54, 104, 105, 106, 107, 108, 127, 128, 129, 130, 131, 135, 136, 137, 138, 139, 140]\n","100\n","[17, 18, 19, 20, 21, 22, 23]\n","28\n","[96, 97, 98, 99]\n","16\n","[17, 18, 19, 20, 21, 22, 23]\n","28\n","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]\n","30\n","[77, 78, 79, 80, 81, 82]\n","24\n","[79, 80, 81, 82, 83, 84]\n","24\n","[29, 30, 31, 32, 33, 34]\n","24\n","[89, 90, 91, 92, 93, 94, 95, 96, 97]\n","36\n","[38, 39, 40, 41]\n","16\n","[19, 20, 21, 22, 23, 24, 25, 26, 27]\n","36\n","[59, 60, 61, 62, 63, 64, 65, 66]\n","32\n","[16, 17, 18, 19, 20, 21]\n","24\n","[0, 1, 2, 3, 4]\n","15\n","[67, 68, 69, 70, 71]\n","20\n","[46, 47, 48, 49, 50, 51, 52, 53, 54, 55]\n","40\n","[30, 31, 32, 33, 34, 35]\n","24\n","[11, 12, 13, 14, 15, 16, 17, 18, 19, 20]\n","40\n","[14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 55, 56, 57, 58, 59, 60, 61, 62, 108, 109, 110, 111, 112, 113, 114, 115]\n","120\n","[8, 9, 10, 11, 12]\n","18\n","[511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536]\n","130\n","[56, 57, 58, 59]\n","16\n","[29, 30, 31, 32, 33, 34, 35, 36, 37, 82, 83, 84, 85, 86, 87, 130, 131, 132, 133, 134, 135, 136, 137, 138]\n","105\n","[28, 29, 30, 31, 32, 33, 34, 35]\n","32\n","[172, 173, 174, 175, 176, 177, 178, 179, 180]\n","45\n","[157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170]\n","70\n","[31, 32, 33, 34, 35, 36, 37, 38]\n","32\n","[37, 38, 39, 40, 41, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97]\n","132\n","[38, 39, 40, 41]\n","16\n","[15, 16, 17, 18, 19, 20, 21, 22]\n","32\n","[0, 1, 2, 3]\n","12\n","[17, 18, 19, 20, 21]\n","20\n","[47, 48, 49, 50, 51, 88, 89, 90, 91, 92, 93, 125, 126, 127, 128]\n","64\n","[285, 286, 287, 288, 289]\n","25\n","[7, 8, 9, 10, 11, 12, 13]\n","25\n","[38, 39, 40, 41, 42, 43, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409]\n","184\n","[0, 1, 2, 3, 4, 5, 6, 7, 8]\n","27\n","[37, 38, 39, 40]\n","16\n","[95, 96, 97, 98]\n","16\n","[321, 322, 323, 324]\n","20\n","[110, 111, 112, 113, 114, 115, 116, 117]\n","40\n","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]\n","54\n","[9, 10, 11, 12, 13, 49, 50, 51, 52, 53, 54, 55]\n","47\n","[970, 971, 972, 973]\n","20\n","[14, 15, 16, 17, 18]\n","20\n","[111, 112, 113, 114, 115, 116, 117, 118]\n","40\n","[30, 31, 32, 33, 34, 35, 81, 82, 83, 84, 85]\n","44\n","[32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58]\n","108\n","[4, 5, 6, 7, 29, 30, 31, 32, 369, 370, 371, 372]\n","48\n","[40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50]\n","44\n","[158, 159, 160, 161, 162, 163]\n","30\n","[276, 277, 278]\n","15\n","[10, 11, 12, 13, 14]\n","20\n","[0, 1, 2, 3, 4, 5, 6]\n","21\n","[155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168]\n","70\n","[22, 23, 24, 25, 26, 27]\n","24\n","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]\n","38\n","[55, 56, 57, 58, 59, 60, 61, 62]\n","32\n","[22, 23, 24, 25, 26]\n","20\n","[201, 202, 203, 204, 205, 215, 216, 217, 218, 219]\n","50\n","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53]\n","206\n","[45, 46, 47, 48, 49, 90, 91, 92, 93, 94, 95, 96, 97, 98]\n","56\n","[13, 14, 15, 16, 17, 18, 19, 20]\n","32\n","[43, 44, 45, 46, 47, 48, 49, 50, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84]\n","88\n","[490, 491, 492, 493, 494]\n","25\n","[0, 1, 2, 3, 4, 5, 6, 7, 8, 78, 79, 80, 81]\n","43\n","[18, 19, 20, 21, 22, 23]\n","24\n","[13, 14, 15, 16, 17, 18, 19, 20, 21]\n","36\n","[10, 11, 12, 13, 14, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55]\n","112\n","[4, 5, 6, 7, 8, 9, 10, 105, 106, 107, 108, 109, 110]\n","52\n","[0, 1, 2, 3, 4, 5]\n","18\n","[18, 19, 20, 21, 22, 23]\n","24\n","[95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111]\n","80\n","[36, 37, 38, 39, 40]\n","20\n","[463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 698, 699, 700, 701]\n","130\n","[170, 171, 172, 173, 174, 247, 248, 249, 250, 251]\n","50\n","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21]\n","78\n","[320, 321, 322, 323, 324, 325]\n","30\n","[163, 164, 165, 166, 167, 170, 171, 172, 173, 174, 175, 176, 177, 180, 181, 182, 183, 184, 185, 186, 188, 189, 190, 191, 192, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 214, 215, 216, 217, 218, 219, 222, 223, 224, 225, 226, 227, 228]\n","250\n","[12, 13, 14, 15, 16, 17, 24, 25, 26, 27, 28, 42, 43, 44, 45, 46]\n","64\n","[13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68]\n","96\n","[56, 57, 58, 59, 60, 61]\n","24\n","[12, 13, 14, 15]\n","16\n","[89, 90, 91, 92, 93, 94, 95, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117]\n","126\n","[44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 297, 298, 299, 300, 301, 302, 303]\n","75\n","[145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159]\n","75\n","[11, 12, 13, 14, 15, 16, 17]\n","28\n","[0, 1, 2, 3, 4, 12, 13, 14, 15, 16]\n","35\n","[99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121]\n","114\n","[5, 6, 7, 8, 9, 10, 11, 12, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114]\n","82\n","[75, 76, 77, 78, 79]\n","20\n","[61, 62, 63, 64, 65, 66]\n","24\n","[203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231]\n","145\n","[32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 63, 64, 65]\n","56\n","[3, 4, 5, 6, 7, 8, 9, 31, 32, 33, 34, 35, 36, 37, 38]\n","53\n","[13, 14, 15, 16, 17, 18, 19, 20]\n","32\n","[10, 11, 12, 13, 14, 45, 46, 47, 48, 49, 50, 51, 52]\n","52\n","[161, 162, 163, 164, 165]\n","25\n","[155, 156, 157, 158, 159, 160, 161, 162]\n","40\n","[60, 61, 62, 63, 64, 65]\n","24\n","[0, 1, 2, 3]\n","12\n","[60, 61, 62, 63, 64, 65]\n","24\n","[196, 197, 198, 199, 200, 201, 202]\n","35\n","[8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 53, 54, 55, 56, 57, 58]\n","62\n","[31, 32, 33, 34, 35, 36]\n","24\n","[16, 17, 18, 19, 20, 21]\n","24\n","[335, 336, 337, 338, 339, 340]\n","30\n","[134, 135, 136, 137, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601]\n","105\n","[33, 34, 35, 36, 37, 69, 70, 71, 72, 73, 74, 75, 76, 77, 138, 139, 140, 141, 142, 143, 144, 145, 146]\n","101\n","[16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27]\n","48\n","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 261, 262, 263, 264, 265]\n","440\n","[29, 30, 31, 32, 33, 34, 35, 36]\n","32\n","[16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143]\n","177\n","[118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135]\n","90\n","[135, 136, 137, 138, 139, 140]\n","30\n","[154, 155, 156, 157, 158, 159, 160, 161, 162, 163]\n","50\n","[31, 32, 33, 34, 35]\n","20\n","[14, 15, 16, 17, 18, 19, 196, 197, 198, 199, 200]\n","49\n","[37, 38, 39, 40, 41]\n","20\n","[15, 16, 17, 18, 19]\n","20\n","[0, 1, 2, 3, 4, 5, 6, 7, 8, 110, 111, 112, 113, 114]\n","52\n","[41, 42, 43, 44, 45, 46, 52, 53, 54, 55, 56]\n","44\n","[0, 1, 2, 3, 4]\n","15\n","[830, 831, 832, 833, 834, 835]\n","30\n","[361, 362, 363, 364, 391, 392, 393, 394]\n","40\n","[34, 35, 36, 37, 38]\n","20\n","[220, 221, 222, 223, 224, 225, 434, 435, 436, 437, 438, 439]\n","60\n","[308, 309, 310, 311, 312]\n","25\n","[38, 39, 40, 41, 42, 43, 44, 45]\n","32\n","[5, 6, 7, 8, 9, 10, 11, 12, 13]\n","31\n","[15, 16, 17, 18, 19, 20, 38, 39, 40, 41, 42]\n","44\n","[11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 327, 328, 329, 330, 331]\n","209\n","[17, 18]\n","8\n","[180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191]\n","60\n","[12, 13, 14, 15, 16, 17, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56]\n","76\n","[16, 17, 18, 19, 20]\n","20\n","[14, 15, 16, 17, 18, 19]\n","24\n","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]\n","46\n","[7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19]\n","49\n","[42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56]\n","60\n","[8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21]\n","50\n","[147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172]\n","130\n","[37, 38, 39, 40, 41]\n","20\n","[36, 37, 38, 39, 40, 41, 42, 43, 44, 45]\n","40\n","[35, 36, 37, 38, 39, 40, 41, 42]\n","32\n","[40, 41, 42, 43, 44]\n","20\n","[13, 14, 15, 16]\n","16\n","[42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54]\n","52\n","[984, 985, 986, 987, 988, 989]\n","30\n","[55, 56, 57, 58, 59, 60, 134, 135, 136, 137, 138, 139]\n","54\n","[0, 1, 2]\n","9\n","[8, 9, 10, 11, 12]\n","18\n","[29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41]\n","48\n","[270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 556, 557, 558, 559, 560, 561, 562]\n","110\n","[138, 139, 140, 141, 142, 143, 144]\n","35\n","[109, 110, 111, 112, 215, 216, 217, 218, 219, 220, 221, 222, 243, 244, 245, 246, 247, 248]\n","90\n","[22, 23, 24, 25, 26, 27, 293, 294, 295, 296, 297, 298]\n","54\n","[58, 59, 60, 61, 62, 63, 64, 65, 66]\n","36\n","[35, 36, 37, 38, 39, 40]\n","24\n","[202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235]\n","100\n","[12, 13, 14, 15, 16, 17, 124, 125, 126, 127, 128, 129, 130, 131, 140, 141, 142, 143, 144, 145]\n","94\n","[88, 89, 90, 91, 92, 93]\n","24\n","[24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34]\n","44\n","[8, 9, 10, 11, 12, 13]\n","22\n","[244, 245, 246, 247, 248, 249, 250, 251, 252, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454]\n","95\n","[4, 5, 6, 7]\n","12\n","[10, 11, 12, 13, 14, 15, 200, 201, 202, 203, 204, 205, 206, 207]\n","64\n","[8, 9, 10, 11, 12, 13]\n","22\n","[63, 64, 65]\n","12\n","[29, 30, 31, 32, 33, 34, 35]\n","28\n","[11, 12, 13, 14, 15, 16, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89]\n","108\n","[132, 133, 134, 135, 136]\n","25\n","[23, 24, 25, 93, 94, 95, 96, 97, 98, 99, 100, 101]\n","50\n","[116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127]\n","55\n","[90, 91, 92, 93, 94]\n","20\n","[14, 15, 16, 17, 18, 19, 20, 49, 50, 51, 52, 53, 54, 55]\n","56\n","[125, 126, 127, 128]\n","20\n","[67, 68, 69, 70, 71, 72, 73]\n","28\n","[404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640]\n","140\n","[22, 23, 24, 25, 26, 27, 116, 117, 118, 119, 120, 121]\n","54\n","[10, 11, 12, 13, 14, 15]\n","24\n","[0, 1, 2, 3, 4, 5, 6, 7, 8, 21, 22, 23, 24, 25]\n","47\n","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 449, 450, 451, 452, 453, 454]\n","138\n","[67, 68, 69, 70, 71, 72, 207, 208, 209, 210, 211]\n","49\n","[21, 22, 23, 24, 25, 26, 27, 28]\n","32\n","[760, 761, 762, 763, 764, 765]\n","30\n","[47, 48, 49, 50, 51, 52]\n","24\n","[19, 20, 21, 22, 23, 24, 25, 26, 27]\n","36\n","[288, 289, 290, 291, 292, 293, 460, 461, 462, 463, 464, 465]\n","60\n","[32, 33, 34, 35]\n","16\n","[27, 28, 29, 30, 31, 32, 33, 34, 35, 86, 87, 88, 89, 90, 91, 92]\n","64\n","[943, 944, 945, 946, 947, 948, 949, 950, 951]\n","45\n","[196, 197, 198, 199, 200, 261, 262, 263, 264, 265, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494]\n","100\n","[45, 46, 47, 48, 49]\n","20\n","[210, 211, 212, 213]\n","20\n","[195, 196, 197, 198, 199, 200]\n","30\n","[36, 37, 38, 39, 40, 41, 42, 43]\n","32\n","[75, 76, 77, 78, 79, 80]\n","24\n","[54, 55, 56, 57, 58]\n","20\n","[11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 123, 124, 125, 126, 127, 128, 129]\n","75\n","[94, 95, 96, 97, 98, 99, 100, 101, 102, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151]\n","89\n","[113, 114, 115, 116]\n","20\n","[26, 27, 28, 29, 30]\n","20\n","[0, 1, 2, 3, 4, 5, 13, 14, 15, 16, 17, 18, 49, 50, 51, 52, 53, 54]\n","66\n","[178, 179, 180, 181, 182, 183, 184]\n","35\n","[41, 42, 43, 44, 45, 66, 67, 68, 69, 70, 71, 187, 188, 189, 190, 191, 192, 351, 352, 353, 354, 355, 356]\n","104\n","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19]\n","70\n","[373, 374, 375, 376, 377, 378]\n","30\n","[194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210]\n","85\n","[38, 39, 40, 41, 42, 43, 44, 45]\n","32\n","[42, 43, 44, 45, 46, 47, 48]\n","28\n","[16, 17, 18, 19, 20]\n","20\n","[21, 22, 23, 24, 25]\n","20\n","[18, 19, 20, 21, 22, 30, 31, 32, 33, 34, 35, 36, 37]\n","52\n","[310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 326, 327, 328, 329, 330]\n","80\n","[39, 40, 41, 42, 43, 44, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136]\n","74\n","[245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257]\n","65\n","[62, 63, 64, 65]\n","16\n","[26, 27, 28, 29, 30, 31, 32, 33]\n","32\n","[20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44]\n","100\n","[37, 38, 39, 40, 41, 42, 43, 44]\n","32\n","[274, 275, 276, 277, 278, 279]\n","30\n","[0, 1, 2, 3, 4, 5]\n","18\n","[18, 19, 20, 21, 22, 23]\n","24\n","[3, 4, 5, 6, 7, 8, 9]\n","21\n","[162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172]\n","55\n","[9, 10, 11, 12, 13]\n","19\n","[44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 192, 193, 194, 195, 196, 197, 198, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325]\n","153\n","[6, 7, 8, 9, 10, 11]\n","20\n","[0, 1, 2, 3]\n","12\n","[50, 51, 52, 53, 54]\n","20\n","[27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47, 48, 49, 50]\n","88\n","[19, 20, 21, 22]\n","16\n","[28, 29, 30, 31, 32]\n","20\n","[47, 48, 49, 50, 51, 52, 53, 54]\n","32\n","[87, 88, 89, 90, 91, 92, 93, 202, 203, 204, 205, 206, 207]\n","58\n","[425, 426, 427, 428, 429, 811, 812, 813, 814, 815]\n","50\n","[136, 137, 138, 139, 140, 141]\n","30\n","[53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63]\n","44\n","[71, 72, 73, 74]\n","16\n","[49, 50, 51, 52, 53]\n","20\n","[29, 30, 31, 32, 33, 34, 35]\n","28\n","[73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87]\n","60\n","[263, 264, 265, 266, 267, 268, 269, 270]\n","40\n","[63, 64, 65, 66, 67, 68, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160]\n","94\n","[393, 394, 395, 396, 397]\n","25\n","[14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24]\n","44\n","[31, 32, 33, 34, 35]\n","20\n","[25, 26, 27, 28, 29, 30]\n","24\n","[6, 7, 8, 9, 10]\n","16\n","[15, 16, 17, 18, 19]\n","20\n","[9, 10, 11, 12, 13, 14, 15, 16, 17]\n","35\n","[92, 93, 94, 95, 96, 97, 98, 99, 216, 217, 218, 219]\n","52\n","[22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34]\n","52\n","[200, 201, 202, 203, 204, 205, 206, 207, 208]\n","45\n","[24, 25, 26, 27, 28, 109, 110, 111, 112, 113, 114, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154]\n","140\n","[80, 81, 82, 83, 84, 85, 86, 87, 88]\n","36\n","[7, 8, 9, 10]\n","13\n","[83, 84, 85, 86, 87, 88, 89, 90]\n","32\n","[22, 23, 24, 25, 26, 27]\n","24\n","[39, 40, 41, 42, 43]\n","20\n","[21, 22, 23, 24, 25, 26, 27, 28, 29]\n","36\n","[44, 45, 46, 47, 48]\n","20\n","[68, 69, 70, 71, 72, 73, 74, 75]\n","32\n","[188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 745, 746, 747, 748, 749, 750, 751, 752]\n","100\n","[71, 72, 73, 74, 75]\n","20\n","[83, 84, 85, 86, 87, 88, 89, 90, 91]\n","36\n","[83, 84, 85, 86, 87, 88]\n","24\n","[146, 147, 148, 149, 150, 151, 154, 155, 156, 157, 158, 159, 160, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182]\n","165\n","[24, 25, 26, 27, 28]\n","20\n","[181, 182, 183, 184, 185, 186, 187, 188, 189, 646, 647, 648, 649]\n","65\n","[61, 62, 63, 64, 65, 66]\n","24\n","[8, 9, 10, 11, 12, 13, 14, 15]\n","30\n","[593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614]\n","110\n","[169, 170, 171, 172, 173, 174, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380]\n","125\n","[104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229]\n","225\n","[33, 34, 35, 36, 37, 38, 39, 40]\n","32\n","[33, 34, 35, 36, 37]\n","20\n","[144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 302, 303, 304, 305, 306, 307, 308, 309]\n","185\n","[31, 32, 33, 34, 35, 36]\n","24\n","[12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36]\n","92\n","[62, 63, 64, 65, 66, 67, 68, 69, 70]\n","36\n","[52, 53, 54, 55, 56, 57, 58]\n","28\n","[19, 20, 21, 22, 23, 29, 30, 31, 32, 33]\n","40\n","[28, 29, 30, 31, 32, 33, 34, 35, 36, 37]\n","40\n","[10, 11, 12, 13, 14]\n","20\n","[25, 26, 27, 28, 29]\n","20\n","[214, 215, 216, 217]\n","20\n","[15, 16, 17, 18, 19, 20, 161, 162, 163, 164, 165, 166, 167, 168]\n","64\n","[6, 7, 8, 9, 10, 11, 176, 177, 178, 179, 180, 181]\n","50\n","[183, 184, 185, 186, 187, 188]\n","30\n","[19, 20, 21, 22, 23, 24, 127, 128, 129, 130, 131, 132]\n","54\n","[44, 45, 46, 47, 48, 49, 50, 51, 52, 53]\n","40\n","[12, 13, 14, 15]\n","16\n","[29, 30, 31, 32, 33, 194, 195, 196]\n","35\n","[164, 165, 166, 167, 168, 169, 170, 171, 172]\n","45\n","[41, 42, 43, 44, 45, 46, 47, 48]\n","32\n","[19, 20, 21, 22]\n","16\n","[113, 114, 115, 116, 117, 118, 119, 120]\n","40\n","[134, 135, 136, 137, 138, 139]\n","30\n","[341, 342, 343, 344, 345, 346, 347, 348]\n","40\n","[176, 177, 178, 179]\n","20\n","[44, 45, 46, 47, 48, 49, 50, 51, 52]\n","36\n","[15, 16, 17, 18, 69, 70, 71, 72, 73, 74]\n","40\n","[92, 93, 94, 95, 96, 97]\n","24\n","[0, 1, 2, 3, 4, 5, 6, 7]\n","24\n","[21, 22, 23, 24, 25, 26, 27, 28, 29]\n","36\n","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 105, 106, 107, 108, 109, 110]\n","64\n","[75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86]\n","48\n","[81, 82, 83, 84, 85]\n","20\n","[34, 35, 36, 37, 38, 39, 40, 41, 42]\n","36\n","[13, 14, 15, 16]\n","16\n","[42, 43, 44, 45, 46, 47, 48]\n","28\n","[123, 124, 125, 126, 127, 128]\n","30\n","[76, 77, 78, 79]\n","16\n","[74, 75, 76, 77, 78, 79, 80, 81]\n","32\n","[108, 109, 110, 111, 112]\n","25\n","[14, 15, 16, 17, 18, 19, 20, 21]\n","32\n","[18, 19, 20, 21, 22]\n","20\n","[37, 38, 39, 40]\n","16\n","[53, 54, 55, 56, 57, 58, 59, 60, 61, 62]\n","40\n","[280, 281, 282, 283, 284, 285, 286, 287, 288]\n","45\n","[55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67]\n","52\n","[861, 862, 863, 864, 865, 866]\n","30\n","[18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28]\n","44\n","[328, 329, 330, 331, 332, 333, 334, 335]\n","40\n","[12, 13, 14, 15, 16, 17]\n","24\n","[38, 39, 40, 41, 228, 229, 230, 231, 232, 233, 234, 235, 236]\n","61\n","[16, 17, 18, 19]\n","16\n","[25, 26, 27, 28, 29, 30, 31, 32]\n","32\n","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 40, 41, 42, 43, 44, 45, 74, 75, 76, 77, 78, 79, 80, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105]\n","168\n","[29, 30, 31, 32, 33, 34]\n","24\n","[94, 95, 96, 97, 98, 99, 100, 101]\n","34\n","[47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81]\n","132\n","[57, 58, 59, 60, 61, 62]\n","24\n","[104, 105, 106, 107, 108, 109, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285]\n","85\n","[303, 304, 305, 306, 307, 308]\n","30\n","[20, 21, 22, 23, 24, 25, 439, 440, 441, 442]\n","44\n","[31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49]\n","76\n","[4, 5, 6, 12, 13, 14, 15, 16, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90]\n","69\n","[102, 103, 104, 105, 106, 107, 156, 157, 158, 159, 160, 161]\n","60\n","[121, 122, 123, 124, 125, 126]\n","30\n","[7, 8, 9, 10, 11, 12, 13, 14, 15, 16]\n","37\n","[124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135]\n","60\n","[8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21]\n","54\n","[6, 7, 8, 9, 10, 11, 12]\n","24\n","[145, 146, 147, 148]\n","20\n","[167, 168, 169, 170, 171, 172, 173, 174, 175]\n","45\n","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 66, 67, 68, 69, 70, 71]\n","66\n","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20]\n","70\n","[13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29]\n","68\n","[49, 50, 51, 52, 53, 260, 261, 262, 263, 264, 265, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296]\n","125\n","[64, 65, 66, 67, 68, 69]\n","24\n","[9, 10, 11, 12, 13, 14]\n","23\n","[56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154]\n","210\n","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]\n","30\n","[40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54]\n","60\n","[27, 28, 29, 30, 31, 32, 33]\n","28\n","[22, 23, 24, 25, 26, 27, 28]\n","28\n","[269, 270, 271, 272, 273, 274, 280, 281, 282, 283]\n","50\n","[30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44]\n","60\n","[0, 1, 2, 3, 4]\n","15\n","[15, 16, 17, 18, 19, 20, 32, 33, 34, 35, 36, 37]\n","48\n","[51, 52, 53, 54, 55, 56]\n","24\n","[17, 18, 19, 20, 21, 22, 23, 24]\n","32\n","[17, 18, 19, 20, 21, 22]\n","24\n","[37, 38, 39, 40, 41, 42, 43, 44]\n","32\n","[14, 15, 16, 17, 18]\n","20\n","[90, 91, 92, 93, 94, 95, 96, 97, 98, 104, 105, 106, 107, 108, 109, 110, 111, 112, 147, 148, 149, 150]\n","101\n","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54]\n","210\n","[12, 13, 14, 15, 16, 17, 18, 19]\n","32\n","[245, 246, 247, 248, 249]\n","25\n","[29, 30, 31, 32, 33]\n","20\n","[321, 322, 323, 324]\n","20\n","[67, 68, 69, 70, 71]\n","20\n","[125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 157, 158, 159, 160, 161]\n","120\n","[346, 347, 348, 349, 350, 351, 352, 353]\n","40\n","[352, 353, 354, 355, 356, 357, 358]\n","35\n","[28, 29, 30, 31, 32, 33, 34]\n","28\n","[24, 25, 26, 27, 28]\n","20\n","[0, 1, 2, 3]\n","12\n","[77, 78, 79, 80, 81, 82]\n","24\n","[19, 20, 21, 22, 23, 50, 51, 52, 53, 54, 55, 56, 57, 58]\n","56\n","[29, 30, 31, 32, 33, 34, 35, 36, 37, 38]\n","40\n","[367, 368, 369, 370, 371, 372]\n","30\n","[97, 98, 99, 100, 101, 102, 103]\n","32\n","[0, 1, 2, 3, 4, 5]\n","18\n","[14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49]\n","136\n","[67, 68, 69, 70, 71, 72]\n","24\n","[0, 1, 2, 3, 4, 5, 6, 7]\n","24\n","[8, 9, 10, 11, 12, 13]\n","22\n","[43, 44, 45, 46, 47, 48, 49, 50, 78, 79, 80, 81, 82, 83, 84, 85, 86, 222, 223, 224, 225, 226, 227, 228, 229, 230, 249, 250, 251, 252, 253, 254, 255, 256, 257]\n","158\n","[61, 62, 63, 64, 65, 66, 67, 68, 69, 135, 136, 137, 138, 139, 140, 141, 142, 143]\n","81\n","[31, 32, 33, 34, 35, 36, 37, 160, 161, 162, 163, 164, 165, 166, 167, 206, 207, 208, 209, 210, 211]\n","98\n","[20, 21, 22, 23, 24, 25, 26, 27]\n","32\n","[29, 30, 31, 32, 33, 34, 35, 36]\n","32\n","[10, 11, 12, 13, 14, 15, 16, 17, 18]\n","36\n","[57, 58, 59, 60, 61, 62, 63, 64]\n","32\n","[116, 117, 118, 119, 120, 121, 122, 123, 124, 401, 402, 403, 404, 405, 406, 490, 491, 492, 493, 494, 495]\n","105\n","[99, 100, 101, 102]\n","19\n","[3, 4, 5, 6]\n","12\n","[14, 15, 16, 17, 18, 19]\n","24\n","[31, 32, 33, 34, 35, 36, 37]\n","28\n","[7, 8, 9, 10, 11, 12, 13, 14, 15, 16]\n","37\n","[4, 5, 6, 7, 8, 9, 10, 11]\n","26\n","[227, 228, 229, 230, 231, 232, 233]\n","35\n","[22, 23, 24, 25, 26, 27, 28, 99, 100, 101, 102]\n","47\n","[17, 18, 19, 20, 21, 22, 23]\n","28\n","[4, 5, 6, 7, 8, 9]\n","18\n","[159, 160, 161, 162, 163, 164, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294]\n","160\n","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27]\n","102\n","[66, 67, 68, 69, 70, 479, 480, 481, 482, 483, 484, 486, 487, 488, 489, 490, 491]\n","80\n","[295, 296, 297, 298, 299, 300]\n","30\n","[20, 21, 22, 23]\n","16\n","[0, 1, 2, 3, 4, 5]\n","18\n","[83, 84, 85, 86, 87, 88, 89, 90, 91, 92]\n","40\n","[12, 13, 14, 15]\n","16\n","[83, 84, 85, 86, 87, 88]\n","24\n","[24, 25, 26, 27, 28]\n","20\n","[7, 8, 9, 10, 11, 12]\n","21\n","[278, 279, 280, 281, 282, 283, 284, 285, 286, 287]\n","50\n","[16, 17, 18, 19, 20, 21, 22]\n","28\n","[52, 53, 54, 55, 56, 57]\n","24\n","[99, 100, 101, 102, 103, 104, 105, 106, 107, 108]\n","49\n","[10, 11, 12, 13, 14]\n","20\n","[19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 73, 74, 75, 76, 77, 78, 79]\n","88\n","[33, 34, 35, 36, 37]\n","20\n","[79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 112, 113, 114, 115, 116, 117]\n","74\n","[34, 35, 36, 37, 38, 39, 40, 41, 42]\n","36\n","[51, 52, 53, 54]\n","16\n","[80, 81, 82, 83]\n","16\n","[41, 42, 43, 44, 45, 46]\n","24\n","[24, 25, 26, 27, 28]\n","20\n","[99, 100, 101, 102, 103, 104]\n","29\n","[17, 18, 19, 20]\n","16\n","[7, 8, 9, 10, 11, 12, 70, 71, 72, 73]\n","37\n","[7, 8, 9, 10, 11]\n","17\n","[321, 322, 323, 324, 325]\n","25\n","[9, 10, 11, 12, 13, 14]\n","23\n","[45, 46, 47, 48, 49, 50]\n","24\n","[55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69]\n","60\n","[11, 12, 13, 14, 15, 16, 17, 18]\n","32\n","[124, 125, 126, 127, 128, 129]\n","30\n","[18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31]\n","56\n","[219, 220, 221, 222, 223, 586, 587, 588, 589, 590, 591, 592, 593, 594]\n","70\n","[73, 74, 75, 76, 77]\n","20\n","[14, 15, 16, 17, 18]\n","20\n","[31, 32, 33, 34, 35, 36]\n","24\n","[34, 35, 36, 37, 38, 39, 45, 46, 47, 48, 49]\n","44\n","[14, 15, 16, 17, 18, 19]\n","24\n","[35, 36, 37, 38, 39, 40, 41, 42, 43]\n","36\n","[89, 90, 91, 92, 93, 94, 95, 96, 97]\n","36\n","[29, 30, 31, 32, 33]\n","20\n","[103, 104, 105, 106, 107, 108]\n","30\n","[180, 181, 182, 183, 184, 185]\n","30\n","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]\n","30\n","[10, 11, 12, 13, 14, 15]\n","24\n","[58, 59, 60, 61, 62, 63, 64]\n","28\n","[135, 136, 137, 138, 139, 140]\n","30\n","[35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 204, 205, 206, 207, 208, 209]\n","78\n","[117, 118, 119, 120, 121]\n","25\n","[961, 962, 963, 964, 965]\n","25\n","[28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45]\n","72\n","[29, 30, 31, 32, 33, 34, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73]\n","148\n","[39, 40, 41, 42, 43, 44, 45, 46]\n","32\n","[23, 24, 25, 26, 27, 28, 29]\n","28\n","[7, 8, 9, 10, 11]\n","17\n","[4, 5, 6, 7, 8, 9, 10, 36, 37, 38, 39, 40]\n","42\n","[138, 139, 140, 141, 142]\n","25\n","[0, 1, 2, 3, 20, 21, 22, 23, 50, 51, 52, 53, 54, 55, 56, 57]\n","60\n","[26, 27, 28, 29, 30, 31, 32, 33, 34, 50, 51, 52, 53, 54, 55, 56, 57]\n","68\n","[62, 63, 64, 65]\n","16\n","[11, 12, 13, 14, 15, 41, 42, 43, 44, 45, 46, 47, 48, 49]\n","56\n","[421, 422, 423, 424, 425, 426, 427, 428, 429, 430]\n","50\n","[20, 21, 22, 23, 24, 25]\n","24\n","[65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75]\n","44\n","[385, 386, 387, 388, 485, 486, 487, 488, 489, 490, 491, 492]\n","60\n","[25, 26, 27, 28, 29, 30]\n","24\n","[21, 22, 23, 24, 25, 26, 27, 28, 29]\n","36\n","[115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186]\n","240\n","[66, 67, 68, 69, 70, 71, 72, 73, 74, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 91, 92, 93, 94, 95, 96, 102, 103, 104, 105, 106, 107, 108]\n","143\n","[7, 8, 9, 10, 11]\n","17\n","[52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68]\n","68\n","[33, 34, 35, 36]\n","16\n","[46, 47, 48, 49, 50, 51, 52]\n","28\n","[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982]\n","4802\n","[23, 24, 25, 26, 27, 28, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221]\n","154\n","[318, 319, 320, 321, 322, 323, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418]\n","80\n","[248, 249, 250, 252, 253, 254, 255, 256, 257]\n","45\n","[0, 1, 2, 3, 4, 5, 17, 18, 19, 20, 21, 22, 23]\n","46\n","[13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23]\n","44\n","[37, 38, 39, 40, 41, 42, 43]\n","28\n","[65, 66, 67, 68, 69]\n","20\n","[46, 47, 48, 49, 50, 51]\n","24\n","[50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73]\n","96\n","[16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33]\n","72\n","[256, 257, 258, 259, 260, 261]\n","30\n","[17, 18, 19, 20, 21]\n","20\n","[51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 742, 743, 744, 745, 746, 747]\n","74\n","[5, 6, 7, 8, 9, 10, 18, 19, 20, 21, 22, 23, 46, 47, 48, 49, 50, 51]\n","67\n","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]\n","42\n","[21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53]\n","128\n","[0, 1, 2, 3, 4, 5]\n","18\n","[9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25]\n","67\n","[14, 15, 16, 17, 18, 64, 65, 66, 67, 68, 85, 86, 87, 88, 89]\n","60\n","[0, 1, 2, 3, 4, 5, 6, 7]\n","24\n","[22, 23, 24, 25, 26, 27, 28]\n","28\n","[590, 591, 592, 593, 594, 595, 596, 597, 598]\n","45\n","[164, 165, 166, 167, 168, 169, 170, 171, 172]\n","45\n","[80, 81, 82, 83]\n","16\n","[5, 6, 7, 8, 9]\n","15\n","[179, 180, 181, 182, 183, 184, 185, 186, 187]\n","45\n","[0, 1, 2, 3, 4, 5]\n","18\n","[16, 17, 18, 19, 20, 21]\n","24\n","[20, 21, 22, 23, 24, 25, 26, 27, 113, 114, 115, 116, 117, 118]\n","62\n","[22, 23, 24, 25, 26, 27, 28, 537, 538, 539, 540, 541]\n","53\n","[115, 116, 117, 118, 119]\n","25\n","[48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68]\n","84\n","[20, 21, 22, 23]\n","16\n","[190, 191, 192, 193, 194, 195, 196, 197]\n","40\n","[27, 28, 29, 30, 31, 32]\n","24\n","[65, 66, 67, 68, 69, 70]\n","24\n","[154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189]\n","180\n","[114, 115, 116, 117]\n","20\n","[31, 32, 33, 34]\n","16\n","[120, 121, 122, 123, 124, 125]\n","30\n","[22, 23, 24, 25]\n","16\n","[346, 347, 348, 349, 350, 351, 352, 353, 354, 355]\n","50\n","[84, 85, 86, 87, 88, 89]\n","24\n","[92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109]\n","82\n","[160, 161, 162, 163, 164, 165]\n","30\n","[214, 215, 216]\n","15\n","[186, 187, 188, 189, 190, 191]\n","30\n","[358, 359, 360, 361, 362, 363, 364, 365, 368, 369, 370, 371, 372, 373]\n","70\n","[21, 22, 23, 24, 25]\n","20\n","[69, 70, 71, 72, 73, 74]\n","24\n","[23, 24, 25, 26]\n","16\n","[12, 13, 14, 15, 16, 17, 18, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248]\n","180\n","[0, 1, 2, 3, 4, 5, 13, 14, 15, 16, 17, 18]\n","42\n","[141, 142, 143, 144, 145]\n","25\n","[20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47]\n","112\n","[282, 283, 284, 285, 286, 287, 288]\n","35\n","[12, 13, 14, 15, 16, 81, 82, 83, 84, 85, 86]\n","44\n","[17, 18, 19, 20, 21, 22, 23]\n","28\n","[6, 7, 8, 9, 10]\n","16\n","[307, 308, 309, 310, 311]\n","25\n","[345, 346, 347, 348, 349, 350, 351, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431]\n","100\n","[79, 80, 81, 82, 83, 84, 85, 86, 87]\n","36\n","[40, 41, 42, 43, 44, 45]\n","24\n","[24, 25, 26, 27, 77, 78, 79, 80, 81, 82]\n","40\n","[13, 14, 15, 16, 17, 18, 19, 20]\n","32\n","[104, 105, 106, 107, 108]\n","25\n","[49, 50, 51, 52, 53, 54, 55, 56]\n","32\n","[171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183]\n","65\n","[23, 24, 25, 26, 27]\n","20\n","[12, 13, 14, 15, 16, 17, 18, 94, 95, 96, 97, 98, 99]\n","52\n","[390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432]\n","215\n","[425, 426, 427, 428, 429, 430, 431, 432, 500, 501, 502, 503, 504]\n","65\n","[87, 88, 89, 90, 91, 92, 93, 94]\n","32\n","[28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61]\n","136\n","[57, 58, 59, 60]\n","16\n","[61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82]\n","88\n","[19, 20, 21, 22, 23, 24]\n","24\n","[173, 174, 175, 176, 180, 181, 182, 183, 184]\n","45\n","[26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42]\n","68\n","[7, 8, 9, 10, 11, 12, 13, 14, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329]\n","84\n","[49, 50, 51, 52, 53, 54]\n","24\n","[194, 195, 196, 197, 198, 199]\n","30\n","[72, 73, 74, 75, 76, 77, 78, 79, 80, 81]\n","40\n","[446, 447, 448, 449, 450, 451]\n","30\n","[89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111]\n","104\n","[122, 123, 124, 125, 126, 127]\n","30\n","[2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40]\n","124\n","[20, 21, 22, 23, 24, 25, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44]\n","64\n","[27, 28, 29, 30, 31]\n","20\n","[9, 10, 11, 12, 13, 44, 45, 46, 47, 48, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88]\n","171\n","[20, 21, 22, 23, 24, 25, 26, 27, 28]\n","36\n","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]\n","30\n","[19, 20, 21, 22, 23]\n","20\n","[45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66]\n","88\n","[8, 9, 10, 11, 12, 13, 14, 15, 16]\n","34\n","[31, 32, 33, 34, 35, 36]\n","24\n","[40, 41, 42, 43, 44, 45, 46, 47, 48]\n","36\n","[55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67]\n","52\n","[153, 154, 155, 156, 157, 158, 159, 218, 219, 220, 221, 222, 223, 224]\n","70\n","[43, 44, 45, 46, 47]\n","20\n","[19, 20, 21, 22, 23, 24, 25, 26, 100, 101, 102, 103, 104, 105, 106, 107, 108]\n","77\n","[38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49]\n","48\n","[53, 54, 55, 56, 57, 58]\n","24\n","[53, 54, 55, 56, 57, 58, 59, 60, 61, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128]\n","131\n","[41, 42, 43, 44, 45, 46]\n","24\n","[18, 19, 20, 21, 22]\n","20\n","[366, 367, 368, 369, 370, 371, 372, 373, 374]\n","45\n","[114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141]\n","140\n","[22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33]\n","48\n","[164, 165, 166, 167, 168, 205, 206, 207, 208, 209, 210]\n","55\n","[154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 166, 167, 168, 169, 170, 171, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 302, 303, 304, 305, 310, 311, 312, 313, 314, 315, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336]\n","275\n","[197, 198, 199, 200, 201, 202, 304, 305, 306, 307, 308, 309, 310]\n","65\n","[363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 528, 529, 530, 531, 532]\n","95\n","[45, 46, 47, 48, 49]\n","20\n","[15, 16, 17, 18]\n","16\n","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 21, 22, 23, 24, 25, 26]\n","86\n","[17, 18, 19, 20, 21, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694]\n","70\n","[7, 8, 9, 10, 11, 12, 13, 14, 15]\n","33\n","[0, 1, 2, 3, 4, 5, 6]\n","21\n","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27]\n","102\n","[353, 354, 355, 356, 357, 358, 463, 464, 465, 466, 467, 468, 469, 470]\n","70\n","[0, 1, 2, 3, 4, 5, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 55, 56, 57, 58, 59, 78, 79, 80, 81, 82, 83, 84]\n","118\n","[6, 7, 8, 9, 10]\n","16\n","[22, 23, 24, 25, 26, 27, 28, 29, 208, 209, 210, 211, 212, 213]\n","62\n","[16, 17, 18, 19, 20, 21, 218, 219, 220, 221, 222, 223]\n","54\n","[73, 74, 75, 76, 77, 78]\n","24\n","[1, 2, 3, 4, 5, 6, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505]\n","78\n","[17, 18, 19, 20, 21, 22, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138]\n","129\n","[11, 12, 13, 14, 15, 16]\n","24\n","[25, 26, 27, 28, 29, 30]\n","24\n","[105, 106, 107, 108, 109, 110, 111]\n","35\n","[255, 256, 257, 258, 259, 260, 261, 262, 263]\n","45\n","[109, 110, 111, 112, 113]\n","25\n","[10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38]\n","116\n","[32, 33, 34, 35]\n","16\n","[29, 30, 31, 32, 33, 34, 35, 36, 37]\n","36\n","[192, 193, 194, 195, 279, 280, 281, 383, 384, 385, 386]\n","55\n","[107, 108, 109, 110]\n","20\n","[99, 100, 101, 102, 103]\n","24\n","[366, 367, 368, 369, 370]\n","25\n","[20, 21, 22, 23, 24, 60, 61, 62, 63]\n","36\n","[24, 25, 26, 27, 28, 29, 30]\n","28\n","[32, 33, 34, 35, 36]\n","20\n","[128, 129, 130, 131, 132, 133]\n","30\n","[228, 229, 230, 231, 232, 233]\n","30\n","[52, 53, 54, 55, 56, 57]\n","24\n","[31, 32, 33, 34, 35, 36, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 296, 297, 298, 299, 300, 301, 302, 303]\n","119\n","[8, 9, 10, 11, 12, 13, 14]\n","26\n","[15, 16, 17, 18, 19]\n","20\n","[159, 160, 161, 162, 163, 164, 165]\n","35\n","[52, 53, 54, 55]\n","16\n","[23, 24, 25, 26, 27, 28]\n","24\n","[0, 1, 2, 3, 4, 5, 6]\n","21\n","[24, 25, 26, 27, 28, 29, 30, 31]\n","32\n","[42, 43, 44, 45, 46]\n","20\n","[53, 54, 55, 56]\n","16\n","[5, 6, 7, 8, 9]\n","15\n","[0, 1, 2, 3, 4]\n","15\n","[95, 96, 97, 98, 99, 100, 101, 102]\n","35\n","[7, 8, 9, 10, 11, 12, 13, 14, 93, 94, 95]\n","41\n","[117, 118, 119, 120, 121, 122, 123, 124, 125]\n","45\n","[94, 95, 96, 97, 98, 99]\n","24\n","[0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14]\n","47\n","[485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498]\n","70\n","[207, 208, 209, 210]\n","20\n","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14]\n","50\n","[107, 108, 109, 110, 111, 112, 113, 130, 131, 132, 133, 134, 135, 136]\n","70\n","[103, 104, 105, 106, 107, 108, 109]\n","35\n","[48, 49, 50, 51, 52, 53, 102, 103, 104, 105, 106, 107]\n","54\n","[219, 220, 221, 222, 223, 224, 225, 226, 227, 228]\n","50\n","[91, 92, 93, 94, 95, 96, 192, 193, 194, 195, 196, 197]\n","54\n","[91, 92, 93, 94, 95]\n","20\n","[14, 15, 16, 17, 18, 19]\n","24\n","[58, 59, 60, 61, 62]\n","20\n","[0, 1, 2, 3, 4, 5, 6, 7]\n","24\n","[4, 5, 6, 7, 8, 9, 10, 11]\n","26\n","[435, 436, 437, 438, 439, 440, 441, 442, 443]\n","45\n","[46, 47, 48, 49, 50]\n","20\n","[0, 1, 2, 3, 4, 5]\n","18\n","[12, 13, 14, 15, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57]\n","80\n","[18, 19, 20, 21, 22, 54, 55, 56, 57, 58, 70, 71, 72, 73, 74, 75, 116, 117, 118, 119, 120]\n","89\n","[32, 33, 34, 35, 36]\n","20\n","[7, 8, 9, 10, 11, 12, 13, 14, 15, 16]\n","37\n","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]\n","54\n","[164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 380, 381, 382, 383, 384, 739, 740, 741]\n","165\n","[14, 15, 16, 17, 18, 19, 20, 21]\n","32\n","[72, 73, 74, 75, 76, 77, 78]\n","28\n","[816, 817, 818, 819, 820, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932]\n","85\n","[126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139]\n","70\n","[57, 58, 59, 60, 61, 62, 63]\n","28\n","[9, 10, 11, 12]\n","15\n","[26, 27, 28, 29, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241]\n","162\n","[44, 45, 46, 47]\n","16\n","[263, 264, 265, 266, 267, 268]\n","30\n","[229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242]\n","70\n","[17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54]\n","152\n","[20, 21, 22, 23, 24, 25]\n","24\n","[20, 21, 22, 23, 24, 25, 26, 27, 28, 153, 154, 155, 156, 157]\n","61\n","[64, 65, 66, 67, 68, 69]\n","24\n","[189, 190, 191, 192, 193, 194, 195, 252, 253, 254, 255, 256, 257]\n","65\n","[140, 141, 142, 143, 144, 145, 146]\n","35\n","[113, 114, 115, 116, 117, 118, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137]\n","80\n","[0, 1, 2, 3, 14, 15, 16, 17, 18, 19, 20]\n","40\n","[48, 49, 50, 51, 52, 53, 54]\n","28\n","[0, 1, 2, 3, 4, 5, 6]\n","21\n","[798, 799, 800, 801, 802, 803, 804, 805, 806, 807]\n","50\n","[74, 75, 76, 77, 78, 205, 206, 207, 208, 209, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341]\n","160\n","[16, 17, 18, 19, 20, 21]\n","24\n","[11, 12, 13, 14, 15, 16, 17, 18, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32]\n","72\n","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28]\n","106\n","[5, 6, 7, 8, 9, 40, 41, 42]\n","27\n","[8, 9, 10, 11, 12, 13, 14, 15, 16, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189]\n","124\n","[111, 112, 113, 114, 115, 116, 117, 118, 273, 274, 275, 276, 277, 278]\n","70\n","[81, 82, 83, 84, 85]\n","20\n","[39, 40, 41, 42, 43, 44, 45, 46, 47]\n","36\n","[11, 12, 13, 14, 15]\n","20\n","[29, 30, 31, 32, 33, 34]\n","24\n","[345, 346, 347, 348, 349, 350]\n","30\n","[4, 5, 6, 7, 8, 9, 10, 11]\n","26\n","[82, 83, 84, 85, 86, 87, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 226, 227, 228, 229, 230, 231]\n","119\n","[183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197]\n","75\n","[17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28]\n","48\n","[87, 88, 89, 90, 109, 110, 111, 112, 113]\n","41\n","[0, 1, 2, 3, 4, 5]\n","18\n","[31, 32, 33, 34]\n","16\n","[6, 7, 8, 9, 10, 11, 12, 13, 14, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 93, 94, 95, 96, 97, 98, 99, 100, 101]\n","126\n","[138, 139, 140, 141, 142]\n","25\n","[10, 11, 12, 13]\n","16\n","[88, 89, 90, 91, 92]\n","20\n","[220, 221, 222, 223, 224, 225, 226, 227]\n","40\n","[26, 27, 28, 29, 30, 114, 115, 116, 117, 118, 119, 120]\n","55\n","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]\n","54\n","[14, 15, 16, 17, 18, 19]\n","24\n","[680, 681, 682, 683, 684, 685, 686, 687, 688, 689]\n","50\n","[13, 14, 15, 16, 17, 18, 19, 26, 27, 28, 29, 30, 31, 32, 33, 34]\n","64\n","[0, 1, 2, 3, 33, 34, 35]\n","24\n","[8, 9, 10, 11, 12, 13]\n","22\n","[13, 14, 15, 16, 17, 18, 19, 20]\n","32\n","[276, 277, 278, 279, 280, 281, 282, 283, 284, 285]\n","50\n","[6, 7, 8, 9, 174, 175, 176, 177, 178]\n","37\n","[205, 206, 207, 208, 209, 210, 211]\n","35\n","[39, 40, 41, 42, 43, 44, 45, 46, 47]\n","36\n","[39, 40, 41, 42, 43]\n","20\n","[165, 166, 167, 168, 169, 170, 171]\n","35\n","[10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37]\n","112\n","[419, 420, 421, 422, 423, 424, 425, 437, 438, 439, 440, 441, 442, 443]\n","70\n","[5, 6, 7, 8, 9, 10]\n","19\n","[95, 96, 97, 98, 99, 100, 101, 102, 103]\n","40\n","[16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33]\n","72\n","[21, 22, 23, 24, 25, 26, 524, 525, 526, 527, 528]\n","49\n","[12, 13, 14, 15, 16, 17]\n","24\n","[0, 1, 2, 9, 10, 11, 12, 13, 14, 15, 72, 73, 74, 75]\n","52\n","[8, 9, 10, 11, 12, 13, 14, 15]\n","30\n","[0, 1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16]\n","55\n","[44, 45, 46, 47, 48, 49, 50, 51, 52]\n","36\n","[783, 784, 785, 786, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 963, 964, 965, 966]\n","90\n","[186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 245, 246, 247, 248, 249, 250]\n","110\n","[331, 332, 333, 334, 335]\n","25\n","[10, 11, 12, 13, 14, 15, 16]\n","28\n","[147, 148, 149, 150, 151]\n","25\n","[6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77]\n","268\n","[9, 10, 11, 12, 13]\n","19\n","[37, 38, 39, 40, 57, 58, 59, 60]\n","32\n","[7, 8, 9, 10, 11, 12, 13, 14]\n","29\n","[96, 97, 98, 99, 136, 137, 138, 139, 140]\n","41\n","[16, 17, 18, 19, 20, 21, 22, 23]\n","32\n","[613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987]\n","170\n","[42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66]\n","100\n","[9, 10, 11, 12, 13, 14, 15, 25, 26, 27, 28, 224, 225, 226, 227, 228]\n","68\n","[32, 33, 34, 35]\n","16\n","[98, 99, 100, 101, 102, 103]\n","28\n","[292, 293, 294, 295, 296, 297]\n","30\n","[409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 508, 509, 510, 511, 512, 513, 514]\n","115\n","[12, 13, 14, 15, 16]\n","20\n","[22, 23, 24, 25, 26, 27]\n","24\n","[215, 216, 217, 218, 219, 220]\n","30\n","[74, 75, 76, 77]\n","16\n","[0, 1, 2, 3]\n","12\n","[28, 29, 30, 31, 32, 33]\n","24\n","[37, 38, 39, 40, 41, 42]\n","24\n","[16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29]\n","56\n","[12, 13, 14, 15, 16, 17, 18]\n","28\n","[18, 19, 20, 21, 22, 23]\n","24\n","[18, 19, 20, 21, 22, 23, 24, 25]\n","32\n","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23]\n","86\n","[0, 1, 2, 3, 12, 13, 14, 15, 16, 17, 18, 19, 20]\n","48\n","[0, 1, 2, 3, 9, 10, 11, 12, 13, 14, 15, 16]\n","43\n","[437, 438, 439, 440, 441, 442, 443]\n","35\n","[43, 44, 45, 46]\n","16\n","[24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52]\n","116\n","[71, 72, 73, 74, 75, 76, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93]\n","84\n","[48, 49, 50, 51, 52]\n","20\n","[7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 31, 32, 33, 34, 35, 110, 111, 112, 113, 114, 120, 121, 122, 128, 129, 130, 131, 132, 133, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150]\n","203\n","[13, 14, 15, 16, 17, 18, 19]\n","28\n","[14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31]\n","72\n","[13, 14, 15, 16, 17, 18, 19]\n","28\n","[50, 51, 52, 53, 54, 55, 56, 57]\n","32\n","[23, 24, 25, 26, 27, 28, 29, 30, 31, 32]\n","40\n","[9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292]\n","204\n","[47, 48, 49, 50]\n","16\n","[46, 47, 48, 49, 50, 51]\n","24\n","[160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192]\n","165\n","[27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 48, 49, 50, 51, 52]\n","76\n","[8, 9, 10, 11, 12, 13, 14, 15, 16, 184, 185, 186, 187, 188, 189]\n","64\n","[198, 199, 200, 201, 202, 203]\n","30\n","[159, 160, 161, 162, 168, 169, 170, 171, 172, 173, 174, 175, 176]\n","65\n","[62, 63, 64, 65]\n","16\n","[81, 82, 83, 84, 85]\n","20\n","[26, 27, 28, 29]\n","16\n","[11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 46, 47, 48, 49, 50]\n","100\n","[99, 100, 101, 102]\n","19\n","[134, 135, 136, 137, 138, 139, 140, 141, 142, 143]\n","50\n","[93, 94, 95, 96]\n","16\n","[472, 473, 474, 475, 476, 477, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635]\n","95\n","[68, 69, 70, 71, 72, 73, 74, 75, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 120]\n","87\n","[135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165]\n","155\n","[18, 19, 20, 21, 22, 23, 24, 25]\n","32\n","[77, 78, 79, 80, 81]\n","20\n","[10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 170, 171, 172, 173]\n","60\n","[45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56]\n","48\n","[70, 71, 72, 73, 74]\n","20\n","[19, 20, 21, 22, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82]\n","60\n","[72, 73, 74, 75, 76, 77, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160]\n","89\n","[21, 22, 23, 24, 205, 206, 207, 208, 209]\n","41\n","[151, 152, 153, 154, 155, 156, 157, 158, 159]\n","45\n","[32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58]\n","108\n","[0, 1, 2, 3, 4, 5]\n","18\n","[37, 38, 39, 40, 41, 42, 48, 49, 50, 51, 52, 53, 54]\n","52\n","[6, 7, 8, 9, 10, 11]\n","20\n","[282, 283, 284, 285, 286]\n","25\n","[32, 33, 34, 35, 36, 37]\n","24\n","[17, 18, 19, 20]\n","16\n","[177, 178, 179, 180, 181, 182, 183, 184, 185, 186]\n","50\n","[8, 9, 10, 11, 12, 13, 14, 54, 55, 56, 57, 58, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 82, 83, 84, 85]\n","102\n","[21, 22, 23, 24, 139, 140, 141, 142]\n","36\n","[0, 1, 2, 3, 4, 5, 6, 7, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31]\n","108\n","[67, 68, 69, 70, 71, 72, 73, 74, 75]\n","36\n","[49, 50, 51, 52, 53, 54]\n","24\n","[5, 6, 7, 8, 9, 10]\n","19\n","[56, 57, 58, 59, 60, 61]\n","24\n","[127, 128, 129, 130, 131, 132]\n","30\n","[157, 158, 159, 160, 161, 162]\n","30\n","[219, 220, 221, 222, 223, 224]\n","30\n","[127, 128, 129, 130, 131]\n","25\n","[37, 38, 39, 40, 41, 42]\n","24\n","[11, 12, 13, 14, 15, 16, 17, 18, 19, 20]\n","40\n","[53, 54, 55, 56, 57, 58]\n","24\n","[111, 112, 113, 114, 115, 116, 117]\n","35\n","[1, 2, 3, 4, 5, 6, 7, 12, 13, 14, 15, 16, 17, 18, 19]\n","53\n","[20, 21, 22, 23, 24, 36, 37, 38, 54, 55, 56, 82, 83, 84]\n","56\n","[7, 8, 9, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26]\n","69\n","[278, 279, 280, 281, 282, 283, 284]\n","35\n","[38, 39, 40, 41, 68, 69, 70, 71, 72, 73, 74, 75]\n","48\n","[31, 32, 33, 34, 35]\n","20\n","[30, 31, 32]\n","12\n","[82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123]\n","179\n","[4, 5, 6, 7, 8, 9, 10]\n","22\n","[5, 6, 7, 8, 9, 29, 30, 31, 32, 33, 34, 35, 36, 37, 78, 79, 80, 81]\n","67\n","[22, 23, 24, 25]\n","16\n","[29, 30, 31, 32, 33, 65, 66, 67, 68, 69, 70, 71, 72]\n","52\n","[38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50]\n","52\n","[23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37]\n","60\n","[168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 269, 270, 271, 272, 273, 274]\n","110\n","[24, 25, 26, 27]\n","16\n","[8, 9, 10, 11, 12, 13]\n","22\n","[72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89]\n","72\n","[22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35]\n","56\n","[79, 80, 81, 82, 83, 84]\n","24\n","[39, 40, 41, 42, 43, 44]\n","24\n","[181, 182, 183, 184, 185, 186]\n","30\n","[13, 14, 15, 16]\n","16\n","[74, 75, 76, 77]\n","16\n","[215, 216, 217, 218, 219]\n","25\n","[36, 37, 38, 39, 40]\n","20\n","[9, 10, 11, 12, 13, 14, 15, 16, 23, 24, 25, 26, 27, 28, 29, 30, 31, 218, 219, 220, 221, 222, 223]\n","97\n","[20, 21, 22, 23, 24, 25, 26, 27]\n","32\n","[127, 128, 129, 130, 131, 132]\n","30\n","[47, 48, 49, 50, 51, 52]\n","24\n","[212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258]\n","130\n","[61, 62, 63, 64, 65, 66, 109, 110, 111, 112, 113, 114]\n","54\n","[37, 38, 39, 40, 41]\n","20\n","[11, 12, 13, 14, 15, 16, 53, 54, 55, 56, 57, 58]\n","48\n","[49, 50, 51, 52, 153, 154, 155, 156, 157, 158]\n","46\n","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 69, 70, 71]\n","70\n","[7, 8, 9]\n","9\n","[0, 1, 2, 3]\n","12\n","[27, 28, 29, 30, 31]\n","20\n","[162, 163, 164, 165, 166, 167]\n","30\n","[109, 110, 111, 112, 113, 209, 210, 211, 212, 213, 214, 215, 232, 233, 234, 235, 236]\n","85\n","[67, 68, 69, 70, 71, 72]\n","24\n","[773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784]\n","60\n","[137, 138, 139, 140, 141, 142]\n","30\n","[17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45]\n","116\n","[13, 14, 15, 16, 17]\n","20\n","[2, 3, 4, 5, 6, 7]\n","18\n","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51]\n","198\n","[0, 1, 26, 27, 28, 29, 30, 31, 32, 33]\n","38\n","[48, 49, 50, 51, 52, 53, 54, 55, 133, 134, 135, 136, 137, 138]\n","62\n","[86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98]\n","52\n","[8, 9, 10, 11, 12]\n","18\n","[42, 43, 44, 45, 46, 47]\n","24\n","[142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153]\n","60\n","[37, 38, 39, 40, 41, 42]\n","24\n","[98, 99, 100, 101, 102, 103, 104, 105, 112, 113, 114, 115, 116, 117, 118]\n","73\n","[87, 88, 89, 90, 91, 92]\n","24\n","[11, 12, 13, 14, 15, 16, 17]\n","28\n","[25, 26, 27, 28, 29, 30]\n","24\n","[5, 6, 7, 8]\n","12\n","[15, 16, 17, 18, 19]\n","20\n","[20, 21, 22, 23, 24, 25, 26, 27]\n","32\n","[191, 192, 193, 194, 195, 196, 197, 198, 199]\n","45\n","[4, 5, 6, 7, 8, 9, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73]\n","70\n","[15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 33, 34, 35, 36, 37, 38]\n","68\n","[8, 9, 10, 11, 12]\n","18\n","[130, 131, 132, 133, 134]\n","25\n","[23, 24, 25, 26, 27, 28]\n","24\n","[77, 78, 79, 80, 81, 82]\n","24\n","[48, 49, 50, 51]\n","16\n","[227, 228, 229, 230, 231, 232]\n","30\n","[18, 19, 20, 21, 22, 23, 24, 25]\n","32\n","[9, 10, 11]\n","11\n","[71, 72, 73, 74, 75, 76]\n","24\n","[22, 23, 24, 25, 26, 27, 28]\n","28\n","[15, 16, 17, 18, 19, 20]\n","24\n","[11, 12, 13, 14]\n","16\n","[404, 405, 406, 407]\n","20\n","[123, 124, 125, 126, 127, 128]\n","30\n","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77]\n","302\n","[52, 53, 54, 55, 56]\n","20\n","[13, 14, 15, 16, 17, 18, 19, 20, 21, 22]\n","40\n","[330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349]\n","100\n","[71, 72, 73, 74, 75, 76]\n","24\n","[118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133]\n","80\n","[60, 61, 62]\n","12\n","[44, 45, 46, 47]\n","16\n","[43, 44, 45, 46, 47, 48, 49, 50]\n","32\n","[86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106]\n","91\n","[128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161]\n","170\n","[58, 59, 60, 61, 62]\n","20\n","[47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61]\n","60\n","[15, 16, 17, 18, 19, 20]\n","24\n","[102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118]\n","85\n","[7, 8, 9, 10, 11, 12]\n","21\n","[90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104]\n","65\n","[13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35]\n","92\n","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30]\n","94\n","[83, 84, 85, 86, 87, 88, 89, 90, 91]\n","36\n","[27, 28, 29, 30]\n","16\n","[61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105]\n","118\n","[9, 10, 11, 12, 13, 14, 15, 35, 36, 37, 38, 39, 40, 41, 42, 74, 75, 76, 77]\n","75\n","[14, 15, 16, 17, 18, 19]\n","24\n","[72, 73, 74, 75, 76, 77, 78, 79, 80]\n","36\n","[63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73]\n","44\n","[233, 234, 235, 236, 237, 238, 239, 240, 241]\n","45\n","[173, 174, 175, 176, 177]\n","25\n","[0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15]\n","51\n","[193, 194, 195, 196, 197, 198, 199]\n","35\n","[69, 70, 71, 72, 73, 74, 75]\n","28\n","[14, 15, 16, 17, 18, 19, 20, 21, 22]\n","36\n","[16, 17, 18, 19, 20, 21]\n","24\n","[246, 247, 248, 249, 250, 251]\n","30\n","[148, 149, 150, 151, 152]\n","25\n","[88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101]\n","58\n","[76, 77, 78, 79, 80, 81, 82, 83, 84, 138, 139, 140, 141, 142, 143, 144, 145, 146, 182, 183, 184, 185, 186, 187, 188, 189, 190, 427, 428, 429, 430, 431, 432, 433, 434, 435, 756, 757, 758, 759, 760, 761, 762, 763, 764, 773, 774, 775, 776, 777, 778, 779, 780, 781, 809, 810, 811, 812, 813, 814, 815, 816, 817]\n","306\n","[43, 44, 45, 46, 47, 48, 49, 50, 51, 52]\n","40\n","[42, 43, 44, 45]\n","16\n","[216, 217, 218, 219]\n","20\n","[288, 289, 290, 291, 292, 293]\n","30\n","[7, 8, 9, 10, 11, 12, 13, 112, 113, 114, 115, 116]\n","50\n","[98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 140, 141, 142, 143, 144]\n","73\n","[42, 43, 44, 45, 46, 47]\n","24\n","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19]\n","70\n","[167, 168, 169, 170, 171, 172, 173]\n","35\n","[82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96]\n","60\n","[12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27]\n","64\n","[25, 26, 27, 28, 29, 30]\n","24\n","[0, 1, 2, 3]\n","12\n","[118, 119, 120, 121, 122, 123]\n","30\n","[21, 22, 23, 24, 25, 26, 27, 65, 66, 67, 68]\n","44\n","[14, 15, 16, 17, 18, 19, 40, 41, 42, 43, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60]\n","88\n","[90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 102, 103]\n","56\n","[107, 108, 109, 110, 111, 112]\n","30\n","[142, 143, 144, 145, 146, 147, 148, 149, 211, 212, 213, 214, 215]\n","65\n","[267, 268, 269, 270, 271, 272]\n","30\n","[15, 16, 17, 18, 21, 22, 23, 24, 25, 26, 27, 28, 29, 36, 37, 38, 39, 40, 41]\n","76\n","[45, 46, 47, 48, 49, 50, 51]\n","28\n","[226, 227, 228, 229, 230, 231]\n","30\n","[0, 1, 2, 3]\n","12\n","[9, 10, 11, 12, 13, 14]\n","23\n","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31]\n","118\n","[52, 53, 54, 55, 56, 57, 63, 64, 65, 66, 67]\n","44\n","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]\n","30\n","[42, 43, 44, 45]\n","16\n","[19, 20, 21, 22]\n","16\n","[158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179]\n","105\n","[82, 83, 84, 85]\n","16\n","[9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 38, 39, 40, 41, 42, 43]\n","91\n","[54, 55, 56, 57, 58, 59, 60]\n","28\n","[251, 252, 253, 254, 255, 256, 257]\n","35\n","[40, 41, 42, 43, 44, 45, 46]\n","28\n","[9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 134, 135, 136, 137, 138, 139, 140, 141]\n","99\n","[17, 18, 19, 20, 21, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83]\n","64\n","[78, 79, 80, 81, 82, 83, 84]\n","28\n","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64]\n","250\n","[145, 146, 147, 148, 149, 150]\n","30\n","[77, 78, 79, 80]\n","16\n","[144, 145, 146, 147, 148, 149, 150]\n","35\n","[120, 121, 122, 123, 124, 125, 126, 127, 128]\n","45\n","[31, 32, 33, 34]\n","16\n","[103, 104, 105, 106, 107, 108, 109, 110, 111, 112]\n","50\n","[25, 26, 27, 28, 29, 30, 31, 32, 33]\n","36\n","[691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701]\n","55\n","[85, 86, 87, 88, 89, 90]\n","24\n","[60, 61, 62, 63, 64, 65, 66, 67, 68, 71, 72, 73, 74]\n","52\n","[92, 93, 94, 95, 96]\n","20\n","[112, 113, 114, 115, 116, 117]\n","30\n","[49, 50, 51, 52, 53]\n","20\n","[66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76]\n","44\n","[57, 58, 59, 60, 61]\n","20\n","[26, 27, 28, 29]\n","16\n","[91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106]\n","71\n","[90, 91, 92, 93, 94, 95]\n","24\n","[19, 20, 21, 22, 23, 24, 25, 26, 27, 226, 227, 228, 229, 230, 231]\n","66\n","[24, 25, 26, 27, 28]\n","20\n","[19, 20, 21, 22, 23, 24]\n","24\n","[0, 1, 2, 3, 4, 531, 532, 533, 534, 535, 536, 537, 538, 539]\n","60\n","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]\n","42\n","[7, 8, 9, 10]\n","13\n","[384, 385, 386, 387]\n","20\n","[47, 48, 49, 50, 51, 52]\n","24\n","[11, 12, 13, 14, 15, 16, 17, 18]\n","32\n","[22, 23, 24, 25, 26, 27, 28, 29]\n","32\n","[240, 241, 242, 243, 244, 245]\n","30\n","[37, 38, 39, 40, 41, 42, 43, 44, 45]\n","36\n","[17, 18, 19, 20, 21, 22]\n","24\n","[83, 84, 85, 86]\n","16\n","[88, 89, 90, 91]\n","16\n","[8, 9, 10, 11, 12, 13, 14]\n","26\n","[111, 112, 113, 114, 115, 116, 117]\n","35\n","[21, 22, 23, 24, 25, 26]\n","24\n","[22, 23, 24, 25]\n","16\n","[88, 89, 90, 91, 92, 93]\n","24\n","[21, 22, 23, 24, 25]\n","20\n","[21, 22, 23, 24, 25, 26, 31, 32, 33, 34]\n","40\n","[32, 33, 34, 35, 36, 37, 38, 160, 161, 162, 163, 164, 165, 166, 167, 168]\n","73\n","[95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157]\n","210\n","[19, 20, 21, 22]\n","16\n","[40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50]\n","44\n","[44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57]\n","56\n","[60, 61, 62, 63, 64, 65, 66]\n","28\n","[29, 30, 31]\n","12\n","[35, 36, 37, 38, 39, 40, 41]\n","28\n","[64, 65, 66, 67, 68, 69, 70, 71, 72]\n","36\n","[70, 71, 72, 73, 160, 161, 162, 163, 164]\n","41\n","[14, 15, 16, 17, 18]\n","20\n","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 15, 16, 17, 18, 19, 20, 21, 22, 23]\n","78\n","[66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79]\n","56\n","[17, 18, 19, 20, 21, 22, 23]\n","28\n","[61, 62, 63, 64]\n","16\n","[0, 1, 2, 3, 4, 5, 6]\n","21\n","[9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24]\n","63\n","[56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127]\n","316\n","[231, 232, 233, 234, 235]\n","25\n","[25, 26, 27, 28]\n","16\n","[31, 32, 33, 34, 35, 36]\n","24\n","[41, 42, 43, 44, 45, 46, 47, 48, 49]\n","36\n","[133, 134, 135, 136, 137]\n","25\n","[23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 120, 121, 122, 123, 124, 125]\n","74\n","[25, 26, 27, 28, 29, 30]\n","24\n","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40]\n","154\n","[180, 181, 182, 183, 184]\n","25\n","[27, 28, 29, 30, 31, 32]\n","24\n","[7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]\n","61\n","[43, 44, 45, 46, 47, 48, 49, 55, 56, 57, 58, 59, 60, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108]\n","160\n","[37, 38, 39, 40, 41]\n","20\n","[5, 6, 7, 8, 9, 10, 11, 12, 13]\n","31\n","[59, 60, 61, 62, 63, 64]\n","24\n","[19, 20, 21, 22, 23]\n","20\n","[55, 56, 57, 58, 59, 60, 61, 62]\n","32\n","[127, 128, 129, 130, 131, 132, 133, 134]\n","40\n","[0, 1, 2, 3, 4]\n","15\n","[170, 171, 172, 173, 174, 175, 176, 191, 192, 193, 194, 195, 196, 197, 198, 199]\n","80\n","[31, 32, 33, 34, 35, 36]\n","24\n","[8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 40, 41, 42]\n","50\n","[12, 13, 14, 15, 16, 17]\n","24\n","[68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 557, 558, 559, 560, 561, 562, 563, 564, 565]\n","89\n","[135, 136, 137, 138, 139, 140, 141, 142, 143]\n","45\n","[15, 16, 17, 18]\n","16\n","[5, 6, 7, 8, 9, 10, 11]\n","23\n","[18, 19, 20, 21, 22, 23, 24, 25, 31, 32, 33, 34, 35]\n","52\n","[4, 5, 6, 7]\n","12\n","[30, 31, 32, 33, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49]\n","60\n","[9, 10, 11, 12, 13, 14, 167, 168, 169, 170, 171, 172]\n","53\n","[17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 61, 62, 63, 64, 65, 66, 67, 68]\n","84\n","[149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 239, 240, 241, 242, 243, 244, 245]\n","95\n","[0, 1, 2, 3, 4]\n","15\n","[134, 135, 136, 137, 138]\n","25\n","[18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49]\n","128\n","[35, 36, 37, 38, 39, 40]\n","24\n","[99, 100, 101, 102, 103, 104]\n","29\n","[11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 369, 370, 371, 372, 373, 374]\n","70\n","[88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101]\n","58\n","[13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47]\n","140\n","[0, 1, 2, 3, 4, 5, 6]\n","21\n","[21, 22, 23, 24, 25]\n","20\n","[43, 44, 45, 46, 47, 48, 49]\n","28\n","[11, 12, 13, 14, 15, 16, 17, 18, 19, 20]\n","40\n","[80, 81, 82, 83, 84, 85, 367, 368, 369, 370, 440, 441, 442, 443, 444, 445]\n","74\n","[28, 29, 30, 31, 32]\n","20\n","[159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191]\n","165\n","[67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88]\n","88\n","[39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50]\n","48\n","[16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36]\n","84\n","[19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49]\n","124\n","[19, 20, 21, 22, 23, 24]\n","24\n","[60, 61, 62]\n","12\n","[62, 63, 64, 65, 330, 331, 332, 333, 334, 335, 336]\n","51\n","[12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23]\n","48\n","[4, 5, 6, 7, 8, 9, 10, 11, 57, 58, 59, 60, 61, 62, 63, 107, 108, 109, 110, 111]\n","79\n","[405, 406, 407, 408, 409, 410, 411, 412]\n","40\n","[231, 232, 233, 234, 235, 236]\n","30\n","[399, 400, 401, 402, 403, 404]\n","30\n","[34, 35, 36, 73, 74, 75, 76, 77, 78]\n","36\n","[8, 9, 10, 16, 17, 18, 19, 20, 21]\n","34\n","[24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 45, 46, 47, 48, 49, 50]\n","64\n","[38, 39, 40, 41, 42]\n","20\n","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28]\n","106\n","[17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40]\n","96\n","[40, 41, 42, 43, 44, 45, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94]\n","96\n","[4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 231, 232, 233, 234, 235, 236, 237, 238]\n","86\n","[3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66]\n","81\n","[226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 253, 254, 255, 256, 257, 258, 259, 260]\n","115\n","[8, 9, 10, 11, 12]\n","18\n","[14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25]\n","44\n","[92, 93, 94, 95, 96, 97, 98, 99, 100]\n","37\n","[124, 125, 126, 127, 128, 129]\n","30\n","[7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 125, 126, 127, 128, 129]\n","142\n","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57]\n","222\n","[87, 88, 89, 90, 91, 92, 291, 292, 293, 294, 295, 296]\n","54\n","[48, 49, 50, 51, 52, 53]\n","24\n","[0, 1, 2, 3, 4, 5, 6]\n","21\n","[22, 23, 24, 25, 26, 27]\n","24\n","[46, 47, 48, 49, 50, 51, 61, 62, 63, 64]\n","40\n","[483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 495, 496, 497, 498, 499, 500, 501, 502, 782, 783, 784, 785, 786, 787]\n","120\n","[8, 9, 10, 11, 12, 13]\n","22\n","[139, 140, 141, 142, 143, 144, 181, 182, 183, 184, 185, 186]\n","60\n","[38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59]\n","88\n","[158, 159, 160, 161, 162, 163, 164, 165]\n","40\n","[39, 40, 41, 42, 43, 44, 45, 46, 47]\n","36\n","[65, 66, 67, 68]\n","16\n","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16]\n","58\n","[58, 59, 60, 61, 62]\n","20\n","[15, 16, 17, 18, 19]\n","20\n","[72, 73, 74, 75, 76, 77, 78]\n","28\n","[24, 25, 26, 27]\n","16\n","[874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923]\n","250\n","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]\n","38\n","[33, 34, 35, 36, 37, 38, 39, 40]\n","32\n","[4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24]\n","78\n","[123, 124, 125, 126]\n","20\n","[9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65]\n","91\n","[73, 74, 75, 76, 77, 78]\n","24\n","[198, 199, 200, 201, 202, 203, 204, 205, 206]\n","45\n","[5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21]\n","63\n","[3, 4, 5, 6, 7, 8, 9, 10, 244, 245, 246, 247, 248]\n","50\n","[5, 6, 7, 8, 9, 10, 143, 144, 145, 146, 147, 148]\n","49\n","[19, 20, 21, 22, 23]\n","20\n","[18, 19, 20, 21, 22, 23, 24, 25, 26, 27]\n","40\n","[235, 236, 237, 238, 239, 240]\n","30\n","[379, 380, 381, 382, 383]\n","25\n","[169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231]\n","315\n","[262, 263, 264, 265, 266, 267]\n","30\n","[19, 20, 21, 22, 23, 24]\n","24\n","[33, 34, 35, 36, 37, 38, 39, 40, 41]\n","36\n","[0, 1, 2, 3]\n","12\n","[6, 7, 8, 9, 10, 11, 12]\n","24\n","[43, 44, 45, 46, 47, 48]\n","24\n","[31, 32, 33, 34, 131, 132, 133, 134, 135, 136, 137, 138]\n","56\n","[242, 243, 244, 245, 246, 247, 248, 249, 250, 251]\n","50\n","[279, 280, 281, 282, 283, 284, 285, 286]\n","40\n","[137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154]\n","90\n","[43, 44, 45, 46, 47, 48, 156, 157, 158, 159, 160]\n","49\n","[10, 11, 12, 13, 14]\n","20\n","[49, 50, 51, 52, 53, 54]\n","24\n","[55, 56, 57, 58, 59, 60, 61, 62, 83, 84, 85, 86, 131, 132, 133, 134, 135, 136, 137, 138, 139, 172, 173, 174, 175, 176]\n","118\n","[33, 34, 35, 36, 37, 38]\n","24\n","[14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24]\n","44\n","[39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 71, 72, 73, 74, 75, 76, 77, 78, 79]\n","88\n","[292, 293, 294, 295, 296, 297, 298]\n","35\n","[12, 13, 14, 15, 16]\n","20\n","[18, 19, 20, 21, 22, 23]\n","24\n","[92, 93, 94]\n","12\n","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18]\n","66\n","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30]\n","114\n","[45, 46, 47, 48, 49]\n","20\n","[33, 34, 35, 36, 37]\n","20\n","[18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46]\n","116\n","[21, 22, 23, 24, 25, 26]\n","24\n","[19, 20, 21, 22, 23, 24]\n","24\n","[15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606]\n","141\n","[54, 55, 56, 57, 58, 59, 60, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119]\n","224\n","[56, 57, 58, 59, 60, 61]\n","24\n","[5, 6, 7, 8]\n","12\n","[146, 147, 148, 149, 150, 151, 152, 193, 194, 195, 196, 197, 198, 199, 205, 206, 207, 208, 209, 210, 211, 212, 213]\n","115\n","[30, 31, 32, 33, 34, 35, 36]\n","28\n","[670, 671, 672, 673, 674, 675]\n","30\n","[52, 53, 54, 55, 56, 57, 58, 59]\n","32\n","[184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199]\n","80\n","[27, 28, 29, 30, 31, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76]\n","60\n","[15, 16, 17, 18, 19, 119, 120, 121, 122, 123, 124, 125, 179, 180, 181, 182, 183, 184, 185, 186, 293, 294, 295, 296, 297]\n","120\n","[95, 96, 97, 98]\n","16\n","[153, 154, 155, 156, 157, 158, 159, 220, 221, 222, 223, 224, 225, 226]\n","70\n","[89, 90, 91, 92, 93]\n","20\n","[4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 46, 47, 48, 49, 50, 51, 52, 53, 54]\n","86\n","[14, 15, 16, 17, 18, 19, 20, 21]\n","32\n","[65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277]\n","800\n","[11, 12, 13, 14, 15]\n","20\n","[0, 1, 2, 3, 4, 5]\n","18\n","[19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32]\n","56\n","[16, 17, 18, 19, 20]\n","20\n","[8, 9, 10, 11, 214, 215, 216, 217, 218, 219, 220]\n","49\n","[49, 50, 51, 52, 53, 54, 55, 56, 57, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121]\n","101\n","[107, 108, 109, 110, 111, 112]\n","30\n","[29, 30, 31, 32, 33, 40, 41, 42, 43, 88, 89, 90, 91, 92]\n","56\n","[235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250]\n","80\n","[171, 172, 173, 174, 175]\n","25\n","[18, 19, 20, 21, 22, 23]\n","24\n","[56, 57, 58, 59, 60, 61]\n","24\n","[264, 265, 266, 267, 268, 269, 270, 271, 272, 273]\n","50\n","[145, 146, 147, 148, 149, 150]\n","30\n","[4, 5, 6, 7, 8]\n","15\n","[154, 155, 156, 157, 164, 165, 166, 167, 168]\n","45\n","[17, 18, 19, 20, 21, 22, 23]\n","28\n","[41, 42, 43, 44, 45, 46, 47, 48, 49, 50]\n","40\n","[735, 736, 737, 738, 739, 740, 741, 899, 900, 901, 902, 903, 904, 905, 906]\n","75\n","[28, 29, 30, 31, 32, 84, 85, 86, 87, 88, 89]\n","44\n","[61, 62, 63, 64, 65, 66]\n","24\n","[34, 35, 36, 37, 38, 39, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54]\n","64\n","[145, 146, 147, 148, 149, 150]\n","30\n","[26, 27, 28, 29, 30, 112, 113, 114, 115, 116, 117, 118, 119, 120]\n","65\n","[430, 431, 432, 433, 434]\n","25\n","[38, 39, 40, 41, 42, 43, 44, 45, 46, 65, 66, 67, 68, 69]\n","56\n","[20, 21, 22, 23, 24]\n","20\n","[8, 9, 10, 11, 12]\n","18\n","[9, 10, 11, 12, 13]\n","19\n","[103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128]\n","130\n","[63, 64, 65, 66, 67, 68]\n","24\n","[64, 65, 66, 67, 68, 69]\n","24\n","[88, 89, 90, 91, 92]\n","20\n","[59, 60, 61, 62, 63, 64]\n","24\n","[80, 81, 82, 83, 84, 85, 86, 87, 88]\n","36\n","[80, 81, 82, 83, 84, 85, 118, 119, 120, 121, 122, 123, 124, 125]\n","64\n","[0, 1, 2, 3]\n","12\n","[40, 41, 42, 43, 44, 45, 46, 47, 48]\n","36\n","[19, 20, 21, 22, 23, 24, 25]\n","28\n","[19, 20, 21, 22, 23, 24, 25, 26, 27, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131]\n","86\n","[0, 1, 2, 3, 4, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116]\n","95\n","[62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76]\n","60\n","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47]\n","142\n","[8, 9, 10, 11, 12]\n","18\n","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]\n","46\n","[66, 67, 68, 69, 70, 71, 72, 73, 74, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109]\n","90\n","[7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26]\n","77\n","[5, 6, 7, 8]\n","12\n","[220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231]\n","60\n","[64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74]\n","44\n","[0, 1, 2, 3, 4, 5, 6, 7, 8]\n","27\n","[64, 65, 66, 67, 68]\n","20\n","[141, 142, 143, 144, 145, 146]\n","30\n","[38, 39, 40, 41, 42]\n","20\n","[5, 6, 7, 8, 9, 10, 11]\n","23\n","[12, 13, 14, 15, 16, 17]\n","24\n","[37, 38, 39, 40, 41, 42, 43]\n","28\n","[57, 58, 59, 60, 61]\n","20\n","[229, 230, 231, 232, 233, 234, 235, 236]\n","40\n","[19, 20, 21, 22, 23, 24, 25, 26, 27, 89, 90, 91]\n","48\n","[151, 152, 153, 154, 155, 156]\n","30\n","[550, 551, 552, 553, 554, 555, 556, 557, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622]\n","90\n","[199, 200, 201, 202, 203, 204, 205, 206, 207, 208]\n","50\n","[90, 91, 92, 93, 94, 95, 96, 129, 130, 131, 132, 133, 134]\n","58\n","[334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370]\n","185\n","[17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27]\n","44\n","[5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136]\n","195\n","[97, 98, 99, 100, 101, 102, 103, 104, 105, 106]\n","47\n","[26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128]\n","230\n","[282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311]\n","150\n","[41, 42, 43, 44, 45]\n","20\n","[14, 15, 16, 17, 18, 19]\n","24\n","[178, 179, 180, 181, 182, 183]\n","30\n","[81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93]\n","52\n","[8, 9, 10, 11, 12]\n","18\n","[30, 31, 32, 33, 34, 35]\n","24\n","[8, 9, 10, 11, 12]\n","18\n","[8, 9, 10, 11, 12, 13, 159, 160, 161, 162, 163, 164]\n","52\n","[67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81]\n","60\n","[107, 108, 109, 110, 111, 112, 113, 114, 117, 118, 119, 120, 121, 122, 123, 124, 125, 128, 129, 130, 131, 132]\n","110\n","[506, 507, 508, 509, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798]\n","135\n","[65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320]\n","182\n","[266, 267, 268, 269, 270, 271, 272, 273]\n","40\n","[0, 1, 2, 3, 4, 5]\n","18\n","[12, 13, 14, 15, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158]\n","170\n","[6, 7, 8, 9, 10, 11]\n","20\n","[8, 9, 10, 11, 12]\n","18\n","[136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148]\n","65\n","[12, 13, 14, 15, 16, 17]\n","24\n","[35, 36, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 65, 66, 67, 68, 69, 70, 71, 72]\n","84\n","[45, 46, 47, 48, 49]\n","20\n","[146, 147, 148, 149, 150, 151, 152, 153, 154, 155]\n","50\n","[20, 21, 22, 23, 24, 25]\n","24\n","[15, 16, 17, 18, 19, 68, 69, 70, 71, 72]\n","40\n","[367, 368, 369, 370, 371, 372, 373, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731]\n","165\n","[49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593]\n","159\n","[62, 63, 64, 65, 66, 67]\n","24\n","[52, 53, 54, 55, 56]\n","20\n","[0, 1, 2, 3, 4]\n","15\n","[257, 258, 259, 260]\n","20\n","[58, 59, 60, 61, 62, 63, 64, 65, 66]\n","36\n","[185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209]\n","125\n","[267, 268, 269, 270, 271, 272, 273, 920, 921, 922, 923, 924, 925, 981, 982, 983, 984, 985, 986, 987, 988, 989, 992, 993, 994, 995, 996, 997, 998, 999]\n","150\n","[68, 69, 70, 71, 72, 73]\n","24\n","[95, 96, 97, 98, 99, 100, 101, 102, 103]\n","40\n","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44]\n","170\n","[11, 12, 13, 14, 15, 16, 17, 147, 148, 149, 150, 151]\n","53\n","[46, 47, 48, 49, 50, 51, 52, 53, 54]\n","36\n","[8, 9, 10, 11, 12]\n","18\n","[15, 16, 17, 18, 19, 20, 21]\n","28\n","[489, 490, 491, 492, 493, 494, 495, 496]\n","40\n","[56, 57, 58, 59]\n","16\n","[221, 222, 223, 224, 225, 226]\n","30\n","[45, 46, 47]\n","12\n","[158, 159, 160, 161, 162, 163, 164, 165, 166]\n","45\n","[49, 50, 51, 52, 53, 54]\n","24\n","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32]\n","122\n","[33, 34, 35, 36, 37, 38, 39, 40, 41, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116]\n","137\n","[37, 38, 39, 40, 41]\n","20\n","[177, 178, 179, 180, 181, 182, 183, 184, 185]\n","45\n","[15, 16, 17, 18, 19, 20]\n","24\n","[31, 32, 33, 34, 35, 36, 37, 38, 39, 45, 46, 47, 48, 49, 50, 51, 52, 53]\n","72\n","[132, 133, 134, 135]\n","20\n","[54, 55, 56, 57]\n","16\n","[26, 27, 28, 29, 30, 114, 115, 116, 117, 118, 119]\n","50\n","[320, 321, 322, 323, 324, 350, 351, 352, 389, 390, 391, 392, 393, 394, 396, 397, 398, 399, 400, 401]\n","100\n","[44, 45, 46, 47, 48, 49, 50, 51]\n","32\n","[218, 219, 220, 221, 222, 223]\n","30\n","[4, 5, 6, 7, 8, 35, 36, 37, 38]\n","31\n","[8, 9, 10, 11]\n","14\n","[48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64]\n","68\n","[5, 6, 7, 8, 9, 10, 11]\n","23\n","[106, 107, 108, 109, 110, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182]\n","95\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"KJGQS5NBza7T"},"source":["for i in range (0,len(final_data['spans'])):\n","    # print(i)\n","    l=[]\n","    for j in range(0,len(final_data['spans'][i])):\n","        l.append([final_data['spans'][i][j][0],final_data['spans'][i][j][-1],\"Toxic\"])\n","\n","    final_data['spans'][i]=l"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":402},"id":"SLzl2rpKm5sM","executionInfo":{"status":"ok","timestamp":1610657378983,"user_tz":-330,"elapsed":3536,"user":{"displayName":"AMBUJE GUPTA","photoUrl":"","userId":"08374827863947652219"}},"outputId":"004633c6-cc72-420c-a911-d7d1d951bd42"},"source":["final_data"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>spans</th>\n","      <th>text</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>[[8, 39, Toxic]]</td>\n","      <td>Another violent and aggressive immigrant killi...</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>[[33, 39, Toxic]]</td>\n","      <td>I am 56 years old, I am not your fucking junio...</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>[[0, 3, Toxic]]</td>\n","      <td>Damn, a whole family. Sad indeed.</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>[[7, 17, Toxic]]</td>\n","      <td>What a knucklehead. How can anyone not know th...</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>[[32, 38, Toxic]]</td>\n","      <td>\"who do you think should do the killing?\"\\n\\nA...</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>6939</th>\n","      <td>[[4, 8, Toxic], [35, 38, Toxic]]</td>\n","      <td>The idiot in chief can't speak for sh!t 😜👎</td>\n","    </tr>\n","    <tr>\n","      <th>6940</th>\n","      <td>[[8, 11, Toxic]]</td>\n","      <td>Another fool pipes in.</td>\n","    </tr>\n","    <tr>\n","      <th>6941</th>\n","      <td>[[48, 64, Toxic]]</td>\n","      <td>So if a restaurant owner puts up a sign saying...</td>\n","    </tr>\n","    <tr>\n","      <th>6942</th>\n","      <td>[[5, 11, Toxic]]</td>\n","      <td>This idiotic. Use the surplus to pay down the ...</td>\n","    </tr>\n","    <tr>\n","      <th>6943</th>\n","      <td>[[106, 110, Toxic], [169, 182, Toxic]]</td>\n","      <td>Who is this \"we\" of which you speak? Are you r...</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>6944 rows × 2 columns</p>\n","</div>"],"text/plain":["                                       spans                                               text\n","0                           [[8, 39, Toxic]]  Another violent and aggressive immigrant killi...\n","1                          [[33, 39, Toxic]]  I am 56 years old, I am not your fucking junio...\n","2                            [[0, 3, Toxic]]                  Damn, a whole family. Sad indeed.\n","3                           [[7, 17, Toxic]]  What a knucklehead. How can anyone not know th...\n","4                          [[32, 38, Toxic]]  \"who do you think should do the killing?\"\\n\\nA...\n","...                                      ...                                                ...\n","6939        [[4, 8, Toxic], [35, 38, Toxic]]         The idiot in chief can't speak for sh!t 😜👎\n","6940                        [[8, 11, Toxic]]                             Another fool pipes in.\n","6941                       [[48, 64, Toxic]]  So if a restaurant owner puts up a sign saying...\n","6942                        [[5, 11, Toxic]]  This idiotic. Use the surplus to pay down the ...\n","6943  [[106, 110, Toxic], [169, 182, Toxic]]  Who is this \"we\" of which you speak? Are you r...\n","\n","[6944 rows x 2 columns]"]},"metadata":{"tags":[]},"execution_count":11}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"hLWthHRVoUEp","executionInfo":{"status":"ok","timestamp":1610657431762,"user_tz":-330,"elapsed":1190,"user":{"displayName":"AMBUJE GUPTA","photoUrl":"","userId":"08374827863947652219"}},"outputId":"3536fd12-f24e-4e1e-8f8f-3116af66dd33"},"source":["from sklearn.model_selection import train_test_split\n","train_ratio = 0.85\n","validation_ratio = 0.15\n","test_ratio = 0.10\n","\n","# train is now 75% of the entire data set\n","# the _junk suffix means that we drop that variable completely\n","x_train, x_val, y_train, y_val = train_test_split(final_data.iloc[:,1], final_data.iloc[:,0], test_size=1 - train_ratio)\n","\n","# test is now 10% of the initial data set\n","# validation is now 15% of the initial data set\n","# x_val, x_test, y_val, y_test = train_test_split(x_test, y_test, test_size=test_ratio/(test_ratio + validation_ratio)) \n","\n","print(x_train.shape, x_val.shape)\n"],"execution_count":null,"outputs":[{"output_type":"stream","text":["(5902,) (1042,)\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"JzMNDFkqvOWo","executionInfo":{"status":"ok","timestamp":1610558022820,"user_tz":-330,"elapsed":1698,"user":{"displayName":"Harsh Kataria","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GimH0VsMEaiEzaEeo5nJzMe1WuJRQ2b1DK9fb3S=s64","userId":"07300304294680146354"}},"outputId":"f6af8db5-b6e0-4e0d-bbbb-963e1b7bcc25"},"source":["# print(x_train.shape, x_val.shape, x_test.shape)"],"execution_count":null,"outputs":[{"output_type":"stream","text":["(5590,) (1118,) (746,)\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"QujnnATkoURM","executionInfo":{"status":"ok","timestamp":1610558037726,"user_tz":-330,"elapsed":1607,"user":{"displayName":"Harsh Kataria","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GimH0VsMEaiEzaEeo5nJzMe1WuJRQ2b1DK9fb3S=s64","userId":"07300304294680146354"}},"outputId":"408c6c1f-ea4f-4e7d-81dc-8a44294cefd3"},"source":["x_train"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["2741                     Yankees suck....Yankees suck....\n","6548    Wow, check out the number of MAGAphants that l...\n","3835    Canadians would do well to consider whether an...\n","516     Employers have \"every right...\"? You are ignor...\n","6198    Speaking of cowards, that's a clever little fl...\n","                              ...                        \n","4474        Anchorage Daily News you are so full of shit!\n","108     You know all about stupidity with your compute...\n","2554    This clown is not a leader. He's been in polit...\n","6997    How will Mr Thin Skin react .... my guess is s...\n","1749    \"I figure you're a troll or an idiot\"\\nHe's bo...\n","Name: text, Length: 5590, dtype: object"]},"metadata":{"tags":[]},"execution_count":72}]},{"cell_type":"code","metadata":{"id":"mTBImHZ6pXrJ"},"source":["traindf=pd.DataFrame({'text':x_train,'labels':y_train})"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":402},"id":"poSZrf9nvosN","executionInfo":{"status":"ok","timestamp":1610657451473,"user_tz":-330,"elapsed":1162,"user":{"displayName":"AMBUJE GUPTA","photoUrl":"","userId":"08374827863947652219"}},"outputId":"26a8f81a-ac1c-4be5-bc3f-977e8491f02c"},"source":["traindf"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>text</th>\n","      <th>labels</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>1701</th>\n","      <td>Intrepid - it will actually be real news if an...</td>\n","      <td>[[85, 90, Toxic], [95, 101, Toxic]]</td>\n","    </tr>\n","    <tr>\n","      <th>549</th>\n","      <td>Yeah, sorry, but you're regurgitating bullshit...</td>\n","      <td>[[38, 45, Toxic]]</td>\n","    </tr>\n","    <tr>\n","      <th>2323</th>\n","      <td>Shooting at others is not speech. Trying to co...</td>\n","      <td>[[12, 17, Toxic], [91, 96, Toxic]]</td>\n","    </tr>\n","    <tr>\n","      <th>2012</th>\n","      <td>I get the financial influence within the gover...</td>\n","      <td>[[191, 217, Toxic], [303, 309, Toxic], [358, 3...</td>\n","    </tr>\n","    <tr>\n","      <th>705</th>\n","      <td>According to the Harbor Master in a CNN interv...</td>\n","      <td>[[234, 239, Toxic]]</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>4457</th>\n","      <td>This is really stupid.  Guns are made to kill,...</td>\n","      <td>[[15, 20, Toxic]]</td>\n","    </tr>\n","    <tr>\n","      <th>2931</th>\n","      <td>For every low end DACA brown, deport a black!</td>\n","      <td>[[30, 35, Toxic]]</td>\n","    </tr>\n","    <tr>\n","      <th>2201</th>\n","      <td>Idiots</td>\n","      <td>[[0, 5, Toxic]]</td>\n","    </tr>\n","    <tr>\n","      <th>6225</th>\n","      <td>Ontario farmers are NOT allowed to produce exc...</td>\n","      <td>[[105, 111, Toxic]]</td>\n","    </tr>\n","    <tr>\n","      <th>1215</th>\n","      <td>You must be a Communist China troll, guantanamo.</td>\n","      <td>[[30, 34, Toxic]]</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>5902 rows × 2 columns</p>\n","</div>"],"text/plain":["                                                   text                                             labels\n","1701  Intrepid - it will actually be real news if an...                [[85, 90, Toxic], [95, 101, Toxic]]\n","549   Yeah, sorry, but you're regurgitating bullshit...                                  [[38, 45, Toxic]]\n","2323  Shooting at others is not speech. Trying to co...                 [[12, 17, Toxic], [91, 96, Toxic]]\n","2012  I get the financial influence within the gover...  [[191, 217, Toxic], [303, 309, Toxic], [358, 3...\n","705   According to the Harbor Master in a CNN interv...                                [[234, 239, Toxic]]\n","...                                                 ...                                                ...\n","4457  This is really stupid.  Guns are made to kill,...                                  [[15, 20, Toxic]]\n","2931      For every low end DACA brown, deport a black!                                  [[30, 35, Toxic]]\n","2201                                             Idiots                                    [[0, 5, Toxic]]\n","6225  Ontario farmers are NOT allowed to produce exc...                                [[105, 111, Toxic]]\n","1215   You must be a Communist China troll, guantanamo.                                  [[30, 34, Toxic]]\n","\n","[5902 rows x 2 columns]"]},"metadata":{"tags":[]},"execution_count":14}]},{"cell_type":"code","metadata":{"id":"jtavwcwkqATX"},"source":["traindf=traindf.reset_index()"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"8B3o2Gqsphzk"},"source":["traindf.to_csv('/content/drive/MyDrive/Toxic Span Detection - Semeval 2021/data_pre-process-Ambuje/train.csv',index=False)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"YUwq8Koao5ty"},"source":["# testdf=pd.DataFrame({'text':x_test,'labels':y_test})\n","# testdf=testdf.reset_index()\n","# testdf.to_csv('/content/drive/MyDrive/Toxic Span Detection - Semeval 2021/data/test.csv',index=False)\n","valdf=pd.DataFrame({'text':x_val,'labels':y_val})\n","valdf=valdf.reset_index()\n","valdf.to_csv('/content/drive/MyDrive/Toxic Span Detection - Semeval 2021/data_pre-process-Ambuje/val.csv',index=False)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"sLvW5v7Ms44_","colab":{"base_uri":"https://localhost:8080/","height":402},"executionInfo":{"status":"ok","timestamp":1610657493904,"user_tz":-330,"elapsed":1165,"user":{"displayName":"AMBUJE GUPTA","photoUrl":"","userId":"08374827863947652219"}},"outputId":"62a98f0e-58ea-41f8-ceca-189cfa91ef99"},"source":["valdf\n"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>index</th>\n","      <th>text</th>\n","      <th>labels</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2502</td>\n","      <td>Kathy Griffin is a cheap slut</td>\n","      <td>[[19, 28, Toxic]]</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1526</td>\n","      <td>Sessions memory is just fine. He remembers wha...</td>\n","      <td>[[109, 118, Toxic]]</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>6321</td>\n","      <td>First it's a \"hoax,\" then it's all Obama's fau...</td>\n","      <td>[[138, 142, Toxic]]</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>4770</td>\n","      <td>This not a place that \"fake news\" or even real...</td>\n","      <td>[[460, 463, Toxic]]</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1051</td>\n","      <td>Micciche doesn't want to pay income tax on the...</td>\n","      <td>[[117, 119, Toxic]]</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>1037</th>\n","      <td>1337</td>\n","      <td>..or maybe just very,very stupid.  Every time ...</td>\n","      <td>[[26, 31, Toxic]]</td>\n","    </tr>\n","    <tr>\n","      <th>1038</th>\n","      <td>921</td>\n","      <td>THOSE DAMN RUSSIANS ARE EVERYWHERE!!!!</td>\n","      <td>[[6, 9, Toxic]]</td>\n","    </tr>\n","    <tr>\n","      <th>1039</th>\n","      <td>895</td>\n","      <td>Trump is a weak and unstable milksop.\\n\\nA sma...</td>\n","      <td>[[11, 14, Toxic], [20, 35, Toxic], [51, 67, To...</td>\n","    </tr>\n","    <tr>\n","      <th>1040</th>\n","      <td>4606</td>\n","      <td>.\\n...except that's not an option.  The welfar...</td>\n","      <td>[[135, 141, Toxic]]</td>\n","    </tr>\n","    <tr>\n","      <th>1041</th>\n","      <td>3069</td>\n","      <td>What a loser. Go back to Washington State and ...</td>\n","      <td>[[7, 11, Toxic]]</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>1042 rows × 3 columns</p>\n","</div>"],"text/plain":["      index  ...                                             labels\n","0      2502  ...                                  [[19, 28, Toxic]]\n","1      1526  ...                                [[109, 118, Toxic]]\n","2      6321  ...                                [[138, 142, Toxic]]\n","3      4770  ...                                [[460, 463, Toxic]]\n","4      1051  ...                                [[117, 119, Toxic]]\n","...     ...  ...                                                ...\n","1037   1337  ...                                  [[26, 31, Toxic]]\n","1038    921  ...                                    [[6, 9, Toxic]]\n","1039    895  ...  [[11, 14, Toxic], [20, 35, Toxic], [51, 67, To...\n","1040   4606  ...                                [[135, 141, Toxic]]\n","1041   3069  ...                                   [[7, 11, Toxic]]\n","\n","[1042 rows x 3 columns]"]},"metadata":{"tags":[]},"execution_count":18}]},{"cell_type":"code","metadata":{"id":"nU1cR3o2za9x"},"source":["import json\n","\n","myfile = open('/content/drive/MyDrive/Toxic Span Detection - Semeval 2021/data_pre-process-Ambuje/train.json', 'w')\n","for i in range(0,len(traindf['labels'])):\n","    s={\"id\":i,\"text\":traindf['text'][i],\"labels\":traindf['labels'][i]}\n","    # print(s)\n","    myfile.write(\"%s\\n\" % json.dumps(s))"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"R1jXmg79rUVY"},"source":["# import json\n","\n","# myfile = open('/content/drive/MyDrive/Toxic Span Detection - Semeval 2021/data/test.json', 'w')\n","# for i in range(0,len(testdf['labels'])):\n","#     s={\"id\":i,\"text\":testdf['text'][i],\"labels\":testdf['labels'][i]}\n","#     myfile.write(\"%s\\n\" % json.dumps(s))"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"Ih1vXwZIrYqG","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1610657559098,"user_tz":-330,"elapsed":1972,"user":{"displayName":"AMBUJE GUPTA","photoUrl":"","userId":"08374827863947652219"}},"outputId":"b1aad5e2-fd71-489b-d206-df3367707b70"},"source":["import json\n","\n","myfile = open('/content/drive/MyDrive/Toxic Span Detection - Semeval 2021/data_pre-process-Ambuje/val.json', 'w')\n","for i in range(0,len(valdf['labels'])):\n","    s={\"id\":i,\"text\":valdf['text'][i],\"labels\":valdf['labels'][i]}\n","    print(s)\n","    myfile.write(\"%s\\n\" % json.dumps(s))"],"execution_count":null,"outputs":[{"output_type":"stream","text":["{'id': 0, 'text': 'Kathy Griffin is a cheap slut', 'labels': [[19, 28, 'Toxic']]}\n","{'id': 1, 'text': \"Sessions memory is just fine. He remembers what benefits him, and doesn't recall or is vague to the point of ridiculous in his answers.  It's his ethics and morals that need work.  \\nHe's a liar like Trump.  The hearing was a farce and a waste of time.\", 'labels': [[109, 118, 'Toxic']]}\n","{'id': 2, 'text': 'First it\\'s a \"hoax,\" then it\\'s all Obama\\'s fault...  usual trump song and dance.  I feel sorry for US allies trying to make sense of this idiot.', 'labels': [[138, 142, 'Toxic']]}\n","{'id': 3, 'text': 'This not a place that \"fake news\" or even real news comes from; it is a discussion page. However, everything Steven mentions is easily verifiable fact. Can you seriously dispute any single one of the Russian connections that he has enumerated here? Go ahead; pick one, and dispute it. We will, as the saying goes, bury you.\\n\\nAnd in fact, speaking of embarassment: you hide behind a pseudonym and take potshots at people who speak the truth. We know where that crap comes from. How\\'s the weather in Stalingrad, comrade?', 'labels': [[460, 463, 'Toxic']]}\n","{'id': 4, 'text': \"Micciche doesn't want to pay income tax on the $500,000 he makes managing a mothballed Conoco plant.\\n\\nHard worker my ass!\", 'labels': [[117, 119, 'Toxic']]}\n","{'id': 5, 'text': 'Hawaii safety check law requires that your defective air bags that can KILL YOU need to work to pass a safety check! How stupid can this be.', 'labels': [[121, 126, 'Toxic']]}\n","{'id': 6, 'text': 'You sir, are an idiot.', 'labels': [[16, 20, 'Toxic']]}\n","{'id': 7, 'text': 'Actually, \"Brian Bowman\" is a European name of Anglo Saxon origin. \"Brian\" is Irish. \"Bowman\" refers to the archers of the armies of Medieval England. He should get a completely new name to not be a hypocrite. If we cannot use Eskimo, he cannot use Brian Bowman.', 'labels': [[199, 207, 'Toxic']]}\n","{'id': 8, 'text': 'My observation of this Presidency is it is all about Mr. Trumps hatred for President Obama.....starting with the birther \"movement\" and thru to Obama\\'s humiliation of Mr. Trump at the dinner ( from Trump\\'s perspective) Mr. Trump just wants to damage the legacy of President Obama, and he doesn\\'t care how that may or may not affect the USA as a country, this is a personal vendetta Presidency and nothing more...from a mental midget.', 'labels': [[345, 351, 'Toxic'], [419, 431, 'Toxic']]}\n","{'id': 9, 'text': \"You're a sick apologist. A girl in middle school is 11 years old turning 12 in 6th grade. That is far from a sexually mature girl. Vasquez should be neutered. As should all pedophiles. And their apologists.\", 'labels': [[173, 182, 'Toxic']]}\n","{'id': 10, 'text': 'There are no better hypocrites than liberals.', 'labels': [[36, 43, 'Toxic']]}\n","{'id': 11, 'text': 'Just as we expect from Trump and his legion: a remarkable ability to cram stupid, vicious, and racist into a few short words.\\n\\nYou make me sick.', 'labels': [[16, 25, 'Toxic'], [74, 79, 'Toxic'], [82, 88, 'Toxic'], [95, 100, 'Toxic']]}\n","{'id': 12, 'text': 'This premise of this article is sexist. I\\'m disappointed, these old tropes (\"How will she manage work and family?\") are tired, unoriginal, and Catherine McKenna deserves so much more.', 'labels': [[32, 37, 'Toxic']]}\n","{'id': 13, 'text': 'Carter is honoring the office - even if the next incumbent is a fascist idiot.  After his non-endorsement, I can see why W. is begging off (H.W. had the excuse age). I wonder what the Clintons will do?\\n\\nMoore, not to be confused with Roy Moore, is joining the religious liberty pander, but at least he knew that Trump is fake. His followers, however, are very tribal and they love their Trump and his authoritarianism, which is not liberty. The line about social dominance is priceless and could easily fit Lori or Chaput.\\n\\nEternal rest on George Michael and gentle healing for his husband.', 'labels': [[64, 76, 'Toxic']]}\n","{'id': 14, 'text': 'Yup. NVN used the Press. The Press was USED. Used like their sister on prom night!\\nIdiots. All faux-erudite, not realizing they were being played.', 'labels': [[10, 19, 'Toxic'], [83, 88, 'Toxic']]}\n","{'id': 15, 'text': \"Idiots, I am unsure, but don't understand statistics, most probably, yes.  As a country, we don't do a great job at education, especially on things like statistics, we are also kinda lazy when it comes to finding out facts.  People hear that a candidate won a poll, but don't take the time to look at by how much and what the margin of error is.\", 'labels': [[0, 5, 'Toxic'], [285, 288, 'Toxic']]}\n","{'id': 16, 'text': 'The only \" politicians \" engaged in pedophilia past or present are Trump and associates and the only one that continues to lust for his daughter and grope her publicly is Trump who, by the way , had been accused by a young woman of raping her when she was 13 . The case was tossed during the election as it was about to go to court because she had been scared into silence . The Pizzagate shit needs to stop . It was debunked and Alex Jones apologized for pushing it . You Trumplers really need to get minds of your own and stop living day to day based on what the clown freak says', 'labels': [[25, 45, 'Toxic'], [469, 481, 'Toxic'], [565, 575, 'Toxic']]}\n","{'id': 17, 'text': 'Hillary Clinton strategist Bob Beckel appeared on on Fox calling for the assassination of Julian Assange — a blatant urge for violence against the Wikileaks founder in direct contradiction of every possible natural and government law.\\n\\nWikileaks, of course, has published several damning caches of documents showing Clinton in none-too-favorable light — including emails from her controversially-employed private server as well as communications from the DNC which proved her campaign colluded with mainstream media.\\n\\n“I mean, a dead man can’t leak stuff,” Beckel chillingly noted of Assange. “The guy’s a traitor, a treasonist, and … and he has broken every law in the United States. The guy ought to be — and I’m not for the death penalty — so, if I’m not for the death penalty, there’s only one way to do it, illegally shoot the son of a bitch.”', 'labels': [[280, 286, 'Toxic'], [832, 845, 'Toxic']]}\n","{'id': 18, 'text': 'I sincerely believe you did get the most important element of this rather silly column.', 'labels': [[80, 85, 'Toxic']]}\n","{'id': 19, 'text': \"Trump's a psycho. He loves the fact of people dying from addiction. He wants the troops to be dead and he revels in that death. He thinks that any pain the troops suffered before dying is delicious. Trump would slaughter your children with a smile on his face, without hesitation, if he could get away with it. Think Ted Bundy, Hitler, Pol Pot. THAT is Trump, do not expect any humanity or ethics from him. He's a threat to all humanity, to all life on Earth.\", 'labels': [[10, 15, 'Toxic']]}\n","{'id': 20, 'text': 'Putin is likely the wealthiest person on the planet, whose wealth was estimated nearly a decade ago as 70 billion dollars. Russia is a gangster run kleptocracy, with the losers dying in a variety of painful ways, including plutonium poisoning. I find it incomprehensible that the president of the United States of America admires this truly evil beast.', 'labels': [[341, 350, 'Toxic']]}\n","{'id': 21, 'text': 'So you would rather be governed by a lying idiot, who is selling us out to the Yankees?', 'labels': [[37, 47, 'Toxic']]}\n","{'id': 22, 'text': \"Are intelligent people really expected to ponder this nonsense ???  Two totally different scenarios with two totally different sets of rules.  I'd only need to explain that if you're stupid, but I know you're not - just very biased and news hungry.  Shame on you!!\", 'labels': [[183, 188, 'Toxic']]}\n","{'id': 23, 'text': 'Agreed: there\\'s no equivalence. What is stopping the conservative Christians from practising their faith? What conservative Christians have been prevented from marrying, birthing 19 children, homeschooling, establishing their own schools, denying evolution and climate change, and creating fabulist \"museums\" about origins of the human species?\\n\\nUtterly ridiculous.', 'labels': [[346, 363, 'Toxic']]}\n","{'id': 24, 'text': 'First you crazy Jesus freaks tell us everything on the Earth \"God\" made.  Then, you claim that his, \"son\" Jesus doesn\\'t want us to use it?\\n\\nMake up your mind, Ned Flanders.\\n\\n\"Let it grow...let it grow...greatly yield\"!', 'labels': [[10, 27, 'Toxic'], [203, 209, 'Toxic']]}\n","{'id': 25, 'text': \"Then don't sign and let the US lead the knowledge/research aspect that other nations can capitalize.  Their problem is our problem-there are no climate fences, or walls, to protect our nation\\n\\nIt makes sense to work in a global context as to a shared purpose.  The details of financing can be adjusted.   \\n\\nIt seems clear that Trump does not believe warming is related to human activity.   That doesn't make him stupid, just ignorant.\", 'labels': [[390, 432, 'Toxic']]}\n","{'id': 26, 'text': 'Trump is a blustering idiot.  If he has been deterred from tweeting, voicing and making even more hawkish gestures, it\\'s only because someone cornered him and forcibly \"explained\"  that one more stupid word from his bloviating pie hole might precipitate an actual war.   \\nWhat kind of thoughtless, poor-me jerks voted for this moron? Oh, right: The kind that got their widdle feewings hurted by the big bad liberals.', 'labels': [[11, 26, 'Toxic'], [285, 295, 'Toxic'], [298, 310, 'Toxic'], [327, 331, 'Toxic']]}\n","{'id': 27, 'text': '\"Art is the blandest form of His help when you think about it!\"\\n\\nThat\\'s pathetic. Art-making is a reflection of divine creativity. It\\'s a distinctive aspect of humans as creatures in the image of God.\\n\\nYou have a way of making religion grossly unappealing.', 'labels': [[12, 19, 'Toxic'], [244, 254, 'Toxic']]}\n","{'id': 28, 'text': 'Conservative angst over dead black babies is the most laughable concern trolling.\\n\\nTalk to me when the conservative movement gives the first damn about live black babies.', 'labels': [[103, 113, 'Toxic'], [141, 144, 'Toxic']]}\n","{'id': 29, 'text': 'Stupidiity becomes you nicely.', 'labels': [[0, 9, 'Toxic']]}\n","{'id': 30, 'text': 'Why not just pick a distance that works and make it as the crow flies? No grey area that way. Idiots', 'labels': [[94, 99, 'Toxic']]}\n","{'id': 31, 'text': 'The depth of ignorance and stupidity knows no bounds in this disgusting batch of ectoplasm currently fouling our governing system.', 'labels': [[27, 35, 'Toxic']]}\n","{'id': 32, 'text': 'Buttholes......hope they catch the idiots and take away everything they used in doing this including vehicles.   And then make sure they spend some time in jail.  Then when they get put, take away their weapons and their privellege of owning guns in the future.', 'labels': [[0, 8, 'Toxic'], [35, 40, 'Toxic']]}\n","{'id': 33, 'text': 'A party with the single message \"We hate whites\" is going to be extinguished as a party very soon.', 'labels': [[36, 46, 'Toxic']]}\n","{'id': 34, 'text': '\"If everyone would just ignore the morons, they\\'d likely dissolve into no message at all.\"\\n\\nDo you feel the same way about the NFL kneelers?', 'labels': [[35, 40, 'Toxic']]}\n","{'id': 35, 'text': 'Hubris is often accompanied by stupid behavior. Examples include Hillary Clinton, Donald Trump, and now Mark Helfrich.', 'labels': [[31, 36, 'Toxic']]}\n","{'id': 36, 'text': 'Disrespectful idiot', 'labels': [[14, 18, 'Toxic']]}\n","{'id': 37, 'text': 'They are all disgusting.', 'labels': [[13, 22, 'Toxic']]}\n","{'id': 38, 'text': 'Right. Which tabloid did you dig that up from? What a fkn moron', 'labels': [[58, 62, 'Toxic']]}\n","{'id': 39, 'text': 'Goodnight I guess the pussy got your tongue.', 'labels': [[22, 26, 'Toxic']]}\n","{'id': 40, 'text': 'Umm yes they do actually becuase I know the person that was involved and he did have a very nice red truck, you guys with all your opinions and acuzatiins, yes I think they fucked up tremendously but JAIL in not the key, there ADDICTS Obviously and NEED fucking help PERIOD...', 'labels': [[168, 181, 'Toxic'], [249, 265, 'Toxic']]}\n","{'id': 41, 'text': 'Blasted Maoists! Free Tibet!', 'labels': [[0, 6, 'Toxic']]}\n","{'id': 42, 'text': 'Little brat is taught by his parents to hate his country and disavow any support thereof. Shame.', 'labels': [[0, 10, 'Toxic']]}\n","{'id': 43, 'text': 'But wait...we have a \" brilliant \" letter to the paper today claiming that we stupid residents dont need to hunt \" cuz we have costco\". Im not making this up. We really have people that far out in fantasy land.', 'labels': [[78, 83, 'Toxic']]}\n","{'id': 44, 'text': 'Personally, I regret immigrating to Canada, As a country, it sucks.', 'labels': [[61, 65, 'Toxic']]}\n","{'id': 45, 'text': \"I am sorry but you are an idiot and as CW says part of the problem\\nPlease move as soon as possible don't let your bigotry hit you on the way out\", 'labels': [[26, 30, 'Toxic'], [114, 120, 'Toxic']]}\n","{'id': 46, 'text': '........... or old moron as his cabinet members call', 'labels': [[19, 23, 'Toxic']]}\n","{'id': 47, 'text': 'That is not a friggen hat,It s called a cover you idiots.......................', 'labels': [[14, 24, 'Toxic'], [50, 55, 'Toxic']]}\n","{'id': 48, 'text': \"Heaven help us if we cannot even create hydroelectric power with these clowns.\\nWhen they move into to their off-grid trailers with outside sustainable toilets, then I'll start take these hypocrites seriously.\", 'labels': [[187, 196, 'Toxic']]}\n","{'id': 49, 'text': 'no surprise here, we all know that the intelligent leader of his people trump, actually understands that gW is not caused by mans carbon and has never been proven so! , how ignorant sheep like you cant see those facts is a big mystery!', 'labels': [[173, 180, 'Toxic']]}\n","{'id': 50, 'text': \"Well, there it is ladies & gentleman, exactly what we've been waiting for - the latest stupid comment from Junior. Oh, it's to be expected.\\n\\nRemeber now, you voted for this clown. You get what you deserve.\", 'labels': [[87, 92, 'Toxic']]}\n","{'id': 51, 'text': \"Really??! You're beyond dumb\", 'labels': [[24, 27, 'Toxic']]}\n","{'id': 52, 'text': 'Ruiz’s pathetic response (continued):\\n\\n\"I also believe that it is not in your natural character to unjustly ascribe motives or question integrity.\\n\\nMany, including me, are frustrated with the city hall project, and it will be easy to seek the worst in people rather than aspire to a city hall that I believe the council and community envision: one that defines the legacy not of individuals, but of the proud, unique and vibrant community we call home. Jon\"\\n\\nClassic dodging any responsibility or accountability, and trying to make George out as the bad guy.\\n\\nAnd guess who follows up in another e-mail in less than 30 minutes? (See below)', 'labels': [[7, 23, 'Toxic']]}\n","{'id': 53, 'text': 'Hopefully IC will save Americans from the stupid voting of the deplorables.', 'labels': [[42, 47, 'Toxic']]}\n","{'id': 54, 'text': 'If the Germans re-elect Merkel, they are truly crazy!', 'labels': [[47, 51, 'Toxic']]}\n","{'id': 55, 'text': 'aa another alt fact ndp troll with no clue ,, as usual thinking all money is governments not the peoples, a tax that was not applied is not some money not paid loser, its OURS', 'labels': [[160, 164, 'Toxic']]}\n","{'id': 56, 'text': 'Things change.  Get a bigger helmet.  None of your sad sick leftist procedures will do anything about it.', 'labels': [[51, 58, 'Toxic']]}\n","{'id': 57, 'text': \"She's an absolute moron. Enjoy jail, and I hope her child survives to adulthood.\", 'labels': [[9, 22, 'Toxic']]}\n","{'id': 58, 'text': 'imagine if this dumb witch every cared about mens healthcare or working peoples healthcare. she should resign. america is not just poor women.', 'labels': [[16, 25, 'Toxic']]}\n","{'id': 59, 'text': 'Many fans go just to drink overpriced beer and act like jackasses.\\nIt was like that in Montreal this year too.', 'labels': [[56, 64, 'Toxic']]}\n","{'id': 60, 'text': \"hey idiot, the demand for OIL has been INCREASING , man your ignorance is out of touch with reality.  and so what about ev's etc, thats no excuse to ram a bs tax grab that will do real damage to our economy while doing nothing for the environment onto us\", 'labels': [[4, 8, 'Toxic'], [11, 13, 'Toxic'], [61, 69, 'Toxic']]}\n","{'id': 61, 'text': 'I dare you to call Islam a criminal organization that preys on the weak.', 'labels': [[27, 34, 'Toxic']]}\n","{'id': 62, 'text': 'McRAT does not Represent America or Conservative Republicans. He is a renegade traitor!  He must be removed.', 'labels': [[79, 85, 'Toxic']]}\n","{'id': 63, 'text': 'The idiots in the UK. A stupid move to leave the EU. The United Kingdom is a little country in Europe with only 65 million morons.  The European Union is large enough to compete with the big countries like USA, China, Russia, India and Japan. An isolated UK will not be able to compete and will look like a pathetic little island in the Atlantic ocean.  Those idiots that vote to leave do not understand the economics of being alone.', 'labels': [[4, 9, 'Toxic'], [24, 29, 'Toxic'], [123, 128, 'Toxic'], [307, 314, 'Toxic'], [360, 365, 'Toxic']]}\n","{'id': 64, 'text': \"Get your head out of your ass, don young. Weed is not going to solve Alaska's money issues. Stay  focused on ANWR.\", 'labels': [[0, 28, 'Toxic']]}\n","{'id': 65, 'text': 'what a stupid comment', 'labels': [[7, 12, 'Toxic']]}\n","{'id': 66, 'text': \"Thank you Trump for making America great again. Not one brick of the wall has been laid but illegals are running for the hills out of the United States. Let's see if Canada's extremist liberal leader changes his tune when he now has to experience what the United States has been experiencing for years with these illegal aliens. As a matter of fact the United States has been acting as a buffer since Canada does not have a border Mexico. Suck it up liberal Canadians. Let's see you walk the talk. I hope these illegal aliens keep swamping Canada.\", 'labels': [[20, 25, 'Toxic'], [439, 442, 'Toxic']]}\n","{'id': 67, 'text': 'That would be a stupid phone.', 'labels': [[16, 21, 'Toxic']]}\n","{'id': 68, 'text': 'Oh you mean the Communist manifestos?!? Oh yeah that has worked out super great for the citizens of Russia, Cuba, Venezuela and North Korea... imbecile...', 'labels': [[143, 150, 'Toxic']]}\n","{'id': 69, 'text': 'Actually, I discovered that there is a company that makes a crotch holster for these tiny guns,   It allows the person to carry it inside the front of their pants, next to their testicles.\\n\\nIt is really quite stupid and perverted.   Take a look at this photo of it:\\n\\nhttp://i.imgur.com/uejqYuC.jpg\\n\\n.', 'labels': [[178, 186, 'Toxic'], [209, 214, 'Toxic']]}\n","{'id': 70, 'text': 'One (White) is too STUPID to understand the ramifications...the other(Quasi-Black)  is too STUPID to accept that the 1st WHITE STUPID really is SUPER-STUPID. That about says it all in a NUT-shell! God Save Us All from these STUPID MORONS running not just companies or Countries but RUINING LIVES!', 'labels': [[19, 24, 'Toxic'], [127, 132, 'Toxic']]}\n","{'id': 71, 'text': \"OS doesn't smoke skunk weed and he calls em' as he sees em'. Trash is easy to spot.\", 'labels': [[61, 65, 'Toxic']]}\n","{'id': 72, 'text': \"Excellent move Medicaid, like welfare and the PFD promotes laziness, irresponsibility. And an entitlement mentality among the laziest, non contributing slackers among us and needs to end.\\nI dont need to be paying for some gang banging hoodrats from Mountainview ....\\nLet em' rot.\", 'labels': [[59, 66, 'Toxic']]}\n","{'id': 73, 'text': \"Buying insurance across state lines is a stupid idea.\\n\\nIt results in a race to the bottom with the least regulated states worst coverages being allowed in your state regardless of your own state's regulations.\\n\\nThe 'talking point' is designed to fool you into thinking 'buying across state lines' would be in your best interests when it clearly will not do so.\", 'labels': [[41, 46, 'Toxic'], [246, 249, 'Toxic']]}\n","{'id': 74, 'text': 'The coward needs to be hung or shot! He is a traitor to his brothers in arms. Treason!', 'labels': [[45, 51, 'Toxic'], [78, 84, 'Toxic']]}\n","{'id': 75, 'text': 'American idiots.', 'labels': [[9, 14, 'Toxic']]}\n","{'id': 76, 'text': 'The bottom is where this administration is headed. Ivanka just had to surface again to remind everyone what kind of trash we elected to office.', 'labels': [[70, 76, 'Toxic'], [116, 120, 'Toxic']]}\n","{'id': 77, 'text': \"Darn that's right why is he even bothering, Harper resolved this whole file.\", 'labels': [[0, 3, 'Toxic']]}\n","{'id': 78, 'text': 'So was the ice age...idiots', 'labels': [[21, 26, 'Toxic']]}\n","{'id': 79, 'text': 'Most of the homeless are like that on every island, litter and trash every where they go. Problem on the other islands is that most of the homeless are from the mainland and more keep coming ☹️', 'labels': [[52, 57, 'Toxic'], [63, 67, 'Toxic']]}\n","{'id': 80, 'text': 'The priests that I mentioned in another post were completely blindsided by news of Ratigan\\'s crimes. Prior to Ratigan\\'s arrest and conviction, they could not have done any more than you or myself. Your \"request\" is just plain stupid.', 'labels': [[19, 27, 'Toxic'], [226, 231, 'Toxic']]}\n","{'id': 81, 'text': \"You're a special kind of idiot.\", 'labels': [[25, 29, 'Toxic']]}\n","{'id': 82, 'text': 'luke and saiki are idiots.  real idiots like trump, not the fake kind.', 'labels': [[19, 24, 'Toxic'], [33, 38, 'Toxic']]}\n","{'id': 83, 'text': 'Nothing to own up to, Judass. Believe what you want, o hate-filled beast. You lie, and I know it.', 'labels': [[22, 27, 'Toxic'], [67, 71, 'Toxic']]}\n","{'id': 84, 'text': '\"It\\'s really annoying how those damn social democracies in Scandinavia keep outperforming everybody at everything\", your exact words above. You seems to not have very firm political morals and principals jumping and moving as the debate changes. This is an article by Ivo on the conference just ended in Durban and their scheme for the world\\'s poor etc. He takes it apart and you somehow have meandered everywhere (especially into your socialist vs capitalist topic, are you not tired of it by now?) except answering specifically his points, good or bad. Your last line sums up you confusion. So USA coal killls 200k people a year (zero facts/figurs/explanations etc) and presumably the other coal countries (bigger and smaller plus SA) coal does not kill people?. Stick to articles subject and keep consistent. \\nHow many people does SA\\'s coal industry kill per year and what are you doing abvout it?', 'labels': [[32, 35, 'Toxic']]}\n","{'id': 85, 'text': 'These people are such dim bulbs. Every civilized country in the world has universal health care.', 'labels': [[22, 30, 'Toxic']]}\n","{'id': 86, 'text': '\" Russian trolls\" ?\\n\\nWhat is the intent of writing such nonsense?', 'labels': [[2, 15, 'Toxic']]}\n","{'id': 87, 'text': \"http://www.pewresearch.org/fact-tank/2016/11/03/5-facts-about-illegal-immigration-in-the-u-s/\\n\\nCan't believe someone is stupid enough to believe 100% of all illegal immigrants are Mexican.\", 'labels': [[120, 125, 'Toxic'], [155, 186, 'Toxic']]}\n","{'id': 88, 'text': 'Public school=the fleecing of America.  Just get rid of it once and for all.  The better teachers will make more money and the educated stupid people just looking for a paycheck will have to go find another way to earn a living.', 'labels': [[136, 141, 'Toxic']]}\n","{'id': 89, 'text': 'Amazing 16% of Ontarians could be still stupid enough to support her!.', 'labels': [[40, 45, 'Toxic']]}\n","{'id': 90, 'text': 'YVONERAVONE LOSER TROLL', 'labels': [[12, 16, 'Toxic']]}\n","{'id': 91, 'text': \"What party? It's a conglomeration of spineless idiots who are too stupid, fractured and weak to actually produce bills for a Republican president to sign.\", 'labels': [[88, 91, 'Toxic']]}\n","{'id': 92, 'text': '\"When are we going to stand up for ourselves?\"\\n\\nNever unless you want the good times to end.  You are dominated and beholding to the U.S. in every conceivable way and your survival skills consist of selling yourselves with a false narrative, keeping your head low and out of the international media unless it is some staged act of goodwill such as Syrian refugees or shopping for a peace keeping opportunity or putting out the welcome mat for people affected by U.S. border controls, all of which are nothing more than political grandstanding, building the Canadian brand.\\nYour best option, given that you are so insignificant on the world stage, so dependent on the U.S. and so defenseless is to continue doing what you have been doing.  Eat a little xxx every once in a while, keep your hate of the U.S. at an insidious level and remind yourself that 30 million people could be convinced to replace you in a heartbeat. \\nIf Canada was a business, it\\'s employees are lazy overpaid whiners.', 'labels': [[613, 625, 'Toxic'], [967, 987, 'Toxic']]}\n","{'id': 93, 'text': \"Well since Broncos’ Vance Joseph doesn't think he and his teammates have any right to express their guaranteed free speech, the idiot can just refuse to vote.\\n\\nWhat a dum bass jock!\", 'labels': [[128, 132, 'Toxic']]}\n","{'id': 94, 'text': \"You've got to be one simpleton idiot to listen to or read O'Reilly\", 'labels': [[31, 35, 'Toxic']]}\n","{'id': 95, 'text': \"You can stick your dick up anyone's butt. Why have any laws at all?\", 'labels': [[19, 22, 'Toxic'], [36, 39, 'Toxic']]}\n","{'id': 96, 'text': 'Your whining is a total turn off .... no one respects it.', 'labels': [[18, 22, 'Toxic']]}\n","{'id': 97, 'text': 'Rochdale, you are truly a demented, twisted, sickening example of all that the worst of Trump supporters.  Disgusting!', 'labels': [[26, 33, 'Toxic'], [36, 42, 'Toxic'], [45, 53, 'Toxic'], [107, 116, 'Toxic']]}\n","{'id': 98, 'text': 'hopefully stupid journalists.', 'labels': [[10, 15, 'Toxic']]}\n","{'id': 99, 'text': 'That madam, is pure rubbish.', 'labels': [[20, 26, 'Toxic']]}\n","{'id': 100, 'text': \"looking at it...trying to understand how this profound idiot is dominating this election...bottom line...it's because he pisses off the PC left, close enough.\", 'labels': [[55, 59, 'Toxic'], [121, 130, 'Toxic']]}\n","{'id': 101, 'text': 'Bingo, of course.....Leftist Media is too stupid to even state the obvious as being a possibility.', 'labels': [[42, 47, 'Toxic']]}\n","{'id': 102, 'text': \"I find it disgusting to listen to all these hypocrites wailing about the loss of freedom of speech... while THOUSANDS of them sent very graphic and detailed death threats to Khalid for posting the motion... promising to laugh and her while she bleeds to death in the street.\\n\\nIS that what we're talking about protecting?  IS that the civilized, free society you cherish so much?  I doubt every opponent of the bill here sent something to Khalid, but I wouldn't be the least bit surprised if one or two of you were involved in this behaviour.\\n\\nTerrorizing an individual is no less a crime than terrorizing a group.  You may THINK you have freedom and right on your side, but if you use violence or even the THREAT of violence to silence your opponents, you are just as bad as ISIS. You don't deserve to live in a free country and you CERTAINLY don't have the right to argue that people who oppose your views should be killed.\", 'labels': [[44, 53, 'Toxic'], [543, 553, 'Toxic']]}\n","{'id': 103, 'text': 'Hopefully the idiots refusing to believe science will still be around in twenty years when the evidence is irrefutable and the rising seas at our chins. I suggest that when it becomes clear these fools failed to take steps that could have mitigated the crisis, they are tried for crimes against humanity and sentenced to death, as their actions or inaction will have sentenced millions, perhaps billions, to die.', 'labels': [[14, 19, 'Toxic'], [196, 200, 'Toxic']]}\n","{'id': 104, 'text': 'He does grasp the pussy!', 'labels': [[8, 22, 'Toxic']]}\n","{'id': 105, 'text': 'Yours is the most ignorant comments.', 'labels': [[13, 34, 'Toxic']]}\n","{'id': 106, 'text': 'The Russians were stupid and clumsy about it-and Putin is becoming an even bigger liability for Russia--time for him and his ex-buddy Trump to retire and go fishing together in Siberia.', 'labels': [[18, 23, 'Toxic'], [29, 34, 'Toxic']]}\n","{'id': 107, 'text': 'What on earth would you want me to say that I have not said already ? Does this prove anything? I have a suggestion for you, if people had not been drunk, stoned and/or on drugs this situation would have never happened.  This simply proves my point - Intoxicated people cause trouble and do VERY stupid things.', 'labels': [[193, 197, 'Toxic'], [296, 301, 'Toxic']]}\n","{'id': 108, 'text': 'That kind intrusive/abusive behavior is simply handed down - Creepy cops all around.', 'labels': [[61, 66, 'Toxic']]}\n","{'id': 109, 'text': 'That guy and his dog will not live much longer walking on the road like that.  Log trucks , hot rod kids in their $500.00 dollar car with the $1500.00 muffler speeding along,  make quick work of them, there would not be enough left to cremate.\\n\\nRead the Sign:  Stupid', 'labels': [[261, 266, 'Toxic']]}\n","{'id': 110, 'text': 'You state: \"What kills me are the first nations groups that think these Hollywood idiots will give their anti-oil sands crusade a boost\".\\n\\nWell, it certainly seems to have caused much discussion,with many people pro and others con. Now many will take your position.And many others will agree with her. People like myself.  I would also expect that large organizations  and pressure groups have done research and focus groups and opinion polling on the impact of people like Ms.Fonda or others lending support for a political cause. And  I bet that professional analysis shows that there is a positive impact. Which is why its become a fairly well used tactic of those involved in lobbying on this or other issues.  Don\\'t you think?', 'labels': [[82, 87, 'Toxic']]}\n","{'id': 111, 'text': 'F\\nU\\nC\\nK\\nY\\nO\\nU\\nC\\nI\\nV\\nI\\nL\\nC\\nO\\nM\\nM\\nE\\nN\\nT\\nS', 'labels': [[0, 6, 'Toxic']]}\n","{'id': 112, 'text': 'WTF. Monsters should never be allowed outta jail or have a bail lowered ICW should also be accountable since this child was placed in this home with a total of 9 or how many other kids were there.  I have zero nice words.', 'labels': [[5, 12, 'Toxic']]}\n","{'id': 113, 'text': 'These blacks that are protesting are militants and will only stop when the owners grow some balls and demand..', 'labels': [[6, 11, 'Toxic'], [56, 59, 'Toxic'], [92, 96, 'Toxic']]}\n","{'id': 114, 'text': \"What you going to do about that Roy?\\nNot a damn thing but run your mouth... that's what I thought.\", 'labels': [[43, 52, 'Toxic']]}\n","{'id': 115, 'text': \"Ah you're one of the assholes that stays in the passing lane. You aren't helping matters move....get out the way..\", 'labels': [[21, 28, 'Toxic']]}\n","{'id': 116, 'text': 'Keep digging? They posted what he said. He also called out McCain for being captured.\\n\\nSo he has busted on PTSD sufferers and POWs. \\n\\nWhat about your crazy conspiracy theory about Clinton? There is enough things not to like with her without the overreach into tinfoil hat land. \\n\\nHowever, she is not out saying stupid things like Trump on a daily basis.', 'labels': [[150, 154, 'Toxic'], [311, 316, 'Toxic']]}\n","{'id': 117, 'text': 'We have a winner for the daily village idiot award .... Miller please come to Fort Mac to collect your prize ;-)', 'labels': [[39, 43, 'Toxic']]}\n","{'id': 118, 'text': \"Canada's optimism was crushed by the unpleasant surprise that Trudeau is a liar and a coward.\", 'labels': [[75, 91, 'Toxic']]}\n","{'id': 119, 'text': 'Yeah....or she give a crap about he marriage and loses it now.', 'labels': [[22, 25, 'Toxic']]}\n","{'id': 120, 'text': 'Been here 42 years. Crime certainly is on the rise. This idiot will do no time thought. SB91 will see to that.', 'labels': [[57, 61, 'Toxic']]}\n","{'id': 121, 'text': 'What is the mystery?  Killary and The Deep State thought they cheated \"just enough\" and her election was a done deal. When it did not happen, the criminal Clinton cartel kicked into high gear and produced a dossier that was a complete joke. McCain promoted it, and the Democrat controlled media ran with it. Now it is obvious what stupid fools they are.', 'labels': [[331, 336, 'Toxic'], [338, 342, 'Toxic']]}\n","{'id': 122, 'text': \"Perhaps 20% per year is unsustainable, but the point is well taken. It's sheer stupidity to plan on the assumption house prices  will rise simply at the rate of inflation..... 2% !!  It is precisely this sort of rationale that makes me avoid financial planners/advisers like the plague!  I'll educate myself, and make my own decisions thank you very much!\", 'labels': [[79, 87, 'Toxic']]}\n","{'id': 123, 'text': 'dumpy talks big but he is a phony and a coward; when push comes to shove, he will make  an excuse and back down.  no  balls!!!', 'labels': [[0, 4, 'Toxic'], [40, 45, 'Toxic'], [114, 121, 'Toxic']]}\n","{'id': 124, 'text': \"And you're an idiot. I really hope kim\\ntry's something stupid and he will. Then\\nwe can glass NK over. That war will be over,\\nfinally. The deaths. Collateral damage, life's\\ntough.\", 'labels': [[14, 18, 'Toxic']]}\n","{'id': 125, 'text': 'Good riddance and take your butt with you.', 'labels': [[28, 31, 'Toxic']]}\n","{'id': 126, 'text': \"Wow you're an idiot. I am not sure I could post in a public forum if I was as dumb as you are.\", 'labels': [[14, 18, 'Toxic'], [78, 81, 'Toxic']]}\n","{'id': 127, 'text': 'His comments regarding the USA\\'s Constitution and its effects on governance were notable:\\n\\n“It’s a very rough system ... It’s an archaic system ... It’s really a bad thing for the country.”\\n\\nThere\\'s really only one response to the minority-elect President\\'s attack on his country--\"Too bad. Suck it up, buttercup.\"', 'labels': [[282, 311, 'Toxic']]}\n","{'id': 128, 'text': 'So China sees it important enough to up their presence, while Trudeau sees it more important to be seen taking selfies.  Canada is so Screwed!', 'labels': [[134, 140, 'Toxic']]}\n","{'id': 129, 'text': \"If anything, they want full statehood. Yep, it's a dumb analogy.\", 'labels': [[51, 54, 'Toxic']]}\n","{'id': 130, 'text': 'this is an outright lie. the are not being housed. show me an example where that has happened. this just makes it easier for hypocrites to report homelessness', 'labels': [[125, 134, 'Toxic']]}\n","{'id': 131, 'text': 'On the one hand liberal dementia demands we protect every last acre of \"farmland\" from development, and then on the other hand liberal dementia demonizes the farmer for irrigating their fields. No matter how many times liberal bigots flag the post and remove it, it doesn\\'t change the fact they are despicable staggering hypocrites.', 'labels': [[3, 9, 'Toxic'], [321, 330, 'Toxic']]}\n","{'id': 132, 'text': \"Hookipa.  This total bullshit!  The Hawaiians are protesting to get the Aina back to there hands and the Legislators are doing the exact opposite. We're just inviting trouble like the mainland and Europe with the Jihadists.  As long as the Legislators aren't being harmed everything is Pono.\", 'labels': [[21, 28, 'Toxic']]}\n","{'id': 133, 'text': \"The suckers will keep supporting them though because that's what suckers do.\", 'labels': [[4, 10, 'Toxic'], [65, 71, 'Toxic']]}\n","{'id': 134, 'text': 'Bullshit', 'labels': [[0, 7, 'Toxic']]}\n","{'id': 135, 'text': \"well now isn't that nice. freddy the stalker\", 'labels': [[37, 43, 'Toxic']]}\n","{'id': 136, 'text': 'Hey! You heard the man. Solidarity, baby. Solidarity forever.\\nAll together now: \"This land is your land/This land is my land/From Bonavista to Vancouver Island...\"\\n  C\\'mon! Let me hear it!\\n  Someone isn\\'t singing.\\n  Fire that guy!', 'labels': [[216, 219, 'Toxic']]}\n","{'id': 137, 'text': 'Of course the Edmonds city council isn\\'t going to meet their goal by 2025...the article even admits Edmonds can\\'t do a thing about where the BPA sources their power.  But that\\'s not the point, now is it?  All this is just an opportunity for the Edmonds city council to engage in what is quickly becoming a favorite pastime of the left; that vacuous, pointless, ridiculous, and stupefying exercise otherwise known as \"virtue signaling\".', 'labels': [[361, 370, 'Toxic'], [377, 386, 'Toxic'], [417, 432, 'Toxic']]}\n","{'id': 138, 'text': 'I would not consider these troublemakers \"liberals\" in any fashion; the actual liberals stayed at the peaceful protest.  For years Eugene\\'s liberals have been plagued by these anarchists and other extremists who give liberals and Progressives  a bad name, and now that our nation faces a crisis of authoritarianism we need to make clear these fools do NOT speak for us.', 'labels': [[21, 49, 'Toxic'], [343, 347, 'Toxic']]}\n","{'id': 139, 'text': \"Ussien Bolt showed more respect to our anthem than Gabby! She's an idiot who got sucked into the political show but her background as a gymnast doesn't jive with 98% of all other athletes and people in the world of real and respect. The only place the skill she learned is going to be useful is at the Olympics no where else because she refused to incorporate discipline and respect into her actions. Stop kissing blacks asses.\", 'labels': [[67, 71, 'Toxic'], [414, 419, 'Toxic'], [421, 425, 'Toxic']]}\n","{'id': 140, 'text': \"Trump is the most corrupt president in US history. It's a fact that he is the only president in history NOT to fully divest himself of all previous business dealings and assets - that alone makes him Zumaesque and is almost certainly a violation of the constitution's emoluments clause. And that was before he was even sworn in. On the day of his swearing in he stood in front of the world and flat out lied about how many people attended - as if we hadn't all SEEN that he was lying.\\nThis is a president who lies habitually and actually seems to think that if he says it, reality must change to match what he said. \\nNow, in the meantime - yes, this coverage over Russia is absolutely critical. As I've pointed out before - it took nearly 2 years from the breaking of the watergate story before Nixon was forced to resign and part of what allowed that to happen was constant press coverage. \\nStories likes must NEVER be allowed to blow over. Cover it. Constantly. Until he is exonerated or impeached.\", 'labels': [[18, 24, 'Toxic']]}\n","{'id': 141, 'text': \"38 million pieces of trash.....\\nMatches California's  population....\\nCoincidence?....\", 'labels': [[11, 25, 'Toxic']]}\n","{'id': 142, 'text': 'Driving like that is why people are going to soon attempt to argue that AI-driven vehicles should be mandatory. Just as a point of order, it might help if there were more signs indicating \"left lane for passing only,\" idiots being what they are.', 'labels': [[218, 223, 'Toxic']]}\n","{'id': 143, 'text': \"Lemmee outta this bible thumping borough! I cannot believe they don't understand what they are doing! Have we just elected smart people or stupid, mindless, godists? Well, actually, one ran on this issue alone. He was pissed about the Satanic thing. He's on the radio as I type. What kind of place am I living in??? The belly of the beast, indeed...\", 'labels': [[139, 144, 'Toxic'], [147, 154, 'Toxic']]}\n","{'id': 144, 'text': 'liar, filthy liar.  One other person was injured', 'labels': [[0, 3, 'Toxic'], [6, 16, 'Toxic']]}\n","{'id': 145, 'text': \"Nancy, the witch, Pelosi is a complete fool.  If Trump did nothing the multiple States already suing  America will result in an immediate end of this BS program.  \\n\\nTrump is being nice by giving Pelosi the idiot and the rest of  congressional members to write a law.  Given the incompetence of this congress don't hold your breath.\\n\\nBTW, one way out would be to give them legal residence but no path ever to citizenship for them or their children and/or other relatives.  Also, end the legal right of citizenship for anyone born in America\", 'labels': [[39, 42, 'Toxic'], [206, 210, 'Toxic']]}\n","{'id': 146, 'text': \"In the meantime, Canadian born people in their twenties can't afford to settle down and have kids because the cost of living is so high. \\n\\nWhen are Canadians going to say enough is enough. \\n\\nIt's crazy that some people just keep voting for the same crooks, over and over.\", 'labels': [[249, 254, 'Toxic']]}\n","{'id': 147, 'text': 'Probably a felon in possession: he deserved to be shot, if only for criminal stupidity.', 'labels': [[50, 85, 'Toxic']]}\n","{'id': 148, 'text': 'she is another one of them  nasty hooked nose jew fcks, like so many in the media.. we need to expose these nasty jews for what they are.. and purge them from the media altogether.. they are the liars and anti american scum that has tried to turn USA in to a bankrupt cease pool', 'labels': [[34, 39, 'Toxic'], [219, 222, 'Toxic']]}\n","{'id': 149, 'text': \"Exactly right.  The manager is a clown who lives in Bennett. We have a mayor who has no idea what he's doing, and then there is the usual gang of idiots in city government who couldn't care less about efficiency.  Hancock is totally incompetent.\", 'labels': [[146, 151, 'Toxic']]}\n","{'id': 150, 'text': 'No, newsreader.  Trump and his followers are the ones spreading ignorance. They are just too ignorant to know it.', 'labels': [[64, 72, 'Toxic'], [93, 100, 'Toxic']]}\n","{'id': 151, 'text': \"Hard to believe that idiot and his union even attempted an appeal.  He was lucky that it wasn't more games.\", 'labels': [[21, 25, 'Toxic']]}\n","{'id': 152, 'text': \"Negative Negative Negative. That is you Mr. Paul Jenkins. The Democrats watched and listened to the party of no for the last eight years and now you expect politeness from the Democrats after a racists, sexists, super creepy person is elected to be our next president. Don't think so. We just elected a man proud to be a pussygrabber. You go right ahead and defend this disgusting human being. Feel great about yourself! Sleep tight.\", 'labels': [[194, 200, 'Toxic'], [203, 209, 'Toxic']]}\n","{'id': 153, 'text': \"BA:  And yet you refused to believe the PROOF of Clinton's intelligence leaks and security abuse.  But now that the shoe is on the other foot you rant about anybody doubting the accusations.  You are a hypocrite!\", 'labels': [[202, 210, 'Toxic']]}\n","{'id': 154, 'text': 'The apt term is \"useful idiot.\" Sadly, this kid has fallen hook and sinker.', 'labels': [[17, 28, 'Toxic']]}\n","{'id': 155, 'text': \"Wow. Ten days later, and you're still crying about being wrong. Pathetic.\", 'labels': [[64, 71, 'Toxic']]}\n","{'id': 156, 'text': 'Is it me or does it not seem that these people are trying to look even more stupid than they are?', 'labels': [[76, 81, 'Toxic']]}\n","{'id': 157, 'text': 'So denglish in your world the white race deserves no culture and should be appropriated by oppressed cultures but never the other way around.  Nice.\\n\\n\"Write what you know\" is no where near akin to Gnothi Seaton (Know Thyself) on the temple.  If it was you would have to arrive at a shameless victim who refuses to acknowledge the atrocities of my own ancestors  history (ex. caste system) but only wants to focus on the ones by those that ended up more successful.   \\n\\nSo let us flood your shores, while you shut up and give us preferential treatment because we are victims...or if not us, our great great grandfathers were.     That about it?\\n\\n If real racism rears its ugly head than we should ALL put a stop to it...but your victimhood for perceived sleights has grown tired...so move back to where you came from (not you personally) or continue with your appropriation of white culture (you know the one where the worlds oppressed rushes to) while putting a cork in it.    Sick of whiners.', 'labels': [[3, 10, 'Toxic'], [30, 34, 'Toxic'], [282, 290, 'Toxic']]}\n","{'id': 158, 'text': 'These people are idiots', 'labels': [[17, 22, 'Toxic']]}\n","{'id': 159, 'text': \"Brains are only a problem with a certain segment of the population, who used to let the folks who have 'em keep the ship of state off the rocks. Now they've seized the wheel of gubmit.\\n\\n“As democracy is perfected, the office of president represents, more and more closely, the inner soul of the people. On some great and glorious day the plain folks of the land will reach their heart's desire at last and the White House will be adorned by a downright moron.”\\n\\n― H.L. Mencken, On Politics: A Carnival of Buncombe\", 'labels': [[493, 500, 'Toxic']]}\n","{'id': 160, 'text': 'Its only 49 % of our budget here on the Rock.\\nIt used to be 33 % until Chretien unloaded costs to the provinces  15 years ago.\\nThe surplus was used to fund Adscam.\\n\\nNow its being used for $1.1 million offices for the LPC ministers and for JT swimming pool and for anything extraneous to the well being of taxpayers.\\n\\nSo, suck it up baby .\\n\\nYou voted these idiots into office..', 'labels': [[356, 361, 'Toxic']]}\n","{'id': 161, 'text': 'The masses have the IQ of morons', 'labels': [[26, 31, 'Toxic']]}\n","{'id': 162, 'text': 'Justin Trudeau should be charged with treason for aiding and abetting the enemy.  He is an embarrassment to Canada.', 'labels': [[91, 103, 'Toxic']]}\n","{'id': 163, 'text': \"U suck my will to live with your idiotic, childish, stupid, finger pointing waste of breath - if I am in your house or car and leave my gun I guess that would make you another neato gun owner. Can't wait.\", 'labels': [[52, 57, 'Toxic']]}\n","{'id': 164, 'text': 'Wow.  Trump is incompetent and a racist to boot.  And he is personally a mean and petty man.  Not letting Sean Spicer meet Pope Francis was just one small insight into what a petty and mean boss he was.', 'labels': [[15, 25, 'Toxic'], [33, 38, 'Toxic']]}\n","{'id': 165, 'text': 'your a bias sheep of stupidity, your bs so called opinion based on party has nothing to do with this story, get some help', 'labels': [[21, 29, 'Toxic']]}\n","{'id': 166, 'text': 'The annual orgy for the wealthy and their chefs.', 'labels': [[0, 14, 'Toxic']]}\n","{'id': 167, 'text': 'Wow really!!! What does being on welfare have to do with a damn thing? It could gave just as easily been rich drunks an druggies. People are so quick to judge others, an all that make you is a very ignorant person!', 'labels': [[59, 62, 'Toxic']]}\n","{'id': 168, 'text': 'typical left wing delusion,, capitalist are those who create every dam penny of taxes for us all idiot', 'labels': [[97, 101, 'Toxic']]}\n","{'id': 169, 'text': '2 words for you: Russian hookers', 'labels': [[17, 31, 'Toxic']]}\n","{'id': 170, 'text': \"What is that to mean?\\nThere are Jews in our so-called president's inner circle.\\nThere are Jews on the staff of WSJ.\\nThere are Jews who are child molesters.\\nThere are Jews who are Catholic, Muslim, Atheist, etc.\", 'labels': [[145, 153, 'Toxic']]}\n","{'id': 171, 'text': 'AC/DC, why do log on here and act like an asshat?', 'labels': [[42, 47, 'Toxic']]}\n","{'id': 172, 'text': \"That's right Tommy....you don't know dick!\", 'labels': [[37, 40, 'Toxic']]}\n","{'id': 173, 'text': \"Yeah, fake in the sense that these idiots (you?) support the Dolt-in-Chief, support legislation that can be demonstrated to harm many Americans, and have so little respect for American democratic institutions that you support a candidate who willingly hooked up with a foreign government in order to win an election. It's disgusting and most Americans--the majority, rather than the minority that elected Trump--are rightfully disgusted.\", 'labels': [[35, 40, 'Toxic'], [252, 257, 'Toxic'], [427, 435, 'Toxic']]}\n","{'id': 174, 'text': 'You think this is bad, wait till they start raising property taxes to help pay for the man made disaster called The Rail.  Landlords will pass the increase on to renters and walla...more homeless.  What idiots.', 'labels': [[203, 208, 'Toxic']]}\n","{'id': 175, 'text': 'I think the term is anal expulsive.', 'labels': [[20, 33, 'Toxic']]}\n","{'id': 176, 'text': \"We don't know. And Trump brought this on himself by failing to follow ethics guidelines for divestment. His conflicts of interest make him a corrupt President.\\n\\nI find it strange that Trump is obsessed with healthcare rather than infrastructure. Given his background in real estate, it is a shame that he has failed to make his mark on infrastructure. Infrastructure could actually lead to a higher GDP. Overall, Trump has been a disappointment as President. I give him poor marks for being lazy and for his inability to form a productive relationship with Congress. Trump is practically a lame duck. I suspect he will be forgotten in history.\", 'labels': [[590, 598, 'Toxic']]}\n","{'id': 177, 'text': \"You're not wrong.  World markets will determine what happens.  Christy's statement was stupid.\", 'labels': [[87, 92, 'Toxic']]}\n","{'id': 178, 'text': \"Juan Valdez are you stupid?  do you have any idea how the media is operated in real communist countries?  Please review the fact that ALL the news media in Russia is controlled by Putin.  Do you have any idea how the Chinese operate their media.  I can tell you that China and Russia do not report anything that is not approved by their leaders.   So what you are suggesting that you have no problem if Trump could approve all the news release?  We know one thing all ready Trump does lie a lot and he for some reason thinks people don't see through the lies.  Listening to his spokesmen try to rationalize his recent lies on the size of the the inauguration is funny but sad.\", 'labels': [[20, 25, 'Toxic']]}\n","{'id': 179, 'text': 'I am wondering as to why the U.S. Secret Service is not at the door with handcuffs to make this mental-illness liberal, Kathy Giffin, to jail and throw away the keys.  In her news conference, she blames President Trump for her damaged career.  This is a typical Liberal monster who hates President Donald Trump and blame everything on him - even her stupidity.', 'labels': [[350, 358, 'Toxic']]}\n","{'id': 180, 'text': 'You idiot. Study your facts on the history of Israel. Even on the modern history from Resolution 188 on and then use your God given reasoning power.', 'labels': [[4, 8, 'Toxic']]}\n","{'id': 181, 'text': \"We're led by idiots.\", 'labels': [[13, 18, 'Toxic']]}\n","{'id': 182, 'text': \"What a STUPID article. There is absolutely nothing suspect about Stein's call for a recount. The reason it took longer to get started was because of the ridiculous amount charged to conduct a recount. Mr. Pitts, you my friend are being disingenuous and misleading to your readers.\", 'labels': [[7, 12, 'Toxic'], [153, 162, 'Toxic'], [236, 247, 'Toxic'], [253, 262, 'Toxic']]}\n","{'id': 183, 'text': 'Jesus Christ Travis,  you are an asshole. All the people who will die in this storm are stupid and just the product of natural selection? GFY', 'labels': [[33, 39, 'Toxic'], [88, 93, 'Toxic']]}\n","{'id': 184, 'text': 'By too late for Bonhoeffer, I meant, of course, too late to save his life from the gang of criminals in power in Germany. He was internally liberated already though imprisoned by the gang for his Christian conscience and personal integrity. Another gang of criminals, this time in Russia, have been trying to extend the tentacles of their corrupt power west into Europe and even here. The GOP -- and stupid, blind Americans who back Trump -- are complicit. God help us.', 'labels': [[16, 25, 'Toxic'], [400, 405, 'Toxic']]}\n","{'id': 185, 'text': 'What a bunch of morons!  They\\'re so damn stupid they don\\'t know when they\\'re being whipped into a frenzy by manipulative media over a threat that doesn\\'t even remotely exist!  What other brain-dead beliefs do they share?  Let\\'s see . . . Obama\\'s a Muslim who was born in Kenya, our government is coming to take their guns away, there\\'s a \"dark government\" working behind the scene to sabotage Trump\\'s agenda, and on and on and on.  Too bad their anger can\\'t be directed towards solving problems that actual exist today - like climate change, the refugee problem, Russians hacking into our voting machines, a certified idiot leading our country!', 'labels': [[16, 21, 'Toxic'], [36, 39, 'Toxic'], [41, 46, 'Toxic'], [187, 196, 'Toxic'], [618, 622, 'Toxic']]}\n","{'id': 186, 'text': 'Too bad GOPe politicians will be too stupid to use this to their advantage.', 'labels': [[37, 42, 'Toxic']]}\n","{'id': 187, 'text': 'Ethics are for schmucks. This lesson is being taught from the very top in D.C., on down to the current part-time HNL mayor...', 'labels': [[15, 22, 'Toxic']]}\n","{'id': 188, 'text': 'liberal dementia, a social disease that knows no shame, often claims Reagan broke the unions...because he enforced federal law on 1 union in criminal violation of federal law. It is impossible to have an intelligent intellectually honest discussion with these morons as they are as shameless liars as it gets.', 'labels': [[49, 53, 'Toxic'], [260, 265, 'Toxic'], [282, 296, 'Toxic']]}\n","{'id': 189, 'text': 'Putin got Trump elected.  He was counting on the idiots who voted for Trump to come through for him. And you obliged.', 'labels': [[49, 54, 'Toxic']]}\n","{'id': 190, 'text': 'ARE THEY COMPLETELY OUT OF THEIR FLIPPING MINDS,? OH! YES  THEY liberal idiots', 'labels': [[72, 77, 'Toxic']]}\n","{'id': 191, 'text': \"Darn those sentient, animated guns! Just runnin' around shootin' folks all by themselves.\", 'labels': [[36, 46, 'Toxic']]}\n","{'id': 192, 'text': \"Look BJ, if you can sleep voting for the criminal enterprise know as the Clintons you're pretty pathetic.\", 'labels': [[96, 103, 'Toxic']]}\n","{'id': 193, 'text': \"We're idiots.\", 'labels': [[6, 11, 'Toxic']]}\n","{'id': 194, 'text': 'The republicans are basically idiots; just like the democrats.', 'labels': [[20, 28, 'Toxic'], [30, 35, 'Toxic']]}\n","{'id': 195, 'text': 'Did Jughead get so stupid from smoking dope?', 'labels': [[19, 24, 'Toxic']]}\n","{'id': 196, 'text': 'who said crazy white men with guns are fine.', 'labels': [[9, 23, 'Toxic']]}\n","{'id': 197, 'text': 'damn that guy just totally lost his sunglasses.', 'labels': [[0, 3, 'Toxic']]}\n","{'id': 198, 'text': \"Some people just don't pay attention.  Too bad they think that posting ignorance helps their party.\", 'labels': [[71, 79, 'Toxic']]}\n","{'id': 199, 'text': \"Get an education, right you\\nallow an idiot to dictate what\\nyou think. You're another waste\\nof skin.\", 'labels': [[37, 41, 'Toxic'], [70, 97, 'Toxic']]}\n","{'id': 200, 'text': \"YOU ARE THE CARTOONISH BUFFOON EUGENE if you can't remember that the left is still not accepting the results of the 2000 election ...don't you remember the endless drama, court challenges etc the left used to challenge the results ??\", 'labels': [[23, 29, 'Toxic']]}\n","{'id': 201, 'text': 'Should be castrated as well!!', 'labels': [[10, 18, 'Toxic']]}\n","{'id': 202, 'text': 'Trump is a complete idiot.', 'labels': [[20, 24, 'Toxic']]}\n","{'id': 203, 'text': 'Hire a lawyer to explain the law to you. She\\'s only going to prison because she killed someone, not for the DUI alone, which is not a felony. \"Deadly piece of metal\"? You must wonder why cars are legal and why they are not considered by law a deadly weapon, per se. What\\'s the fatality rate of DUI drivers at the minimum BAL? It\\'s virtually zero. This woman is a careless, self-absorbed idiot, which goes furthest in explaining her crime.', 'labels': [[387, 391, 'Toxic']]}\n","{'id': 204, 'text': 'A little knowledge is a dangerous thing.  A very little knowledge is a very dangerous thing.  In my opinion as knowledge decreases danger increases.......so real ignorance is really dangerous.  Again, IMO, to deny global climate change, global warming and man\\'s role in causing these phenomena is a demonstration of extreme ignornace.  BTW: I use the term \"ignorance\" in its classical sense...absence of knowledge.  I consider stupidity to be the persistent refusal to acquire knowledge and, instead, maintain views and opinions based on ignornace. \\n\\nIMO: Definitive evidence of climate change (global warming) and humankind\\'s role in it is readily available.  To ignore that evidence and maintain a \"denier\" status goes beyone ignorance into the realm of stupidity....and stupidity is far mor dangerous than ignorance.', 'labels': [[76, 84, 'Toxic'], [138, 146, 'Toxic'], [182, 190, 'Toxic'], [427, 435, 'Toxic'], [756, 764, 'Toxic'], [773, 781, 'Toxic'], [809, 817, 'Toxic']]}\n","{'id': 205, 'text': \"Now, that poster who mocked Roberto Osuna'a anxiety problems to try to get a laugh, they see no problem in that.  Justified.  No issues.  That's what the problems of others are there for, right, to make fun of and get a laugh.\\n\\nI'm OK, Jack.\\n\\nUh, no, you're far from OK.\\n\\nThat poster refuses to apologize to those who were rightly offended, ignores the damage done by their posts, thinks this is all a game.\\n\\nNot a game.  Internet bullying is a huge problem.\\n\\nWent on 'bout losing in today's gibberish.  Appropriate topic, it fits the poster.\\n\\nSo would pond scum.\\n\\nSaid poster insisted they were going to troll me for standing up to him, except they turtled, didn't they.  Don't like being called out, got after, but guess what?  Not going away....\\n\\nYeah, pond scum would fit the profile.\", 'labels': [[761, 764, 'Toxic']]}\n","{'id': 206, 'text': \"Evil begets evil, mr trump.   ....... ...  \\n  ....once again the shooter gets it terribly wrong.  dear future nutjob snipers - be efficient and take yourself out first. saves bullets, lives, families.  what do you care how they fare? you'll be dead, as you wished.....\", 'labels': [[110, 115, 'Toxic']]}\n","{'id': 207, 'text': 'The only idiot is the one in the White House.', 'labels': [[9, 13, 'Toxic']]}\n","{'id': 208, 'text': 'Rochdale .... you pathetic piece of stinking garbage.', 'labels': [[18, 25, 'Toxic'], [45, 51, 'Toxic']]}\n","{'id': 209, 'text': 'Some are now calling it \"black lives murder\"', 'labels': [[25, 42, 'Toxic']]}\n","{'id': 210, 'text': 'You are about as classy as a pig gets.', 'labels': [[29, 31, 'Toxic']]}\n","{'id': 211, 'text': 'OMG! They arrested the plants! Thank GOD! They were soaking up all the sunlight! Those brave police. What the heck? Go after criminals not plants idiots! I dont pay taxes for this shit.', 'labels': [[146, 151, 'Toxic'], [180, 183, 'Toxic']]}\n","{'id': 212, 'text': \"Oh, I don't know.  Kind of worked for George W......well, at least the moron part.\", 'labels': [[71, 75, 'Toxic']]}\n","{'id': 213, 'text': 'You must be ecstatic with your \"F****** Moron\" who doesn\\'t care enough about the military people he has killed and does or says nothing for two weeks, then lies about past Presidents not doing what he hadn\\'t done. I know, he had really important things to do during that time. He started a twitter fight with the NFL and Puerto Rico and played golf. In fact, he was playing golf when the body o one of the soldiers was being taken off the plane. This is the draft dodging coward, who wraps himself in the flag, to rail against the athletes who are protesting equal rights. He is the a**clown who wants to shut down the 1st amendment because it makes him look like the a**wad he is. So be proud of your ignorance and wave your flag high.', 'labels': [[32, 44, 'Toxic']]}\n","{'id': 214, 'text': \"Trump was mocked and humiliated at that dinner because of his years-long lie about President Obama's birthplace.  Trump is a pathological liar, but cannot stand being called out about that personality defect.\\n\\nIt'll be a much better time without him.\", 'labels': [[114, 141, 'Toxic']]}\n","{'id': 215, 'text': 'Explain, Oh Stupid Person, just how The Electoral College, was \"gerrymandered\"?\\nIdiot.', 'labels': [[12, 17, 'Toxic'], [80, 84, 'Toxic']]}\n","{'id': 216, 'text': 'This is so stupid.', 'labels': [[11, 16, 'Toxic']]}\n","{'id': 217, 'text': 'aiee soose..........whatever happened to \"you fool around with my wife i goin stab you with my knife?\"', 'labels': [[7, 9, 'Toxic']]}\n","{'id': 218, 'text': 'Nothing wrong with hillary, with Mr. Trump beating her ass she is just looking for the sympathy vote.', 'labels': [[43, 57, 'Toxic']]}\n","{'id': 219, 'text': \"This coward should have just used one bullet on himself and gotten it over with. \\n\\nInstead this scum targets children and babies, well he's not of a particular race or religion so Trump has given him a pass using the usual garbage of 'thoughts and prayers' and  saying this guy was mentally ill.\\n\\nMentally ill people do not murder children in cold blood,  evil, loser, inbred cowards do.  Trump won't even utter a single statement calling out this cowardly piece of trash, instead he deflect to Chicago?\", 'labels': [[5, 10, 'Toxic']]}\n","{'id': 220, 'text': 'This idiot is committing TREASON.  Funny how THAT manages to escape your attention.  I can poll 1,000 NON Asian-Canadians in WESTERN Canada and get a completely OPPOSITE result.  We do NOT want China having control of our technological companies OR our/US defense technology.  They must be THRILLED you buttwipes in central Canada voted Liberal, because the Conservatives have been turning them down for over a decade!!!', 'labels': [[5, 9, 'Toxic']]}\n","{'id': 221, 'text': \"Perry is so dumb he doesn't know Alaska is a state.\", 'labels': [[12, 15, 'Toxic'], [28, 31, 'Toxic']]}\n","{'id': 222, 'text': 'Nothing has changed, Republicans count on ignorant stupid people to breed and have a big litter of equally stupid kids who can be counted on to vote against themselves!  Sheeple gotta sheep ...', 'labels': [[51, 56, 'Toxic']]}\n","{'id': 223, 'text': 'Typical low IQ trumphobic letter.', 'labels': [[8, 13, 'Toxic']]}\n","{'id': 224, 'text': 'I think John McCain is a hero and Trump is a pig.  What do you think?', 'labels': [[45, 47, 'Toxic']]}\n","{'id': 225, 'text': \"Why not you'll accept an empty headed liar and crook?\", 'labels': [[25, 51, 'Toxic']]}\n","{'id': 226, 'text': 'Republicans didnt protest and throw a national temper tantrum when obama was elected. Even when you idiots elected the dictator for a second term!', 'labels': [[86, 144, 'Toxic']]}\n","{'id': 227, 'text': \"Backpacking in Afghanistan! What the ****!\\nAmanda Lindhout - a self-styled, attention-seeking 'journalist' goes to Somalia, the most dangerous country on earth, and gets herself kidnaped.\\nHow responsible is Canada to help people who are this unbelievably stupid?\", 'labels': [[255, 260, 'Toxic']]}\n","{'id': 228, 'text': 'Neighbors suck!', 'labels': [[10, 13, 'Toxic']]}\n","{'id': 229, 'text': 'they do have to fly to exotic locations every 5 years to report progress, thus spewing huge amounts of carbon flying the entourages around at tax payers expense! see but that is clearly too what alot of this was about and trump will not waste time and money on useless nonsense, too bad the lunatic left is crying thier scam has been exposed!', 'labels': [[291, 297, 'Toxic']]}\n","{'id': 230, 'text': 'A great win for Sergio - about damn time, too!', 'labels': [[31, 39, 'Toxic']]}\n","{'id': 231, 'text': \"She's a disgrace .... to her race.\", 'labels': [[8, 15, 'Toxic']]}\n","{'id': 232, 'text': \"First saw Griffin on Seinfeld. She wasn't funny then-definitely not funny now. Strange-esoteric humor.\\n\\nCan't fix stupid.\", 'labels': [[114, 119, 'Toxic']]}\n","{'id': 233, 'text': 'Please stop this asinine false equivalence of tRump-Clinton. tRump is a sad joke who is unqualified for the presidency in every way possible. Clinton was highly qualified and competent. There is no equivalency at all. Period.', 'labels': [[17, 23, 'Toxic']]}\n","{'id': 234, 'text': \"It seems like it's you who's buying drivel.\", 'labels': [[29, 34, 'Toxic'], [36, 41, 'Toxic']]}\n","{'id': 235, 'text': 'Margaret Conaway, thank you for your excellent letter!  And yes Kelly is insane.', 'labels': [[73, 78, 'Toxic']]}\n","{'id': 236, 'text': 'Obooba is a domestic terrorist. Nothing he does shocks me anymore. The more he can do to destroy america and israel the better he feels.', 'labels': [[21, 29, 'Toxic']]}\n","{'id': 237, 'text': 'How will Mr Thin Skin react .... my guess is silence.  Maybe this is enough to end the stupid tweeting.', 'labels': [[87, 92, 'Toxic']]}\n","{'id': 238, 'text': 'Get lost with your stupid slave stuff. The Jews were slaves and they seem to be doing OK.', 'labels': [[26, 30, 'Toxic']]}\n","{'id': 239, 'text': 'Thanks  Forest Service for HORRIFIC &  Dangerous Air we are breathing.   This could have all been AVOIDED if you would QUIT being IGNORANT and call in the S U P E R T A N K E R............\\n\\nRead the Sign:  QUIT being IGNORANT...........Or is it, you can not FIX STUPID......................', 'labels': [[262, 267, 'Toxic']]}\n","{'id': 240, 'text': \"What's next is that white guy gonna make those brothers run across fields chasing pig skins while beating each other to a pulp? That old white Texan is just cruel.\", 'labels': [[128, 161, 'Toxic']]}\n","{'id': 241, 'text': \"Whining on every topic.  The idiot puts his own foot in his mouth on a daily basis with blatant lies and non-sensical rhetoric.  Very difficult to turn this hog's ear into a silk purse when the pig daily oinks without a brain behind the oral spewing.\", 'labels': [[29, 33, 'Toxic'], [194, 196, 'Toxic']]}\n","{'id': 242, 'text': 'yet it is the bias stupidity of the blatant trudeau hack that has been outed and you being a lib loser cant stand it,, now go cry and i will get you a tissue!\\n\\nps.. you need serious help for your delusions bud', 'labels': [[19, 27, 'Toxic'], [97, 101, 'Toxic']]}\n","{'id': 243, 'text': 'Liar.', 'labels': [[0, 3, 'Toxic']]}\n","{'id': 244, 'text': 'Ok. But unfortunately we have a narcissistic egomaniac who just said, \"anymore threats will be met with fire and fury the likes of which the world has never seen.\" Kim Jong Un ALWAYS makes more threats. So what is Trump going to do then? Back down? Launch an attack (nuclear or not) which most analysts think would result in the immediate destruction of Seoul, South Korea 35 miles from the North Korea border and home to 10 million of our allies? This stupid potato of a president has no idea how to deal with this. I only hope our (not \"his\", OUR) generals are able to work through this successfully.', 'labels': [[32, 43, 'Toxic']]}\n","{'id': 245, 'text': 'obviously the idiot poster in chief being jealous of trumps earnings (and since he cant fault him for making millions and paying such in taxes) has to try and attack trump in any other way.. so what about buffet, no one cares bud,, and trump didnt PERSONALLY declare bankruptcy ONCE, never, its called business, too bad ignorant left wingers never understand such facts', 'labels': [[14, 18, 'Toxic']]}\n","{'id': 246, 'text': 'Kizla - the only \"goofy\" face is yours and that stupid hat you wear!', 'labels': [[48, 53, 'Toxic']]}\n","{'id': 247, 'text': 'Some yahoo posting here, definitely NOT a Canadian, is slathering and drooling at the thought of having one of the US Tridents launch some missiles at NK. The problem with that thinking is that when the first missile cleared the water, we would be instantly involved in WW 3, and I seriously doubt the sub would make it much further than a few dozen kilometres before it was destroyed. Go on trumpf. DO IT. I DOUBLE DARE YOU. You idiot.', 'labels': [[430, 434, 'Toxic']]}\n","{'id': 248, 'text': \"Every government at every level will want a piece of the money eventually. It's inevitable. Yet the same governments will not endorse or support full legalization. It's totally ridiculous to keep a plant on a narcotics schedule.\", 'labels': [[177, 186, 'Toxic']]}\n","{'id': 249, 'text': 'If there was an award for dumbest move of the year, the TDSB would surely win. The government among other places are awash with the use of the word chief. However perhaps the most fitting rebuttal to this move, is in the work of one person who has championed the rights of indigenous people for years. That person is Beverley McLaughlin or as she is better known, Chief Justice of Canada Beverley McLaughlin.', 'labels': [[26, 32, 'Toxic'], [381, 386, 'Toxic']]}\n","{'id': 250, 'text': 'No, what is unfortunate is that a major organization gets so butthurt over a meme that they threaten to dox the originator.\\n\\nOf course, this is the same organization that had a producer admit the Russia story had no legs, had one of their on-air personalities call that same Russia story a \"nothing burger\", and had another producer say the American voters are \"stupid as s**t\"', 'labels': [[291, 304, 'Toxic'], [362, 375, 'Toxic']]}\n","{'id': 251, 'text': 'the only losers are the jackasses you seem to represent.', 'labels': [[24, 32, 'Toxic']]}\n","{'id': 252, 'text': \"Your problem is what, your a useless junkie?\\nIf not get some, shoot up and it'll shut you up.\\nAll illegal drug users bye, bye. It's the new way.\\nStop wasting our money to save idiots from\\nthemselves.\", 'labels': [[29, 35, 'Toxic'], [176, 181, 'Toxic']]}\n","{'id': 253, 'text': 'Sadly this will never happen in HAwaii, the state and city government is corrupt, there are several reasons why this will never happen the first one is because the unions have a really really really strong grip on the the state. The best examples are the Nimitz Overpass, H3 and now the Rail. Another example is the repaving of the likelike, the new curbs and what ever else is being fixed. The work is being done at night to alleviate traffic (Also give workers higher wages at night), but yet the same company is still working during the day????, Even the State Dept of Highways play this game, in a time when overtime is scrutinized the Highway team works every saturday trimming trees, they have close to 20 or more workers, HPD and Safety Inc ?????? what is insane is that they are trimming the same trees that private companies trim during the week with 4 -6 workers, plus to more to direct traffic... no HPD (WTH). Finally, WE the PEOPLE continue to vote for the same IDIOTS each election!', 'labels': [[975, 980, 'Toxic']]}\n","{'id': 254, 'text': 'Reminds me of Trump discussing a response to N Korea missile launches in an open dining room. Stupid hires stupid.', 'labels': [[94, 112, 'Toxic']]}\n","{'id': 255, 'text': 'He knows a weak, incompetent leader when he sees one.', 'labels': [[17, 27, 'Toxic']]}\n","{'id': 256, 'text': 'judging from the responses you are as popular as a prostitute at a Christining', 'labels': [[27, 77, 'Toxic']]}\n","{'id': 257, 'text': \"Someone doesn't know her history.  AOL didn't pay it's 'forum manager' a cent.  THEY paid to use AOL.  Even today, sites like reddit (a for profit entity) do not pay moderators.\\n\\nShe's gonna lose and, hopefully, she's going to have to pay THEIR legal fee's.  No excuse for being ignorant of history.\", 'labels': [[126, 131, 'Toxic'], [259, 297, 'Toxic']]}\n","{'id': 258, 'text': 'Glad they are safe but....IDIOTS!  The money, time and resources the last 5 years to rescue them from their terrible  decision to BACKPACK through terrorist lands! With a newborn!', 'labels': [[26, 31, 'Toxic']]}\n","{'id': 259, 'text': 'Trump, the malignant narcissist and mentally warped sociopath, is the ultimate insult to this country.', 'labels': [[0, 60, 'Toxic']]}\n","{'id': 260, 'text': 'Why even bother to give this woman a time of day. Bury her in the cotton field where she belong.', 'labels': [[50, 53, 'Toxic']]}\n","{'id': 261, 'text': 'We are indeed governed by an Idiot, but a hug and selfie will make it all better.', 'labels': [[29, 33, 'Toxic']]}\n","{'id': 262, 'text': \"Yes a law that is never imposed, I bet it's still on the books that you have to have a sponsor to even get into the US, those laws stopped being enforced when the democrats realized they need warm ignorant leaches they could lead to the voting booth with a welfare check, because their policy of abortion was killing off all their voters!\", 'labels': [[197, 212, 'Toxic']]}\n","{'id': 263, 'text': 'Oh, you again. You may not be a Russian troll but you certainly fit the profile.', 'labels': [[40, 44, 'Toxic']]}\n","{'id': 264, 'text': 'wow you truly are a nut job left wing idiot. the oil sands are own by consordiums from all over the world idiot.. they provide huge high paying jobs, profits for pension plans, taxes for government, man you really need serious help for your stupidity', 'labels': [[28, 42, 'Toxic'], [241, 249, 'Toxic']]}\n","{'id': 265, 'text': 'Would you say that if their name was \"The Pusssy Grabbers?', 'labels': [[42, 56, 'Toxic']]}\n","{'id': 266, 'text': \"How the hell is this news?  Am I supposed to be shocked that the Crown Prince of Bahrain or one of the world's biggest celebrity superstars get's better access to the State Department then I do?  During which administration has this ever not been true?  \\n\\nThe media's desperation to keep this election close is far past ridiculous.\", 'labels': [[173, 182, 'Toxic']]}\n","{'id': 267, 'text': \"creating additional taxes that removes money from the local economy and given to the highly inefficient government to spend.... NOW THAT'S A FOOLS ERRAND\", 'labels': [[141, 145, 'Toxic']]}\n","{'id': 268, 'text': 'Trudeau is a fool - his incompetence exceeded only by the imbeciles who voted for him.', 'labels': [[24, 44, 'Toxic']]}\n","{'id': 269, 'text': \"You're a paid Russian troll, right?  You can't be THAT stupid.  You are using your own premise to prove yourself wrong.\", 'labels': [[55, 60, 'Toxic']]}\n","{'id': 270, 'text': 'Well, but that is a most valid point for guestsquared to bring up about you.   You were all on the bandwagon to engage in a witch hunt against this man, all based on an allegation of a sole person, without any collaborating evidence of any kind.   \\n\\nYou would have most definitely fit in very well in Salem, Massachusetts back in 1692.   You would have been among the throngs yelling \"Hang the witch\".\\n\\nFace it.   There was not enough evidence for an arrest to have ever been made.   \\n\\nAnd the judge did not make any ruling on this case, as you so falsely state here.    It was the DA herself, who requested that the case be dismissed.   The judge simply granted her request.   So even the District Attorney\\'s office believes that the charges are not believable.\\n\\nSo why don\\'t you?   Answer:  You are a racist.\\n.', 'labels': [[385, 398, 'Toxic'], [793, 808, 'Toxic']]}\n","{'id': 271, 'text': 'Can we all just band together and exit these ISIS idiots from the Earth once and for all?  This shit is getting old fast...', 'labels': [[50, 55, 'Toxic'], [96, 99, 'Toxic']]}\n","{'id': 272, 'text': 'Poor poor pitiful Popo. Does everybody hate yo ugly black Ahole? Serves you right. Never never ever disrespect our American flag, our National Anthem, our cops, the Constitution, our military members, and our Law and Order. Now watch how the owners will stop renewing contracts for those who did the same thing you did. I just love how people like you fall from grace by your stupidity. Just like that other Popo who clocked his drunk wife in the elevator which just happened to have video camera. He still can\\'t get a job either. I don\\'t think anybody wanted to hire those two schumucks who fisted the Mexico Olympics on live camera. Trump was right, \"You\\'re FIRED!\"', 'labels': [[18, 21, 'Toxic'], [52, 62, 'Toxic'], [376, 384, 'Toxic'], [408, 411, 'Toxic'], [429, 433, 'Toxic'], [578, 586, 'Toxic'], [654, 664, 'Toxic']]}\n","{'id': 273, 'text': \"Only an imbecile would think that the Chump is not a pathological liar. He has a history of lying his entire life. He is seventy years old and he ain't going to stop his lying ways. What I can't figure out is why the people who are supposed to be keeping him in check can't. His cabinet, staff and the republican majority of congress need to step up to the plate and do their jobs. Right now they're empowering the dummy to continue lying because they find all kinds of stoopid excuses to back him up.\", 'labels': [[8, 15, 'Toxic']]}\n","{'id': 274, 'text': \"He'll will still lie though; that's about the only thing that's been consistent with this *****grabbin liar..........and it'll will be bigly enough, if not huuuuuge, and the best ever, for the 39%,   aloha\", 'labels': [[95, 106, 'Toxic']]}\n","{'id': 275, 'text': 'As opposed to the \"dumb meter\"?', 'labels': [[19, 22, 'Toxic']]}\n","{'id': 276, 'text': 'Well, Canada certainly wasn\\'t at \"its best\" when Justy recently \"fully supported\" the US Groper-elect\\'s war crimes.\\n\\nhttp://www.huffingtonpost.com/entry/donald-trumps-war-crimes_us_58e7a2fae4b06f8c18beeaf9\\n\\nSo, if that\\'s one\\'s starting point....\\n\\nCan we trust a moron ?', 'labels': [[262, 266, 'Toxic']]}\n","{'id': 277, 'text': 'Whomever this moron is, he should be impeached for being stupid!', 'labels': [[14, 18, 'Toxic'], [57, 62, 'Toxic']]}\n","{'id': 278, 'text': \"Soon idiots will be charge $9 per month to lob their backwards opinions.  Wonder if you'll be among that crowd.  Heh, heh, heh.\", 'labels': [[5, 10, 'Toxic']]}\n","{'id': 279, 'text': \"It's as if Liberals don't like jokes, or think that other Liberals are stupid enough to fall for an obvious one...\", 'labels': [[58, 65, 'Toxic'], [71, 76, 'Toxic']]}\n","{'id': 280, 'text': 'The dispensary  model has been a disaster thus far.  Frequent holdups, adulterated product, and no thought to opening in a suitable location.\\n\\nThe plan for dedicated stores rather than using the LCBO is, like, stupid, but I have more faith in government to do this properly than I do the private sector.', 'labels': [[210, 215, 'Toxic']]}\n","{'id': 281, 'text': \"Some people just need to chill out. Why bring up something that happened years ago? Because of what's going on today you idiots want to dissect on what happened in the past? You idiots are reaching and I mean reaching for something that means nothing. If Janet was a white woman and her right breast was revealed nothing would change. The press would write up the same thing. There are some idiots that still need to evolve.\", 'labels': [[121, 126, 'Toxic'], [178, 183, 'Toxic'], [391, 396, 'Toxic']]}\n","{'id': 282, 'text': \"talk about cherry picking, and I would suggest if Habberstad thinks demanding an 18% increase is fair and reasonable he's either high on crack or born stupid,\", 'labels': [[117, 156, 'Toxic']]}\n","{'id': 283, 'text': \"Hypocrite, much? Just like the weasel you voted for, I see. He lied about how he'd return power to the people and you fell for it. \\nTrump Bunnies are easily conned.\", 'labels': [[0, 8, 'Toxic']]}\n","{'id': 284, 'text': 'KON:  \"Foolish \\n[ˈfo͞oliSH]\\nADJECTIVE\\n(of a person or action) lacking good sense or judgment; unwise:  P\\n\"it was foolish of you to enter into correspondence\"\\ni. e. A Trump supporter. \\nsynonyms: stupid · silly · idiotic · witless · brainless · vacuous · [more]\"\\n\\nNothing I ever do will come close to the idiocy of voting for and/or supporting Trump.', 'labels': [[7, 13, 'Toxic'], [211, 217, 'Toxic']]}\n","{'id': 285, 'text': \"The scumbags opposing Trump have made a grave miscalculation with this particular stratagem.  If real people did leak Trump's (perfectly legitimate) choice, there are only so many who it could be.  Hopefully they will be identified and charged.\\n\\nMeanwhile, the blowhard idiots trying to make this look bad on Trump are revealed as utterly spiteful and destructive.\", 'labels': [[4, 11, 'Toxic'], [270, 275, 'Toxic']]}\n","{'id': 286, 'text': \"Another brilliant lefty who has chosen to ruin his life for a petty political prank.\\n\\nWhat are these knuckleheads learning in school?  It certainly isn't common sense.\", 'labels': [[62, 66, 'Toxic'], [135, 159, 'Toxic']]}\n","{'id': 287, 'text': \"Agreed, journalists should ignore the Trump's idiotic tweets. After all, they are just bones tossed to his followers.\\n\\nStephen J. Remington\", 'labels': [[46, 52, 'Toxic']]}\n","{'id': 288, 'text': 'Trump i a haitual lw breaker.\\nHe i a legally doumented racist.\\nOf course his entire Adminstration will have mudon their records.', 'labels': [[55, 60, 'Toxic']]}\n","{'id': 289, 'text': \"Ramaphoza has the same leadership style as Marthinus van Schalkwyk... about as impressive as the leadership skills of a sheep ewe. Quite pathetic really... if you can't even call the Guptas by their name.\", 'labels': [[137, 144, 'Toxic']]}\n","{'id': 290, 'text': 'Day after day, stupid move after stupid move, Trump steadily burns his political capital.  While his ardent supporters will probably never waiver, the very large proportion of Americans who wanted change and so held their noses and voted for Trump, are fast becoming gobsmacked at what they have elected.  \\n\\nAll pretense and all hope of Trump suddenly becoming \"presidential\" once in the White House, is washed away.  Americans are left with an imbecilic, bombastic, blowhard bully - a fool - for their president.   This isn\\'t going to end well for Trump or for the USA.', 'labels': [[15, 20, 'Toxic']]}\n","{'id': 291, 'text': \"why doesn't that asshole mccain just crawl off in the sewer he resides in and just pass on for the good of the world.\", 'labels': [[17, 23, 'Toxic']]}\n","{'id': 292, 'text': 'self deportation...MANY OF US have been preaching this for YEARS....time for everyday people to run this damn country.', 'labels': [[105, 116, 'Toxic']]}\n","{'id': 293, 'text': 'Criticise all you want, these idiots are good little stooges for the system, making their payments every month, driving to work in their behemoths so that they can pay to drive to work, and they can think they are really big, male, manly men that twice a day. The rest of the time, not so much.', 'labels': [[30, 35, 'Toxic']]}\n","{'id': 294, 'text': 'What part of public land do idiots like you not understand?', 'labels': [[28, 33, 'Toxic']]}\n","{'id': 295, 'text': 'No wonder, Tillerson calls Trump a moron', 'labels': [[11, 19, 'Toxic'], [35, 39, 'Toxic']]}\n","{'id': 296, 'text': 'So when someone has the ability to save some ones life they should just choose not to because they used a drug? What if someone accidently took too many prescribed meds yet the person who could save them assumed it was a heroin overdose and just said nah they deserve to not be saved....you are a shi*ty human being.', 'labels': [[297, 302, 'Toxic']]}\n","{'id': 297, 'text': 'The idiot makes a positive statement and then refutes it in the same paragraph.', 'labels': [[4, 8, 'Toxic']]}\n","{'id': 298, 'text': \"Can't argue with stuck on stupid. You cling to your opinion, I will cling to mine.\", 'labels': [[26, 31, 'Toxic']]}\n","{'id': 299, 'text': \"The idiot in chief can't speak for sh!t 😜👎\", 'labels': [[4, 8, 'Toxic'], [35, 38, 'Toxic']]}\n","{'id': 300, 'text': \"It's just a stupid motion. It's not a law. Why the bickering?\", 'labels': [[12, 17, 'Toxic']]}\n","{'id': 301, 'text': '\"Radical Islam monopoly at the UN\". You mean New Zealand, France, the UK, Spain, right? God, you are so dumb.', 'labels': [[104, 107, 'Toxic']]}\n","{'id': 302, 'text': \"The Mat Valley already has sales taxes. Has for years.  Now they want a bigger sales tax to fund education? Whatever happened to the right wing battle cry of why should I have to pay for something I don't use?  \\nYou can't fix stupid.\", 'labels': [[226, 231, 'Toxic']]}\n","{'id': 303, 'text': 'your typical of liberal dumb, no loser we didnt know the deficit would be pushing 30 bil a year,, what happened to deficits bad when harper had them? oh right, liberal spending good, what hypocrites..', 'labels': [[24, 27, 'Toxic'], [33, 37, 'Toxic'], [188, 197, 'Toxic']]}\n","{'id': 304, 'text': \"Apparently Nichols doesn't know that Texas is a capital punishment state.  Wonder why he chose Texas.  Stupid.\", 'labels': [[103, 108, 'Toxic']]}\n","{'id': 305, 'text': \"No, not in Chugiak silly. That's only an average of 10 per state. Doesn't seem unreasonable.\", 'labels': [[11, 17, 'Toxic']]}\n","{'id': 306, 'text': \"Not really.  Just ignore this repulsive reprobate.  The Last Honest Conservative's every post makes it clear that he is neither last nor honest nor conservative but is instead an obsessed sufferer of Harper Derangement Syndrome and a tiresome and tedious troll and tougher for Trudeau.\\n\\nNow with Harper withdrawing gracefully from public life, this poor HDS sufferer must find another conservative villain on which to vent his sick spleen.\\nTrump is the obvious default target choice for him.\\n\\nDon't feed the trolls is the best way to handle HDS sufferers like this one.\", 'labels': [[30, 38, 'Toxic'], [255, 259, 'Toxic']]}\n","{'id': 307, 'text': 'This stupid so-called \"president\" even bungled what should have been a cake walk and bog standard political stance: denouncing Nazis. \\n\\n\\nI guess he keeps revealing just who and what he is. \\n\\n\\nThis is the fork in the road, GOP. You either stand with this racist idiot and his basket of deplorables, or you stand with America.', 'labels': [[5, 20, 'Toxic'], [127, 131, 'Toxic'], [254, 265, 'Toxic']]}\n","{'id': 308, 'text': 'Yes,absolutely deport Trump! Keep the Trash coming.', 'labels': [[15, 20, 'Toxic'], [38, 42, 'Toxic']]}\n","{'id': 309, 'text': '\"And no inmate died on his watch\".\\n\\nI just corrected the record Olrun. I have no bias, no agenda. And you have no cause to throw your knee out with a jerk reaction completly berift of criticl thinking.', 'labels': [[150, 153, 'Toxic']]}\n","{'id': 310, 'text': 'Fish:  Yes, GAY MONEY used...............................', 'labels': [[12, 14, 'Toxic']]}\n","{'id': 311, 'text': '\" “morals have flown out the window”  has he forgotten \"grab em by the ....., and the rest.  He has a lot of nerve, or is just stupid.', 'labels': [[127, 132, 'Toxic']]}\n","{'id': 312, 'text': 'That might be true but I keep remembering the stupid lady who put scalding hot coffee between her legs :) :) :)', 'labels': [[46, 51, 'Toxic']]}\n","{'id': 313, 'text': 'Cap and Trade is a (corrupt) shell game designed to allow politicians to escape real scrutiny of results. There is no simple, honest, straightforward measure that tells you it is succeeding or failing in its murky and vague objectives; it is always full of uncertainties and unreliable assumptions. There is alway plenty of room for rhetoric to make it entirely opaque and we see that with the BS coming from ministers trying to explain it in this column and elsewhere. This is one of those times when I feel like I am from the stupid province and that the West got it right (outside of dumb old Saskatchewan with its \"Wall\" against progress) with straightforward taxes (who can try to manipulate that, but you will be decisively found out). Picking such an impenetrable method of government involvement in promoting solutions to climate change is one HUGE reason to distrust Wynne and is indicative of her manipulative nature.', 'labels': [[528, 533, 'Toxic']]}\n","{'id': 314, 'text': 'When is someone or something going to take these old rascist white men and drive a stake through their hearts and end this madness? Bring it on, white idiots, I can see the packs forming already. Takes me back to the good old days in Munich...', 'labels': [[145, 156, 'Toxic']]}\n","{'id': 315, 'text': 'ignorant liberal sheep like you are the fools of today, living in this hate driven lunacy ,, you are the problem in society , not trump', 'labels': [[0, 7, 'Toxic']]}\n","{'id': 316, 'text': '\"preventive maintenance\"?  Hey, Pocho, you getting your car fixed?  \"kono go see\".  It\\'s so charming when you try to throw in a little pidgin to hide how stupid you really are.', 'labels': [[154, 159, 'Toxic']]}\n","{'id': 317, 'text': '\"The photo of U.S. President Donald Trump and British Prime Minister Theresa May briefly holding hands as they strolled along the White House colonnade a week ago absolutely delighted the Brexiteers.\"\\n\\nIt must have made Theresa May\\'s (and every other Woman on the planet) skin crawl to have a sex predator hold her hand like that.  I guess in Politics you have to do what you have to do.', 'labels': [[293, 304, 'Toxic']]}\n","{'id': 318, 'text': \"This article is pure delusion, pure distortion, and a big fat lie, to boot.  Saunders and The Globe haven't caught up with the rest of us who already know what's going on in Europe.  We read German news and have a huge pool of online information available to us so that we can get the straight goods and make up our own minds about what is actually happening.  None of this information is hard to find.  Too bad I can't share any of it, due to  the Globe's tendency to censor difficult truths. \\nBut really folks, if you believe what Saunders is writing, you are being played for fools.\", 'labels': [[36, 45, 'Toxic']]}\n","{'id': 319, 'text': 'Rick:  I just posted numerous questions about YOU and YOUR sister, and YOU Flagged them.  So, YOU are a LIAR about the open book.', 'labels': [[104, 107, 'Toxic']]}\n","{'id': 320, 'text': 'Holy crap, this is what ADN finds news worthy? One goes on vacation and another complains about Facebook posts?', 'labels': [[5, 8, 'Toxic']]}\n","{'id': 321, 'text': \"Now! Now!  He isn't really a 'criminal' until he is found guilty.  He is just a naked idiot with a bullet hole in his body.\", 'labels': [[80, 90, 'Toxic']]}\n","{'id': 322, 'text': 'All the posters who said the DP (and the rest of the \"MSM\") was ignoring this story, please raise your hands.\\n\\nShe needs to resign for just being stupid.', 'labels': [[146, 151, 'Toxic']]}\n","{'id': 323, 'text': \"That's hilarious.  You object to the phrase Pussy Grabber?  But it's perfectly okay to say 'grab them by the pussy?'\", 'labels': [[109, 113, 'Toxic']]}\n","{'id': 324, 'text': 'He\\'s a complete a total hypocrite.  He writes an article about Trump making a claim with no proof that was parroted by \"fake news\" sites.  When it\\'s brought to his attention that the mainstream media does the exact same thing and did it throughout the entire election, he just shrugs his shoulders and says \"meh.\"  There is a difference, but not one he can define and quantify.  He cites the SPJ code of ethics but then we demonstrate the establishment media doesn\\'t even meet that criteria and he of course has no response.\\nReal journalists, like Green Greenwald, have tirelessly exposed this media narrative time and again.  If only we had real journalists at Civil Beat.  Pierre should get rid of it and just make an Intercept Hawaii bureau with real journalist.\\n\\n\"Those who most loudly denounce Fake News are typically those most aggressively disseminating it.\"\\n\\nhttps://theintercept.com/2016/12/09/a-clinton-fan-manufactured-fake-news-that-msnbc-personalities-spread-to-discredit-wikileaks-docs/', 'labels': [[24, 32, 'Toxic']]}\n","{'id': 325, 'text': \"Mission accomplished: bring people back to nature with all it's risks and deceases.\\nAnd the most fun and educational part for kids is the killing of Suzy Chicken for Sunday's dinner.\\nBack to nature indeed. The left's stupidity knows no boundaries.\", 'labels': [[210, 215, 'Toxic'], [217, 225, 'Toxic']]}\n","{'id': 326, 'text': 'Big business over the little guy. Get the escapement goal first, then let commercial guys fishing 24/7. Our state is run by idiots.', 'labels': [[124, 129, 'Toxic']]}\n","{'id': 327, 'text': 'your posts are like litter on the street. unavoidable.', 'labels': [[20, 25, 'Toxic']]}\n","{'id': 328, 'text': 'He does care, but we have to care about HIM. As for intervening, we thought and demanded a human ruler and to rule and answer to ourselves instead of listening and answering to Him, so we see that major malfunction of an experiment gone wrong of self rule. Bunch of idiots chasing their ignorant tails.', 'labels': [[266, 271, 'Toxic'], [287, 294, 'Toxic']]}\n","{'id': 329, 'text': 'Fuck you, frog.', 'labels': [[0, 7, 'Toxic']]}\n","{'id': 330, 'text': 'The pathetic editorialists at the G&M must be foaming at the mouth in anger at this sudden turn of events. After their craven support of Housing Bubble Christy at the expense of housing affordability in BC (and by extension, Canada), the G&M has essentially declared itself an enemy of the Canadian middle class. Let\\'s hope the housing bubble will pop now that Crooked Christy will be cast off to ignominious exile in the hinterlands of Canadian politics.\\n\\nYou lost, G&M Thompson stooges! And yes, that\\'s millions of us mocking you yet again (see previous G&M editorial supporting \"Cons sans Harper\" in fall 2015). #fail #legacymediaisdying', 'labels': [[4, 11, 'Toxic'], [480, 486, 'Toxic']]}\n","{'id': 331, 'text': 'Because they suffer from low IQ.', 'labels': [[25, 30, 'Toxic']]}\n","{'id': 332, 'text': 'It’s okay to be stupid going through life. There’s nothing wrong with that. I’d say more than 70% of USA population is pretty dumb.', 'labels': [[16, 21, 'Toxic'], [126, 129, 'Toxic']]}\n","{'id': 333, 'text': 'Idiotic remark, les.', 'labels': [[0, 6, 'Toxic']]}\n","{'id': 334, 'text': \"Alaskan.  Because they're bleeping stupid.  All they know how to do is text.\", 'labels': [[35, 40, 'Toxic']]}\n","{'id': 335, 'text': 'The only ones who favor this are educated morons who have never ran a business in their life, have absolutely no idea what it takes to make payroll much less create jobs, because the only thing they have ever ran is their mouth and frankly they suck at that too. Unions are the ones backing this profound stupidity as they are masters at killing business and jobs while bankrupting communities. They are bound and determined to return Oregon to the days we were known as Tax He11, USA and were in recession year after year running high unemployment.', 'labels': [[42, 47, 'Toxic'], [245, 248, 'Toxic'], [305, 313, 'Toxic']]}\n","{'id': 336, 'text': \"I don't know if it's advertising, but it is an immensely stupid article.\", 'labels': [[57, 62, 'Toxic']]}\n","{'id': 337, 'text': \"Damn - I thought you had to be able to read to be a Coast Guard officer!  Guess I was wrong.  I guess the eagle didn't like the smell of San Francisco - grin.\", 'labels': [[0, 3, 'Toxic']]}\n","{'id': 338, 'text': \"He's the KING! The LYING KING! And he WILL NOT be crossed! \\n\\nWhat a fool! The sad thing is that our president is a 15 year old brat in a fat, old haggard man body.\", 'labels': [[15, 28, 'Toxic']]}\n","{'id': 339, 'text': 'Phil Fontaine said the years e spent at a res school were some of the best times of his life. Is he  insane?', 'labels': [[101, 106, 'Toxic']]}\n","{'id': 340, 'text': 'Hurray for your Pussy Grabber in Chief! Go grab them pussies Putrumpski! Amirite?', 'labels': [[16, 24, 'Toxic'], [53, 59, 'Toxic']]}\n","{'id': 341, 'text': 'Like Anthony wiener the pedophile democrat? The one who repeatedly sends pics of his junk. That sick twisted useless waste of skin. Yes that textualist!!!', 'labels': [[24, 32, 'Toxic'], [91, 129, 'Toxic']]}\n","{'id': 342, 'text': '40 bitches?  These people have no ethics.', 'labels': [[3, 9, 'Toxic'], [31, 38, 'Toxic']]}\n","{'id': 343, 'text': 'Can you understand that some may consider your attitude ignorant and thuggish, Brian? Whe should members of the media be accustomed to having their \"butt kicked\"?', 'labels': [[149, 159, 'Toxic']]}\n","{'id': 344, 'text': 'America is Dying:  I share your frustration, anger, disappointment, of the powers to be who make these IGNORANT,  wasteful spending decisions on JUNK.  \\n\\nA piece of metal with a red light to PROMOTE PROSTITUTION????    Fix the horrific problems that are present first.  (Homelessness , Drug use, Crime, Mental Health).  Then, maybe a  artsie thing or whatever you call that junk.', 'labels': [[103, 110, 'Toxic']]}\n","{'id': 345, 'text': 'Yo McMaverick.\\n\\nYou lost.\\n\\nTrump won.\\n\\nI get that the people of Arizona are particularly stupid, but you are nothing but a Senator assclown. Leave the presidenting to the President.', 'labels': [[89, 94, 'Toxic']]}\n","{'id': 346, 'text': \"You don't get hooked to weed you moron. Learn some facts before your ignorance spews out of that hole you call a mouth. 40 bucks worth of marijuana lasts me a half year.\", 'labels': [[33, 37, 'Toxic'], [69, 77, 'Toxic'], [138, 146, 'Toxic']]}\n","{'id': 347, 'text': '\"At the same time that we are a civilized society we are also a rational society. \"\\n\\nHave you seen what third wave feminism looks like in practice? \\n\\nIt is anything but rational. It is laughable to refer to ourselves as civilized, and ludicrous to consider ourselves rational. There is an irrationality that is sweeping across North American society in the US. Google Yale Halloween costume fiasco. Comedians avoid univeristies because of the PC culture that is spreading like a cancer.', 'labels': [[185, 193, 'Toxic'], [235, 243, 'Toxic']]}\n","{'id': 348, 'text': 'Rex Murphy \\n\\nWhy not kill the damn beast for good', 'labels': [[30, 39, 'Toxic']]}\n","{'id': 349, 'text': '\"MY GUN MATTERS\" - Bang Bang thug, you\\'re dead!', 'labels': [[35, 45, 'Toxic']]}\n","{'id': 350, 'text': 'a lot of commentors need a punch in the face', 'labels': [[27, 43, 'Toxic']]}\n","{'id': 351, 'text': \"I think Spen is disappointed they didn't kill the guy, frankly I am too. \\nAnother loser thug. Bet the passengers had illegal goods on them as well. I'm sorry the dog died in the line of duty. So much love and training goes into trainin these dogs and they are like family to the officer. I'm sorry for the officer's loss of his beloved dog.\", 'labels': [[16, 27, 'Toxic']]}\n","{'id': 352, 'text': \"Is he on heroin or just really stupid? The person who called the police is a heroine unless she's a guy then he's a hero. Gender identity politics can get really confusing.\", 'labels': [[25, 33, 'Toxic']]}\n","{'id': 353, 'text': 'The survey was stupid and a waste of time much like the Trudeau Liberals.', 'labels': [[15, 20, 'Toxic'], [56, 70, 'Toxic']]}\n","{'id': 354, 'text': 'Are you kidding?  Comey showed what we already knew.  Trump is a narcissist and a liar.', 'labels': [[8, 14, 'Toxic'], [54, 58, 'Toxic'], [65, 74, 'Toxic'], [82, 85, 'Toxic']]}\n","{'id': 355, 'text': \"Bunch of clowns!  SA, cover our local politicians more!  Enough of Trump; focus on what's happening here like this idiotic bill.\", 'labels': [[0, 14, 'Toxic']]}\n","{'id': 356, 'text': 'This is some bullshit ass \"journalism\" making up a story about something that isn\\'t even happening. I got to a lot shows, sometimes 2 a week and I have yet to see any nazi bands play anywhere. All I see is a bunch of hearsay and accusations based on distorted facts. It\\'s no wonder people don\\'t trust the media any more.', 'labels': [[13, 20, 'Toxic'], [167, 170, 'Toxic']]}\n","{'id': 357, 'text': 'Censoring curse words when quoting speech by printing things like \"bull----\" is stupid. Everyone reads \"bull----\" as \"bullshit.\" If you were truly concerned about offending readers, you would say something like \"called one person\\'s testimony a bad word.\" Other countries don\\'t sensor curse words (when quoting speech) why is it that we do? I\\'ll say it again. It\\'s stupid, and it demeans the reader.', 'labels': [[80, 85, 'Toxic'], [118, 125, 'Toxic']]}\n","{'id': 358, 'text': 'Now, Lisa, you have your earmark. Vote for the stupid thing already.', 'labels': [[47, 52, 'Toxic']]}\n","{'id': 359, 'text': 'Hey Les, among the things I dislike - no, make that despise - are hypocrits, opportunists, bigots and bullies.  In other words, Trump and his supporters.  And no, I\\'m not in need of \"free stuff.\"  My educational and income levels are probably above yours - putting me well into the Hillary demographic.  Think about it.', 'labels': [[66, 74, 'Toxic'], [77, 88, 'Toxic'], [91, 96, 'Toxic'], [102, 108, 'Toxic']]}\n","{'id': 360, 'text': 'You sound like the Idiot.', 'labels': [[19, 23, 'Toxic']]}\n","{'id': 361, 'text': \"Yes, but isn't it ironic how the Red farm states have embraced this socialistic BIG government program?\\n\\nEven Joe Miller took farm subsidies in Kansas.\\n\\nHypocrites!\", 'labels': [[153, 162, 'Toxic']]}\n","{'id': 362, 'text': 'Troll.', 'labels': [[0, 4, 'Toxic']]}\n","{'id': 363, 'text': \"That you're an idiot? Got that right.\", 'labels': [[15, 19, 'Toxic']]}\n","{'id': 364, 'text': \"For the purposes of testing, here's my contribution:\\n\\nlol wut wat a bunch of bullshit\\n\\nthe author is a delusional stupid jerk full of crap\\n\\n(I just can't bring myself to use stronger profanity and personal attacks.)\", 'labels': [[114, 119, 'Toxic']]}\n","{'id': 365, 'text': '\"Her “husband” raped many women: ask them.\" This trash is worthy of a flag.', 'labels': [[7, 12, 'Toxic'], [70, 73, 'Toxic']]}\n","{'id': 366, 'text': 'The globalist forced diversity at work...with taxpayer money. When will this Marxist shit end?', 'labels': [[85, 88, 'Toxic']]}\n","{'id': 367, 'text': \"Wow, the Herald is just full of humorous articles today.Earlier this year, Danny Westneat of the Times took a similar tack by making essentially the same points - here's a formerly Democrat county in a totally Blue state that voted for Trump because they thought he would help and now they're all disappointed he supposedly isn't.  And, of course, the moral of the story is twofold...voters are dumb and DON'T YOU DARE VOTE REPUBLICAN!!! Apparently both Westneat and this reporter think they're clever or something which simply is not the case.Both reporters glide past the fact that, in Washington state, it made not a whit of difference how Grays Harbor voted because Trump was never gonna win the state anyways.  They may have voted for Trump but they certainly didn't elect him.Even better, they also make no mention of the fact Grays Harbor has been miserable for decades, including the last eight years of Saint Obama.  What did Obama ever do for them except point his fingers and lecture?\", 'labels': [[855, 863, 'Toxic']]}\n","{'id': 368, 'text': 'According to the order, the US “should not admit those who engage in acts of bigotry or hatred including “honor” killings, and other forms of violence against women.”\\n\\nIn Russia, women’s safety is also under attack when the Parliament just voted 380-3 to decriminalize domestic violence in cases where the perpetrator does not cause “substantial bodily harm” and does not attack the victim more than once a year. \\n\\nDo you think this hypocrisy came up today when Trump and Putin had their phone call?', 'labels': [[433, 441, 'Toxic']]}\n","{'id': 369, 'text': \"more proof his strategy, Harper's was dumb from beginning - trying to wed big government SoCons with small government Money people. Foolish, conceited and ignorant it started with the betrayal of David Orchard and it has been downhill ever since. The first years were as good as it will ever get.\", 'labels': [[38, 41, 'Toxic']]}\n","{'id': 370, 'text': 'And you are a jerk.  Must be a Trump voter.', 'labels': [[14, 17, 'Toxic']]}\n","{'id': 371, 'text': \"Amen! If you don't want Wendy's don't go there, doesn't mean the rest of us that DO want it can't go there! I eat whatever I please and I'm never going to be fat. Stupid people...\", 'labels': [[163, 168, 'Toxic']]}\n","{'id': 372, 'text': '\"It\\'s the fact that he\\'s stupid, incurious, incompetent and a racist.\"\\n\\nI thought you were taking about Clinton and Obama since they both qualify for ALL of those statements.', 'labels': [[25, 30, 'Toxic'], [62, 67, 'Toxic']]}\n","{'id': 373, 'text': 'So a majority of Alaska taxpayers voted for Trump over the terrible Hillary, and this is supposed to make them feel \"comfortable\" ???  The UAA is just a total liar and hypocrite.', 'labels': [[159, 162, 'Toxic'], [168, 176, 'Toxic']]}\n","{'id': 374, 'text': \"Landslide? That's nonsense and you know it.\", 'labels': [[0, 41, 'Toxic']]}\n","{'id': 375, 'text': \"I can't take you even remotely seriously when you write President Obama called Congress in 2005 after Hurricane Katrina. God who writes these idiot articles. A little fact checking would help. bush was President in 2005 you examiner dumbasses.\", 'labels': [[142, 146, 'Toxic']]}\n","{'id': 376, 'text': 'you know chrsty1. You must be really stupid. You begin by saying you know \"for a fact the old woman could work circles around\" me. Then you continue by telling me that I should NOT \"regurgitate\" vomit against people I have no knowledge of or about!!!! You stupid moron you wrote exactly the kind of comment you suggested that I not write. You don\\'t know me!!! But you \"know for a fact\"\"\"\"\"yada yada yada. Moron!!!', 'labels': [[37, 42, 'Toxic'], [405, 409, 'Toxic']]}\n","{'id': 377, 'text': 'Trump owes President Obama an apology. \\nBut we all know he\\'s just going to dig himself in deeper. \\nJust as we all know his Trumperbelles are going to scream \"fakes news\" at the top of their idiotic lungs.\\nPathetic.', 'labels': [[190, 202, 'Toxic'], [205, 212, 'Toxic']]}\n","{'id': 378, 'text': 'Classic sociopath.', 'labels': [[8, 16, 'Toxic']]}\n","{'id': 379, 'text': 'Trump is about as dumb about Putrid Rasputin as he is about the environment. Yep, I despise the career criminal Hildabeast.', 'labels': [[18, 21, 'Toxic']]}\n","{'id': 380, 'text': 'Sorry to have to do this, but just to see if profanity filtering is enabled: fuck.', 'labels': [[77, 80, 'Toxic']]}\n","{'id': 381, 'text': 'lol, well what would you call him?  An effective leader who has brought back jobs?  Locked up Hillary?  Face it this loser has done very little and is a failure.  His administration is corrupt.  It is just a matter of time before they are locked up.  Come on Donald, release your taxes!', 'labels': [[117, 121, 'Toxic'], [153, 159, 'Toxic'], [185, 191, 'Toxic']]}\n","{'id': 382, 'text': 'Stole 2 million casino chips of the casino he just burned down , stupid and evil.', 'labels': [[65, 70, 'Toxic']]}\n","{'id': 383, 'text': 'allie >  CR is a what \"sagacious?\"  I thought that he was just plain \"dumb!!!!\"', 'labels': [[70, 73, 'Toxic']]}\n","{'id': 384, 'text': \".\\nThe mayor vetoed the idiocy of enacting an unconstitutional piece of lunacy. \\nThey overturned the veto.  The assembly wants this confrontation, they don't care that it's idiotic.\\n\\nThey are their own Taliban.\\n\\n(there are a few on the assembly who tried to stop the majority from being stupid, so there's no need to recall all of them, but some sure deserve recall for dereliction of duty.)\", 'labels': [[23, 28, 'Toxic'], [172, 178, 'Toxic']]}\n","{'id': 385, 'text': 'Darn. I have a great idea for a sustainable homeless shelter for this location..', 'labels': [[0, 3, 'Toxic']]}\n","{'id': 386, 'text': 'I agree. My blood pressure is up - and to read the petty comments of some does not help. These Zuptas need to f-off and leave is all alone. Hell is indeed waiting for them bastards.', 'labels': [[172, 179, 'Toxic']]}\n","{'id': 387, 'text': 'Your one sick ass, could imagine you laughing when such happens to your loved ones!', 'labels': [[9, 12, 'Toxic']]}\n","{'id': 388, 'text': '\"The cost of a cell phone bill\"..\\n\"Like your doctor/plan, keep your doctor/plan\"\\n\\n“Lack of transparency is a huge political advantage,” said Gruber. “Basically, call it the stupidity of the American voter or whatever, but basically that was really, really critical to getting the thing to pass.” \\n\\n\\nSpare me your blatant hypocrisy for once, libs.', 'labels': [[173, 181, 'Toxic']]}\n","{'id': 389, 'text': 'Ever been hosed with water in 20 degree temperatures?  Your comment is beyond idiotic and disgusting.', 'labels': [[78, 84, 'Toxic']]}\n","{'id': 390, 'text': \"So your solution is to punish those who are NOT rapists and child molesters like they ARE rapists and child molesters because you can't see any way to appropriately limit the list to such serious offenses.  Talk about stupidity.\", 'labels': [[218, 226, 'Toxic']]}\n","{'id': 391, 'text': 'Stupid decision', 'labels': [[0, 5, 'Toxic']]}\n","{'id': 392, 'text': 'over the next decades the lies and stupidity of liberal trolls like mark will grow and grow as the oil industry expands to meet the expanding world demand thus they will have no facts but only thier lies to sell for more taxation excuses...', 'labels': [[35, 43, 'Toxic']]}\n","{'id': 393, 'text': \"The difference in this controversy, diverdan, it's not your call; have you read the criteria?  Of course not, it's your word agreeing with Erin's word, disagreeing with those others who support this process as pono.  Are you saying the burial committee is ignorant of the history of Po`e Hawaii and wouldn't know a native skeleton from an asian or filipino. \\n Now that's your arrogance talking stupid!\", 'labels': [[394, 399, 'Toxic']]}\n","{'id': 394, 'text': \"I sure as hell hope he's using his own money (I know, silly comment).  Who's he challenging this for?  What's he get out of it?  Maybe if he reads this, which I doubt, he'll reply.\", 'labels': [[46, 66, 'Toxic']]}\n","{'id': 395, 'text': 'Golly Gee who give a shit, they have opened the door to all immigrants come on free money any you want.', 'labels': [[21, 24, 'Toxic']]}\n","{'id': 396, 'text': \"Pity Vegter doesn't apply the same rigour he now expects of Huff Post to his own shallow scratching in the area of fracking. What a dick.\", 'labels': [[132, 135, 'Toxic']]}\n","{'id': 397, 'text': \"Jeez, we have stupid criminals up here.  This clown, his ninja buddies, and those morons in Palmer, for example.  Did you really think you'd get away with it?  Criminals aren't known for high intelligence, but these idiots take the whole bakery.  And I don't even want to think about what kinda person kills someone else for no real reason.  At least they didn't physically harm the boy; they just gave him a lifetime of heartache.  Scumbags.\", 'labels': [[14, 19, 'Toxic'], [82, 87, 'Toxic'], [216, 221, 'Toxic']]}\n","{'id': 398, 'text': 'You are a bitter, old, morally bankrupt, traitor Senator McShame! Your ass is showing!', 'labels': [[71, 73, 'Toxic']]}\n","{'id': 399, 'text': 'Too stupid for words.  Sounds like something the \"great buffoon\" might concoct.', 'labels': [[0, 19, 'Toxic']]}\n","{'id': 400, 'text': 'Except for one thing, they are liars. They only care about being thugs.', 'labels': [[9, 16, 'Toxic']]}\n","{'id': 401, 'text': 'I have seen the estimates as high as $2 billion. Funny, though, how the press never estimates their own earnings based on their coverage of Trump, which would certainly be more than $2 billion. So it is not that they cover Trump because they like him, but because he generates revenue for them, and lots of it. Trump knows how the system works and uses it strategically to his advantage, far better than anyone ever has, yet some still think he is somehow stupid.', 'labels': [[456, 461, 'Toxic']]}\n","{'id': 402, 'text': 'it is us against them now. I get it ./ I get punished for being a working person and I have to pay for lazy parasites that get freebies.. .. you are the enemy at this point.. no more trust in government at all..', 'labels': [[108, 116, 'Toxic']]}\n","{'id': 403, 'text': 'I have a hard time believing the Liberals would be this stupid. Kill investment at the same time they are using heavy deficit spending on infrastructure to boost the economy? Combine that with competitive tax cuts very likely to occur in the US and I think the Liberals would have to be insane to do this... but then I look at Ontario and the loonie bins running that province and it seems believable.', 'labels': [[56, 61, 'Toxic']]}\n","{'id': 404, 'text': 'If he had said he wanted to destroy Israel and kill Jews to create a Palestinian state he would still have a job.', 'labels': [[47, 50, 'Toxic']]}\n","{'id': 405, 'text': \"Yeah it's stupid to have laws about stealing stuff also. I mean if thieves are going to use a gun in a robbery, who in their right mind thinks they are concerned about breaking property laws.\\n\\nPretty ignorant if you ask me.\", 'labels': [[10, 15, 'Toxic'], [200, 207, 'Toxic']]}\n","{'id': 406, 'text': 'So as suspected, the McKinsey contract was more scam than  anything else. I wonder what their profit on the 1.03 Billion actually was. Probably not much less than that figure. And then Eskom wants a tariff hike so that we can pay for the idiocy and theft.', 'labels': [[48, 51, 'Toxic'], [176, 178, 'Toxic'], [238, 243, 'Toxic']]}\n","{'id': 407, 'text': 'RE: Look Who\\'s Talk\\'n\\n\\n\"What idiot wrote this; obviously someone with no knowledge of nuclear weapons...\" -- Joseph Sobecki\\n\\nWhy don\\'t you read One Second After. Get a \\'clue\\' on what to expect from a year without electricity. How do you expect to get oil pumped from the ground and refined into fuels without electricity. Let alone to farmers to grow crops with equipment that doesn\\'t work anymore. Or transport what little they can grow—for themselves—to cities.\\n\\nCities have only one weeks supply of food: household pantries, supermarkets and warehouses. After that, starvation sets in. Then cannibalism....\\n\\nEnjoy.... 😉', 'labels': [[29, 33, 'Toxic']]}\n","{'id': 408, 'text': 'Sadly, Kushner might be right.  In the June 2016 meeting with Veselnitskaya and Kaveladze, the Russians wanted to discuss trading election dirt for future favor from Trump on rescinding the Magnitsky Act, but Don Jr. and Kushner were too dumb and impatient to comprehend what the Russians were proposing.', 'labels': [[238, 241, 'Toxic'], [280, 287, 'Toxic']]}\n","{'id': 409, 'text': 'so difi stfu, you are useless like the rest of the dimocrats', 'labels': [[18, 20, 'Toxic'], [51, 59, 'Toxic']]}\n","{'id': 410, 'text': 'fool, and you served? \\nblow your sh----\\nmilitary is the same, dummy.\\ntroll me, pay back coming.', 'labels': [[0, 3, 'Toxic']]}\n","{'id': 411, 'text': 'He shows that absolute buffoons can make a lot of money.', 'labels': [[23, 30, 'Toxic']]}\n","{'id': 412, 'text': \"Because you're  an idiot\", 'labels': [[19, 23, 'Toxic']]}\n","{'id': 413, 'text': \"Look dummy, its not about keeping ridiculous agreements, where we, we we alone, carry the burden.   Trump wanted to re-negotiate, they refused , so he got US out.  I'll wager they come running back to table, begging for another chance.\", 'labels': [[5, 9, 'Toxic']]}\n","{'id': 414, 'text': \"Tiny digits Drumpf, Dr. Strange-glove, a satanic blustering, outrageous fabricator of  lies, blatantly untrustworthy, and the personification of the boy who called wolf,  leader of the free world (Ha!) is going to get us all killed.  It's unfortunate, because Seoul is my favourite city in the world.\", 'labels': [[72, 89, 'Toxic']]}\n","{'id': 415, 'text': 'Your comment is ridiculous.', 'labels': [[16, 25, 'Toxic']]}\n","{'id': 416, 'text': 'OMG ...  Lesson : Pence and Trump DO NOT KNOW HOW to react on response.  Idiots both.  Sorry ... but.  .... God help us all in the LARGER decisions.', 'labels': [[73, 78, 'Toxic']]}\n","{'id': 417, 'text': 'Would your family drop $200K on you if you needed it? Really, what a stupid reply.', 'labels': [[69, 74, 'Toxic']]}\n","{'id': 418, 'text': 'They should be kicked out..  Stupid people', 'labels': [[29, 34, 'Toxic']]}\n","{'id': 419, 'text': \"It's great how liberals think our own government is more evil than muslim terrorists. Go ahead, give all your jihad friends my money if it makes you feel better while sipping your wine at night.\", 'labels': [[67, 83, 'Toxic']]}\n","{'id': 420, 'text': 'Trump called neo-nazis peaceful protesters and NFL players son of a bitches that should be fired. Says all you need to know.', 'labels': [[13, 21, 'Toxic']]}\n","{'id': 421, 'text': 'You are so right because that was how his whole campaign was run: appealing to the stupidest people', 'labels': [[83, 91, 'Toxic']]}\n","{'id': 422, 'text': \"No, they aren't harmless idiots, ...they're sexual predators.  \\n\\nYou can't defend them or make apologies for them,  nor can you make excuses for them.\", 'labels': [[25, 30, 'Toxic']]}\n","{'id': 423, 'text': 'Trump is a pu*ssy', 'labels': [[11, 16, 'Toxic']]}\n","{'id': 424, 'text': 'This is what Trump needs to do, ignore the Libs, & proceed to fulfill his promises he made during his campaign, this is why he was elected. Enough dealing with the fake news. Takes up to much time & money, just a waste to deal with.\\nTime for Republicans to step forward & over ride out these idiots.', 'labels': [[292, 297, 'Toxic']]}\n","{'id': 425, 'text': \"That's too stupid to be funny.\", 'labels': [[11, 16, 'Toxic']]}\n","{'id': 426, 'text': 'Idiots on both sides and the rest of us are at risk.', 'labels': [[0, 5, 'Toxic']]}\n","{'id': 427, 'text': 'Yeah, and your fifteen minutes of fame is over, nitwit!', 'labels': [[48, 53, 'Toxic']]}\n","{'id': 428, 'text': 'The political left - and the MSM - have no faith in Trump at all, but then they never did.\\n\\nI don\\'t believe that the people who voted Trump into office are unhappy with him in the least.\\n\\nBut the political left has been sidelined - crying & stamping their little feet in impotent rage - nothing more than \"special snowflakes\", melting in the sun...\\n\\nSuck it up and deal with it.\\n\\nOr not.', 'labels': [[350, 353, 'Toxic']]}\n","{'id': 429, 'text': 'Yes, but the government does have the right to shield the taxpayers from having to bear the cost of rescuing the stupid ones at Arctic Man!', 'labels': [[113, 118, 'Toxic'], [128, 137, 'Toxic']]}\n","{'id': 430, 'text': 'Yes, the G&M censorship system is the worst, plain stupid one.', 'labels': [[51, 56, 'Toxic']]}\n","{'id': 431, 'text': 'Stealing is what  you do best.', 'labels': [[0, 7, 'Toxic']]}\n","{'id': 432, 'text': '\"It is a tale told by an idiot, full of sound and fury signifying nothing.:...Shakespeare, W.', 'labels': [[25, 29, 'Toxic']]}\n","{'id': 433, 'text': 'What a dumb idea.  If you are going to feed them anything, feed them rat poison.  [rolls eyes]', 'labels': [[7, 10, 'Toxic']]}\n","{'id': 434, 'text': 'Since she is a known pathological liar, only a idiot would believe any thing that spews from her lying pie hole.', 'labels': [[47, 51, 'Toxic']]}\n","{'id': 435, 'text': 'So much arrogant ignorance in so few words. \\nThis might be a record.', 'labels': [[8, 25, 'Toxic']]}\n","{'id': 436, 'text': 'soros like you is an idiot, the answer is its already proven wrong cause the markets are now soaring cause of his election', 'labels': [[21, 25, 'Toxic']]}\n","{'id': 437, 'text': 'damn straight, one of the things that makes the USA GREAT ... !!!', 'labels': [[0, 12, 'Toxic']]}\n","{'id': 438, 'text': 'The Russians clearly \"hacked\" the elections, by doing the job the media used to do. (and still does when it comes to Republicans)\\n\\nThe rooskies, in fact, were so clever, they hacked the election in order to give Clinton a 2 million vote win...\\n\\nDamn rooskies.', 'labels': [[245, 257, 'Toxic']]}\n","{'id': 439, 'text': \"Karma's a bitch...\", 'labels': [[10, 14, 'Toxic']]}\n","{'id': 440, 'text': \"It's not libel if there's evidence; nor is it an ad hominem when the crux of the argument is their idiocy.\", 'labels': [[99, 104, 'Toxic']]}\n","{'id': 441, 'text': \"Her message was drowned by that eye sore. The reason she would wear a monstrosity like that? So you wouldn't notice how stupid she sounds.\", 'labels': [[120, 125, 'Toxic']]}\n","{'id': 442, 'text': 'Human life exists in the womb that if not terminated produces a scientist, a civil rights leader, a cure or treatment  finder like a Banting,  or a PM  like Trudeau or anyone else significant or otherwise. How gruesome, barbaric and and self righteous and stupid of mankind to destroy it.', 'labels': [[256, 261, 'Toxic']]}\n","{'id': 443, 'text': 'Sore-loser meltdown alert!', 'labels': [[0, 9, 'Toxic']]}\n","{'id': 444, 'text': \"Obviously my support is for the side that lost a loved one who died in service to his country and you are more concerned about defendinding the idiot in chief. As for the profanity sometimes it's the only way to get through a numbskull. All anyone with half a brain needs to do is listen to how the moron speaks and you can more or less figure out who's telling the truth. Your problem is that you're not interested in the the truth when it comes to the Chump.\", 'labels': [[144, 148, 'Toxic'], [299, 303, 'Toxic']]}\n","{'id': 445, 'text': 'Tell that to the BLM and Antifa lunatics.', 'labels': [[32, 39, 'Toxic']]}\n","{'id': 446, 'text': 'We have to ask ourselves, on Wednesday May, 10....did we really just go and give that corrupt government another four years?', 'labels': [[86, 103, 'Toxic']]}\n","{'id': 447, 'text': 'Dumb bitch on witch hunt for iron clad control of communication. Never happen.', 'labels': [[0, 9, 'Toxic']]}\n","{'id': 448, 'text': \"Here comes another con artist, scam artist, lying grifter and petty hustler.\\n\\n\\nScammers come and falsely represent themselves. \\n\\n Ain't that the truth.\\n\\n\\nFriends and family don't allow friends and family to fall for scammers.\\n\\nAnd so, by all means, be aware of, and take action to forestall the Trump scam.\", 'labels': [[31, 41, 'Toxic'], [295, 304, 'Toxic']]}\n","{'id': 449, 'text': \"There's nothing more pathetic these days than a Habs fan talking trash.\", 'labels': [[65, 69, 'Toxic']]}\n","{'id': 450, 'text': '\"At the least, Trumps were willing incompetents.\"\\n\\nQuite so.  The Russians learned how to use such incompetents quite well back in Lenin\\'s time.  In fact, Lenin himself referred to such people as \"useful idiots.\"', 'labels': [[35, 46, 'Toxic'], [204, 209, 'Toxic']]}\n","{'id': 451, 'text': 'Actually, the Ukrainian military is doing quite well when it comes to killing off the Russian invaders. More power to them.', 'labels': [[70, 76, 'Toxic']]}\n","{'id': 452, 'text': 'I am truly sorry that you have been the victim of such an ignorant person. There are plenty on both sides of the political divide but there is no excuse for what has been done to you and many others in the name of politics. I am not apologizing for the lowlife that keyed your vehicle, I am apologizing that there are some, on both sides, that feel this kind of thing is ok.', 'labels': [[58, 65, 'Toxic']]}\n","{'id': 453, 'text': 'hypocrites, since it is the left making it a show', 'labels': [[0, 9, 'Toxic']]}\n","{'id': 454, 'text': 'Morrissey may be a bit of a jerk,  but he had the nads to say what needs to be said!', 'labels': [[28, 31, 'Toxic']]}\n","{'id': 455, 'text': 'Really, JimJohnson, it\\'s the \"one reason\" Trump won?  \\nWhat you\\'re saying here is, by inviting Meryl Street to lead the march in Eugene because she identified with what she said at the Golden Globe awards about Trump publicly mocking and bullying the reporter with a disability, Karen Myers is \"playing the gender card\"? \\n\\nI can only surmise that you have some sort of problem with Streep winning the Presidential Medal of Freedom in 2014. Or maybe it\\'s that she\\'s won the most prestigious award in her professional field three times (making her one of six in Hollywood history.) \\nM a y b e the problem, for you JimJohnson, is that Streep is an overachiever and a woman. \\nMaybe YOU are playing the \"she\\'s playing the gender card\" card.  That kind of ignorance is perhaps what brought us Trump because a lot more women voted against Trump than did men. Maybe it was the stupid, small brained men who played the gender card in 2016 and helped Putin-- but screwed us.\\nM a y b e that\\'s the *one reason*.', 'labels': [[750, 758, 'Toxic'], [869, 874, 'Toxic'], [953, 959, 'Toxic']]}\n","{'id': 456, 'text': 'Margarita, You are the problem!!! You say your not a fan but vote for her anyway. Did the \"R\" in front of her name lead you astray? I voted against her but you basically cancelled out my vote even though you agreed with me. DAMN!!!!!', 'labels': [[224, 227, 'Toxic']]}\n","{'id': 457, 'text': 'You are a complete and utter idiot and I pity your spouse.', 'labels': [[10, 33, 'Toxic']]}\n","{'id': 458, 'text': 'What a misleading and idiotic headline.   The Globe tries to make the casual reader think that Canadians are so disturbed by Trump that they’re willing to give up their standard of living in order to show their opposition to his policies.   But then we find out only a small majority would be willing to support “standing up to Trump”, and only if the US started the trade war by slapping on a border tax on Canadian exports.  You can bet that that 58% would be down to 20% at the report of the first job loss attributed to it.  Only an idiot, and apparently the Globe, would take a Nik Nanos poll at face value.', 'labels': [[22, 28, 'Toxic'], [537, 541, 'Toxic']]}\n","{'id': 459, 'text': 'The woman is a traitor.', 'labels': [[15, 21, 'Toxic']]}\n","{'id': 460, 'text': \"Looks like you don't understand at all what Obama did...killing US citizens who were not even chargrd with crimes, also a lot of foreign citizens who happened to be in the wrong place.\\nI'm willing to discuss with someone who is reasonably knowledgeable, but that doesn't appear to be you.\", 'labels': [[56, 62, 'Toxic']]}\n","{'id': 461, 'text': '>>> The link was clicked twice\\n\\nIdiots.', 'labels': [[32, 37, 'Toxic']]}\n","{'id': 462, 'text': '--Everything happens for a reason.  Sometimes the reason is that you’re stupid and make bad decisions.--', 'labels': [[72, 77, 'Toxic']]}\n","{'id': 463, 'text': 'Castrate him and give him a bamboo mani-pedi.', 'labels': [[0, 7, 'Toxic']]}\n","{'id': 464, 'text': 'Disgusting attempt at trolling. Flagged.', 'labels': [[0, 38, 'Toxic']]}\n","{'id': 465, 'text': 'The Leftnut media, NYT, WaPo, CNN, MessNBC, are all liars, traitors and crooks.  They have only one agenda: hate and kill Republicans.  They have no other function in life.  Sad, pathetic, but criminally liable.  Jail them all!', 'labels': [[52, 56, 'Toxic'], [179, 186, 'Toxic']]}\n","{'id': 466, 'text': 'my god another ignorant lefty to reality,, maybe you missed the seattle report that say businesses HAVING to slash 5000 min wage jobs and hours just to keep being profitable which means they didnt close their doors, but your bs would see thousands and thousands lose jobs and companies would be closing up having no other alternative..', 'labels': [[15, 22, 'Toxic']]}\n","{'id': 467, 'text': 'Trump is another example of how no amount of money can prevent someone from being white trash.', 'labels': [[82, 92, 'Toxic']]}\n","{'id': 468, 'text': 'One thing I will say after dealing with the incompetent idiots at the borough. Actually that says it all. Pamela Ness the suppositive code enforcement officer?? Has no idea about the permit process and Or codes and building for that matter! IT needs to be fired.', 'labels': [[56, 61, 'Toxic']]}\n","{'id': 469, 'text': 'I explained exactly why you are an ignorant fool who has absolutely no idea what you are talking about. You just proved my point all the more as you are incapable of refuting anything I referenced exposing your ignorance.  talk about snarky jerks and windbags, you called out a county commissioner running your mouth like a snarky windbag jerk, pawning off pure ignorant stupidity as fact. Like a coward you will not address the facts I referenced, and as usual post something more fit for a public bathroom wall.', 'labels': [[371, 379, 'Toxic'], [397, 402, 'Toxic']]}\n","{'id': 470, 'text': 'Can you imagine if they did this in their own countries?  These idiots should have been put on a bus to the southern border or even to Canada.', 'labels': [[64, 69, 'Toxic']]}\n","{'id': 471, 'text': 'Better to keep your mouth shut and be thought a fool, than open it and be proven one.', 'labels': [[48, 51, 'Toxic']]}\n","{'id': 472, 'text': 'It\\'s not a \"great way\" in the least.  Requiring someone to live at their workplace is both laughable and ridiculous.', 'labels': [[105, 114, 'Toxic']]}\n","{'id': 473, 'text': 'They only catch the dumb ones.', 'labels': [[16, 28, 'Toxic']]}\n","{'id': 474, 'text': '\"This woman is absolutely crazy.\"\\n\\nYeah, that seemed clear just from the police report. The best case interpretation is that she was temporarily crazy, but in my experience \"temporarily\" crazy is an incredibly rare thing.', 'labels': [[26, 30, 'Toxic'], [145, 149, 'Toxic'], [187, 191, 'Toxic']]}\n","{'id': 475, 'text': \"You're the one making claims.  I called you on it.  You couldn't produce.  Just demagoguery and animus toward gay people.  You're muted.\", 'labels': [[34, 45, 'Toxic']]}\n","{'id': 476, 'text': \"I suppose the Russians were punished for Stalin's misdeeds? Gosh you are a stupid Dork!\", 'labels': [[14, 21, 'Toxic'], [75, 80, 'Toxic']]}\n","{'id': 477, 'text': 'you are as dumb as ever it was REAGAN who pushed the soviets to spend billions and billions on more things that all but bankrupted them, so when countries like poland etc rebelled the russians had no way to enforce thier rule.. man take even a basic history course over your stupidity', 'labels': [[11, 14, 'Toxic']]}\n","{'id': 478, 'text': \"He blew it.  Yet another stupid decision to export our raw materials and therefore, jobs.  Refine the stuff in Alberta first and there wouldn't be all this rancor.   A truly unthinking decision - I didn't think Justin was such a fossil fool.\", 'labels': [[0, 6, 'Toxic'], [236, 239, 'Toxic']]}\n","{'id': 479, 'text': \"Come on Dragon, don't you want to know what he does all day?  Not so much the things you mentioned but rather things such as is he guilty?  And if so of what exactly?   We know the Donald is a coward but what do we not know?  That is the question.  Is he really Putin's lover?\", 'labels': [[193, 198, 'Toxic']]}\n","{'id': 480, 'text': 'you are so pathetically desperate to be loved by commenting \"like\" on every comment you post', 'labels': [[11, 22, 'Toxic']]}\n","{'id': 481, 'text': 'A goofy government in Alberta up against an even goofier one in BC. Nothing more ridiculous than that.', 'labels': [[81, 90, 'Toxic']]}\n","{'id': 482, 'text': \"Oh, gay and black, you just caused all our white christian friends here to start salivating at the same time, for what I'm not sure.\", 'labels': [[4, 6, 'Toxic'], [12, 16, 'Toxic'], [81, 90, 'Toxic']]}\n","{'id': 483, 'text': 'Since he had thousands of these pictures, how about we just toss him into a cage-fighting arena with say, the top two or three lottery winner fathers who would like to discuss the pictures of their daughters with him.\\n\\nWe could charge admission and give the proceeds to his victims.  \\n\\n\"Highlights at 11:00!\"  \\n\\nSee the teeth fly!  See the blood spurt!  Oh, wow! His little thingy didn\\'t like that kick!\\n\\nThere should be consequences for being a piece of garbage!', 'labels': [[346, 350, 'Toxic'], [446, 461, 'Toxic']]}\n","{'id': 484, 'text': 'Trump may very well be a moron. Tillerson only is apologizing for possibly telling the truth. Trump says he is the greatest. But everyone knows he is a liar. Trump has a poor reputation and few accomplishments given his high status.', 'labels': [[0, 29, 'Toxic'], [144, 155, 'Toxic']]}\n","{'id': 485, 'text': 'All I can see then, is that the purpose of the interpreter was to allow him to play stupid for the judge. And the point I made, is that he has been here for 32 years and of course he knew better.', 'labels': [[84, 89, 'Toxic']]}\n","{'id': 486, 'text': \"That's because that's the moment all doubt was removed over whether Trump was a moron.\", 'labels': [[80, 84, 'Toxic']]}\n","{'id': 487, 'text': 'Aw darn.', 'labels': [[3, 6, 'Toxic']]}\n","{'id': 488, 'text': \"BTW, I was just answering another comment.   Now you can go die; you've become very tiresome.\", 'labels': [[60, 62, 'Toxic']]}\n","{'id': 489, 'text': 'Ontario voters inclining themselves to the Liberals?  Stupid is as stupid does.', 'labels': [[54, 59, 'Toxic'], [67, 72, 'Toxic']]}\n","{'id': 490, 'text': 'Play stupid games. Win stupid prizes.  Darwin never sleeps.', 'labels': [[5, 10, 'Toxic'], [23, 28, 'Toxic']]}\n","{'id': 491, 'text': 'Anchorage Daily News you are so full of shit!', 'labels': [[40, 43, 'Toxic']]}\n","{'id': 492, 'text': 'so, are you morons happy about his visit?', 'labels': [[12, 17, 'Toxic']]}\n","{'id': 493, 'text': 'How else will we learn.  Demented leftist! Your feminism has turned 70 percent of women into addicted, depressed low wage slaves.  You will never learn!', 'labels': [[25, 32, 'Toxic']]}\n","{'id': 494, 'text': \"Junior, being the imbecile that he is, neglects to realize that there is large segment above 150K that is also well below 500K. And they will still feel the pain. Remember, given the Liberal lie about the size of the deficit, this is pure and simply a tax grab. Nothing else. The optics, though, may be good for the ignorant middle class, at least as he 'defines' it.\", 'labels': [[18, 25, 'Toxic'], [157, 160, 'Toxic'], [191, 193, 'Toxic'], [316, 323, 'Toxic']]}\n","{'id': 495, 'text': \"The ridiculous words being spewed by the idiotic potus matter because of his finger on the trigger, and only a simpleton would not be concerned.  Or maybe you don't care about the people of guam, south korea and japan.\", 'labels': [[4, 13, 'Toxic'], [21, 32, 'Toxic'], [41, 47, 'Toxic']]}\n","{'id': 496, 'text': 'The jc hospital is a lawsuit waiting to happen, mental health in eugene is treated worse than prison. How dare the city take life from people in the land of the free because you do not take the time to understand individuals. Its a pitiful shame to force people on drugs because your stupid.', 'labels': [[284, 289, 'Toxic']]}\n","{'id': 497, 'text': \"Hey, corporations are people too. They are just psychopaths that don't care about anything except making money. And they have Don Young and the Republican Party to back them so don't be surprised when the air runs out.\", 'labels': [[48, 58, 'Toxic']]}\n","{'id': 498, 'text': 'He has to stay to a script or he will stick his foot in his mouth and each and every time he answers a non scripted question it shows on how much a idiot blunder boy realy is.I am still waiting for my canoe shed.', 'labels': [[148, 152, 'Toxic']]}\n","{'id': 499, 'text': \"So, there is shit on the beach, but the state and county don't want to discourage tourist from spending their money there over a big holiday weekend, so even though there is shit on the beach, it is safe to enjoy making that sand castle.  Do I have it about right?\", 'labels': [[13, 16, 'Toxic']]}\n","{'id': 500, 'text': \"Trump has small hands; while before the old size correlation adage was speculative we know now that's it true: His Baby Man parts are tiny - very, very tiny - too.  So tiny in fact, that they are invisible. \\nYes, Trump represents his supporters. What a pathetic bunch of bloviating losers.\", 'labels': [[253, 266, 'Toxic'], [282, 287, 'Toxic']]}\n","{'id': 501, 'text': 'Globe has again no copy on a west coast game, this time Your Js out in LA.  Asleep at the switch, so posting on the hockey thread.\\n\\nCannot figure why Mr. Gibbons would be bunting in the 3rd inning of a game being played between 2 AL teams, weird.  I know his team is not hitting, but the 3rd inning, on the road, that is 100% definitely not the situation to be bunting, not with a minor league call-up pitching, whom you should figure is going to give up some runs at some point in the game.\\n\\nThat was just too stupid, and more proof that John Gibbons, sorry, missing something.', 'labels': [[511, 516, 'Toxic']]}\n","{'id': 502, 'text': 'Utter rubbish.\\nProvide a credible link to support your nonsense....', 'labels': [[6, 12, 'Toxic']]}\n","{'id': 503, 'text': \"I don't remember any stupid moves. Please remind me.\", 'labels': [[21, 26, 'Toxic']]}\n","{'id': 504, 'text': \"It wasn't my comment that got deleted, it was yours.\\n\\nSee.  No dog on it at all.  Poof.  Gone.\", 'labels': [[82, 85, 'Toxic']]}\n","{'id': 505, 'text': 'Translation: If you are gay, you should hate yourself and your sexual orientation.', 'labels': [[29, 52, 'Toxic']]}\n","{'id': 506, 'text': \"You're an idiot\", 'labels': [[0, 14, 'Toxic']]}\n","{'id': 507, 'text': \"In summary: Putrumpski is an incompetent, out-of-control moron who doesn't have the common sense of a gnat. \\nOh, and McConnell is, as always, a sniveling coward.\", 'labels': [[12, 21, 'Toxic']]}\n","{'id': 508, 'text': 'Ridiculous. My husband got down on one knee at a restaurant and popped the question (11 years ago). Everyone clapped, someone sent us drinks, and it was genuine and real. No \"proposal planner\" was needed to help him execute what should be a genuine, heartfelt ask. People who engage planners for these services need to have their heads examined. What a waste.', 'labels': [[0, 9, 'Toxic']]}\n","{'id': 509, 'text': 'rather than characterized as  \"in the dark\" how about \"ignorant\" or just plain \"financially stupid\"', 'labels': [[55, 62, 'Toxic'], [80, 97, 'Toxic']]}\n","{'id': 510, 'text': \"I missed the part where I'm supposed to give a fuck\", 'labels': [[47, 50, 'Toxic']]}\n","{'id': 511, 'text': 'this crap never ends', 'labels': [[5, 8, 'Toxic']]}\n","{'id': 512, 'text': 'Yes, we have idiots in Alberta.', 'labels': [[13, 18, 'Toxic']]}\n","{'id': 513, 'text': 'Another completely idiotic from one of the barely literate trolls.', 'labels': [[59, 64, 'Toxic']]}\n","{'id': 514, 'text': 'No bigger hypocrite than John Baird, traitor.', 'labels': [[10, 18, 'Toxic']]}\n","{'id': 515, 'text': \"Lol - The only vote I'd ever cast for Donald Trump is the world's biggest PIG!!\", 'labels': [[66, 76, 'Toxic']]}\n","{'id': 516, 'text': '\"Trump said “I’ll tell you about that maybe sometime..\"\\nI predict that Trump will renege on that comment like he has done on so many of his \"promises\".\\nTrump is the Liar and Thief of the USA.', 'labels': [[165, 168, 'Toxic'], [174, 178, 'Toxic']]}\n","{'id': 517, 'text': \"You're an ass copying other people's accounts..\", 'labels': [[10, 12, 'Toxic'], [22, 26, 'Toxic']]}\n","{'id': 518, 'text': 'The good professor loves playing the victim card. What a disgusting man. He can use whatever language he chooses. I have reserve the right to call him and idiot, and a bigot.', 'labels': [[57, 66, 'Toxic'], [155, 159, 'Toxic']]}\n","{'id': 519, 'text': \"Kill rail and turn it into an elevated roadway for buses and cars that pay . Oh that's right no more Common sense left in Hawaii.\", 'labels': [[0, 3, 'Toxic']]}\n","{'id': 520, 'text': 'God the libs just hate America.  She is stupid', 'labels': [[40, 45, 'Toxic']]}\n","{'id': 521, 'text': \"Sorry. I speak the truth and I'm just not politically correct. Trump supporters are stupid.\", 'labels': [[84, 89, 'Toxic']]}\n","{'id': 522, 'text': \"Maybe people that live in the Midwest should have to pay when a tornado levels their home.  You stupid mf.  Bet you don't own a damn thing is your pathetic shitty life\", 'labels': [[96, 101, 'Toxic'], [147, 154, 'Toxic'], [156, 161, 'Toxic']]}\n","{'id': 523, 'text': 'Mr. Pai is full of crap.', 'labels': [[19, 22, 'Toxic']]}\n","{'id': 524, 'text': 'She wont bite. Its a common flaming left wing tactic. Throw out stupid lies and hope they stick. Desperate', 'labels': [[64, 69, 'Toxic']]}\n","{'id': 525, 'text': 'Clinton is an embarrassment to all women of honor and integrity.', 'labels': [[54, 62, 'Toxic']]}\n","{'id': 526, 'text': 'Many misguided and misinformed people on this site criticize the President calling him a draft dodger.  However, the rank and file in the military as well as veterans voted overwhelmingly for Trump.  Now the Dumbo Dems criticize him because he has too many military people in the cabinet.  What idiots!', 'labels': [[290, 300, 'Toxic']]}\n","{'id': 527, 'text': 'This debacle the city created is the problem of the city. The state is not responsible to fix it. Caldwell needs to wake up & accept that this project was doomed from the start. Donʻt blame the state for your own stupidity. Its like financing a house for $1 million them blaming your neighbor when you canʻt afford to pay for it.', 'labels': [[155, 160, 'Toxic'], [213, 221, 'Toxic']]}\n","{'id': 528, 'text': 'He transcended the \"civilities of international affairs\" when he became laudatory in his praise of the accomplishments of a despot and dictator.\\n\\nThere is an expression we are all familiar with - \"if you haven\\'t anything good to say about a person, it\\'s best to say nothing at all\". In the case of Castro, there clearly is little good to say, however Trudeau, attempting to be statesmanlike, should have remembered the other expression \"best to keep your mouth shut and be thought an idiot than to open it and disspel all doubt\".', 'labels': [[484, 488, 'Toxic'], [522, 526, 'Toxic']]}\n","{'id': 529, 'text': 'Now that trump is the pres, and the republicans control both the senate and house, all I hear is excuses or republicans blaming each other.  What a bunch of losers, lol', 'labels': [[157, 162, 'Toxic']]}\n","{'id': 530, 'text': 'The blacks are the ones that are racists. They hate white people and do not hesitate to let them know that fact. Ridiculous waste of time and energy in this article. Just trying to make white people feel guilty once again for slavery..which is really stupid.', 'labels': [[251, 256, 'Toxic']]}\n","{'id': 531, 'text': 'They are both pro rail.  They are both worthless.', 'labels': [[14, 21, 'Toxic'], [39, 47, 'Toxic']]}\n","{'id': 532, 'text': \"Well said, frankA.  Still, I believe even your well reasoned post gives the gang of four too much credit.  They all but threaten schism if they don't get their way.  These four are a disgrace.\", 'labels': [[183, 190, 'Toxic']]}\n","{'id': 533, 'text': 'Sarah and her fellow travelers are deranged, they will never accept democracy', 'labels': [[31, 42, 'Toxic']]}\n","{'id': 534, 'text': \"Because he's playing stupid like no one is going to find out.  No wonder the department is screwed up with leaders like him running it.\", 'labels': [[21, 26, 'Toxic']]}\n","{'id': 535, 'text': 'Only a fool would not be against this president. He is massively and obviously unfit for office.', 'labels': [[7, 10, 'Toxic']]}\n","{'id': 536, 'text': 'of course the idiots in parliament would never consider talking to the people of crimea about the situation there\\n\\nthis is political theater for the inattentive and hard of thinking', 'labels': [[14, 19, 'Toxic']]}\n","{'id': 537, 'text': \"Proof you can't fix stupid!\", 'labels': [[20, 25, 'Toxic']]}\n","{'id': 538, 'text': 'Being a dick must be yours.', 'labels': [[8, 11, 'Toxic']]}\n","{'id': 539, 'text': 'Trump is a uninformed racist ignorant man anyone who votes for him is in the same boat i think.', 'labels': [[0, 40, 'Toxic']]}\n","{'id': 540, 'text': 'Don\\'t be silly. \"True\" Coloradans have boats, too.', 'labels': [[9, 13, 'Toxic']]}\n","{'id': 541, 'text': \"@rebel rose.  You sexually assaulted me!\\n\\nWhat?  You deny it?  That's what narcissistic perverts do.  \\n\\nSee how silly your logic is?\", 'labels': [[75, 95, 'Toxic']]}\n","{'id': 542, 'text': 'yep, this crap sounds like its from a libertarian', 'labels': [[10, 13, 'Toxic'], [38, 48, 'Toxic']]}\n","{'id': 543, 'text': 'I know that private charities cannot help all who need it, and the government must take up the slack. Your morally bankrupt ideology would deny food to the hungrey and healthcare to those who need it. You spout piffle about subsidarity, but the upshot of your immoral beliefs is that you would deny help to those in need while feeling self-righteous about your frank greed. As I said, your claim of being a Christian is a hypocritical sham.', 'labels': [[422, 438, 'Toxic']]}\n","{'id': 544, 'text': '\"I\\'m sure he has his reasons to act so stupid.\"\\nHe\\'s not acting. ....', 'labels': [[39, 44, 'Toxic']]}\n","{'id': 545, 'text': \"Trail users, all people really, need to remember to not wall off the world with earplugs and music and especially not have their eyes locked on the damn phone. Keep your head up and looking around, be aware of your surroundings. There's some nice things to see in the world when you actively engage with it instead of travelling through it in an electronic cocoon.\", 'labels': [[148, 151, 'Toxic'], [160, 167, 'Toxic']]}\n","{'id': 546, 'text': 'MOST PETS of PROGRESSIVES are SEX TOYS for the FAMILY\\nNIGERS LOVE PIT BULL PENIS---\\nBARRACK said it TASTE LIKE CHICKEN\\nMIKE BARRACKS MATE said BARRACK COULD TAKE AN ANAL DB with DOGS THREE TIMES a DAY\\nEVERY CALL to PRAYERS EVERY MUSLUM OFFERS HIS ASS to the DOGS---\\nand THEY LOVE IT', 'labels': [[5, 8, 'Toxic'], [30, 37, 'Toxic'], [47, 64, 'Toxic'], [75, 79, 'Toxic'], [165, 168, 'Toxic'], [236, 249, 'Toxic']]}\n","{'id': 547, 'text': \"Everybody should take all scratches and skin breaks seriously. Quickly wash it with soap and water, apply Neomycin-Bacitracin antibiotic ointment from Long's and generously cover it with a big bandage. Change them everyday and reevaluate the healing process. Pus or clean? These things are cheap insurance. you never know if your kid has a weak immune system. Hospitals are overwhelmed and full of stupid uncaring doctors, nurses, and support workers mixed up with good ones. This kind of accident will continue again and again. I strongly suspect people didn't care because they saw them as inferior people from the Pacific regions. The award should have been $10 million, and people should have been fired. That was a human child who died. Who will be the next one? A white one?\", 'labels': [[360, 449, 'Toxic']]}\n","{'id': 548, 'text': 'Homos have the no foresight beyond their own sexual gratification.  The B.Certs HAVE to have the biological father listed, otherwise they are completely worthless scraps of paper.  Go ahead and put a bunch of other lines on the certificate for listing the names of the freaks in your life, fine, but the biological father is a must for heath reasons, idiots.', 'labels': [[351, 356, 'Toxic']]}\n","{'id': 549, 'text': 'Young, you lost my vote.  Kasich is a fool & a liar.  If you knew him this long you should know this.', 'labels': [[38, 50, 'Toxic']]}\n","{'id': 550, 'text': 'CETA is about corporations controlling everything.  Look at the WWF report that over-production and over-consumption by humans have wiped out 1/2 of the planet\\'s species.  This ridiculous, constant quest for \"growth\" is killing the planet.  We can\\'t eat money, and we can\\'t drink oil.  The environment MUST be protected, and allowing corporations to continually sue for \"lost profits\" is a sure-fire path to mass obliteration of species.', 'labels': [[177, 186, 'Toxic'], [220, 236, 'Toxic']]}\n","{'id': 551, 'text': 'Your dumb. Unarmed prisoners behind bars can still make things happen . are you truly that naive or was you just trying to be clever and think you was being smarter then everyone else? Because really your comment shows how clueless you are clown', 'labels': [[5, 8, 'Toxic'], [240, 244, 'Toxic']]}\n","{'id': 552, 'text': 'Please, not the dullard Hanomansing.', 'labels': [[16, 22, 'Toxic']]}\n","{'id': 553, 'text': 'That is one of the stupidest ideas I have ever heard of and it figures it is Toronto and its NDP City Counsel. The stench coming from chicken poo is unbearable at the best of times but combine that with a hot summer day! I guess they want the new arrivals to think that they have all the good of the new world and for nostalgic measure the odors of the old world.', 'labels': [[19, 27, 'Toxic'], [89, 91, 'Toxic']]}\n","{'id': 554, 'text': 'Wow, the Liberals just keep marching on, one  ridiculous decision after another.', 'labels': [[46, 55, 'Toxic']]}\n","{'id': 555, 'text': 'The only thing that makes it seem to be worth that is that idiots are counting on other idiots to drive up the price of the stock.  It is just a lottery.', 'labels': [[59, 64, 'Toxic']]}\n","{'id': 556, 'text': \"the idiots in Ontario's Liberal government must  be on bad drugs that have fried their brains if they think Amazon would even consider locating in Ontario\", 'labels': [[4, 9, 'Toxic']]}\n","{'id': 557, 'text': 'Holy crap, could this paper be anymore liberal?  How about reporting unbiased news.', 'labels': [[5, 8, 'Toxic']]}\n","{'id': 558, 'text': \"Runaway kids from outside our State? Cowards ! Book them as adults and and hope for the best! They'll be well care for in prison!\", 'labels': [[37, 43, 'Toxic']]}\n","{'id': 559, 'text': \"Sounds like they got a stupid rule that if they cannot or will not communicate intelligently, then you are suspicious. Stupid rules made for stupid high school graduates by stupid rule inventors in the Homeland Security Agency and approved by stupid Congressional approvers who don't understand their logic but will approve them because they are too busy making money for their re-election campaigns or themselves. I will stop voting from now on. It's just a waste of time.\", 'labels': [[23, 28, 'Toxic'], [173, 178, 'Toxic'], [243, 248, 'Toxic']]}\n","{'id': 560, 'text': 'Any Catholic who at this point believes there is an actual moral equivalence between voting for Hillary or for Donald, or worse, believes that Donald is preferable to Hillary, so powerful is that ancient irrational anti-Hillary hatred, is a deluded and irresponsible fool. Hillary Clinton is by far the only acceptable candidate in this election campaign, of the four. By far.', 'labels': [[241, 270, 'Toxic']]}\n","{'id': 561, 'text': 'Your a moron and you prove it every day.', 'labels': [[7, 11, 'Toxic']]}\n","{'id': 562, 'text': \"Why don't you pick up a book and educate yourself before opening your ignorant mouth. Stop wasting everyone's time.\", 'labels': [[70, 77, 'Toxic']]}\n","{'id': 563, 'text': 'Helen Kenoyer! You need a punch in the face. Where can I find you, so I can punch out. (Joking but wud love to tho)  SHE IS LOST RIGHT NOW.  High or not high is not ur damn business.', 'labels': [[26, 42, 'Toxic'], [45, 84, 'Toxic'], [168, 171, 'Toxic']]}\n","{'id': 564, 'text': 'Crap', 'labels': [[0, 3, 'Toxic']]}\n","{'id': 565, 'text': \"Fuck this asshole and fuck ADN with it's fascist peer reviewed comment censorship.\", 'labels': [[0, 3, 'Toxic'], [10, 16, 'Toxic']]}\n","{'id': 566, 'text': 'Gorka, the crypto-Nazi, should have exited the White House from the roof.', 'labels': [[11, 21, 'Toxic']]}\n","{'id': 567, 'text': 'Hard to feel sorry for folks who have been making State of Alaska union wages with over-sized health and retirement benefits but instead of preparing for the day when they would not be in the same position by saving money and eschewing expensive adult toys got themselves into debt. Now the rest of us pay for their childish greed and idiocy.', 'labels': [[335, 340, 'Toxic']]}\n","{'id': 568, 'text': 'You keep blaming Harper. Please that idiot Trudeau has been in power fro close to 2 years now, and other than spending massively for nothing, he has accomplished nothing, \"Gerard tell me what to do\".', 'labels': [[37, 41, 'Toxic']]}\n","{'id': 569, 'text': 'What a load of BS.  Give this idiot 10 years, THEN send him home.  Liberal Clown legal system....', 'labels': [[30, 34, 'Toxic']]}\n","{'id': 570, 'text': \"I always smile when I've been called stupid by a fool.\", 'labels': [[37, 42, 'Toxic'], [49, 52, 'Toxic']]}\n","{'id': 571, 'text': \"Notice how The Clinton Foundation was shut down when she didn't win. Now Chelsea Clinton is being forced upon us because those people want something for their money.\\n\\nThe Clinton's are far more corrupt than Donald could ever be, but they say nice things so all is forgiven. Millennials and Dems are either willfully ignorant or stupid I can't decide which one it is.\", 'labels': [[194, 200, 'Toxic'], [328, 333, 'Toxic']]}\n","{'id': 572, 'text': \"Excellent point!  What if a mob assembled outside his offices and used violence to stop editors from publishing the magazines?  That's the point and how a guy like him could miss it is either purposeful or incredibly ignorant of the issue at hand.\", 'labels': [[217, 224, 'Toxic']]}\n","{'id': 573, 'text': \"Wonder if the mother will reject it if reunited. Will need to call that Oceanography Museum in Monterey. Don't fall in love with this cute lil bugger. Needs to get back to family.\", 'labels': [[139, 148, 'Toxic']]}\n","{'id': 574, 'text': 'The shameful irony of this ridiculous action is not lost on me.   Here we have CBD from HEMP, confiscated by a control board that is supposed to regulate a different plant.\\n\\nNot only is the CBD non psychoactive, it\\'s actually gaining momentum as a cure for everything from skin ailments to cancer, parkinsons, etc., and the best thing our director can do is punish the patients.\\n\\nThank you regulatory board for saving us from potentially health inducing substances.\\n\\nSo we have a board and regulatory agency that is helpless to compete with the \"grey\" market.  We have a new director who insanely targets patients and our own pseudo tax collectors,  and leaves the black market to millions of dollars while the health food stores sell 38 brands of CBD by the shelf full.\\n\\nThe inmates have indeed taken over the asylum.\\n\\nDo they not know they can send a memo and have the products get registered?  This is maddeningly idiotic and shameful on the part of this new director.   \\n\\nVote of no confidence.', 'labels': [[27, 36, 'Toxic']]}\n","{'id': 575, 'text': 'Publicity whore.', 'labels': [[10, 14, 'Toxic']]}\n","{'id': 576, 'text': 'Who gets do decide what are fallacies and what are not? One person\\'s facts have a tendency to be another person\\'s lies. If you silence speech which is \\'hateful\\' you are against free speech. We need to protect speech which is \\'nasty\\' not speech which is \\'nice\\'. \\n\\nAs to your belief in the need for safety and protection as Franklin famously observed, \"those who would give up essential liberty, to purchase a little temporary safety, deserve neither liberty nor safety.\" Who are you to be so patronising and condescending that you feel it right that people not be allowed to listen to someone you personally disagree with? \\n\\n\"If we could rely on the citizenry to be thoughtful judges of the quality and truth of the thoughts, Milo would not be dangerous. But, he is.\" And there we have the illiberal authoritarian revealed in all their glory. Ultimately you despise the masses and believe they need to be \\'protected\\' or shepherded in certain directions for their own good. \\n\\nYou are a humbug.', 'labels': [[984, 989, 'Toxic']]}\n","{'id': 577, 'text': 'You people are disgusting!  Try respecting or President instead of insulting him constantly.  While you are at it... stop lying about him too!  Treat him like you did Obama...  you had your nose up his ass!', 'labels': [[15, 24, 'Toxic'], [202, 204, 'Toxic']]}\n","{'id': 578, 'text': 'Foreskin is desperately trying to redeem his incredibly stupid decision to vote for the moronski in the White House.', 'labels': [[56, 61, 'Toxic']]}\n","{'id': 579, 'text': 'It took 6 years to put a man on the moon from the time Kennedy proposed it in 63. Check your facts, lest you sound like an ignorant fool.', 'labels': [[132, 135, 'Toxic']]}\n","{'id': 580, 'text': \"Humans exhale carbon dioxide. This is responsible for climate change. Now I've heard it all. Ridiculous.\", 'labels': [[93, 102, 'Toxic']]}\n","{'id': 581, 'text': 'mccain sucks!', 'labels': [[7, 11, 'Toxic']]}\n","{'id': 582, 'text': 'THe farther to the left you go the dumber it gets.', 'labels': [[35, 40, 'Toxic']]}\n","{'id': 583, 'text': 'You are wrong and an idiot! They are not! Americans are. Canadians are not.', 'labels': [[21, 25, 'Toxic']]}\n","{'id': 584, 'text': 'Another scum bag pervert. And he was a mentor to young children. Sick.', 'labels': [[8, 11, 'Toxic'], [39, 44, 'Toxic']]}\n","{'id': 585, 'text': 'Donald Trump is far from a failed businessman, what a stupid uneducated argument.', 'labels': [[54, 59, 'Toxic']]}\n","{'id': 586, 'text': \"3.  Tudor Development. As long as the development is for healthcare, education, and housing, GREAT!  But grocery stores? Shopping? We've got TOO MANY of BOTH in the Bowl. And, we've got people without any money to buy the junk they sell. NO. Either use that Tudor Road AS PLANNED ORIGINALLY or no to the outside interests who want to build megastores and 'boutique' shops. \\n\\n4.  PROSTITUTES SNITCHING? When pigs fly. How DARE any of you try to make any citizen a spy on their neighbors. Dropping charges but ONLY if someone ELSE is thrown in jail?  If 100 women are arrested, ask how many men are!  NONE. So if this works, a prostitute could simply name her cohort in the crime of selling sex -- the man who paid her for it!  Tadah!  PUT HIM IN JAIL, THEN SHE GOES FREE! How easy to make this backfire, fools!  Nasty men came up with this stupid idea. For shame. Gestapo tactics. Vichy French!  Hypocrites!\", 'labels': [[803, 807, 'Toxic'], [839, 844, 'Toxic'], [895, 904, 'Toxic']]}\n","{'id': 587, 'text': \"You still don 't get the picture right in your head.  What good is high moral ground when everybody else is below and killing our high moral butts?  Didn't  you know that they only thing these people respect is overwhelming power.  Your liberal BS is what has gotten this country to the state it is now in.  No more capital punishment, no more pledge of allegiance, no more of the good things like we had in the past.  All the crying and complaining your kind has done is what contributed  to making our country the sad thing that it is today.  How about you turning the other cheek and do what is right to help make this country great instead of being a counterproductive jerk?  Quit the bellyaching and putting down the POTUS for a change.  QITMO is essential to our safety.  Those being held there are quite the lucky ones...they get a clean place to live, 3 meals a day, exercise and  participate in their religious prayers.  Win, win for them.  No one is trying to kill them there.  Wise up!!!!\", 'labels': [[970, 973, 'Toxic']]}\n","{'id': 588, 'text': 'left wing economic and spending stupidity from people like you  is why canada is not great!', 'labels': [[32, 40, 'Toxic']]}\n","{'id': 589, 'text': 'Flight*S*??? Bastard.', 'labels': [[13, 19, 'Toxic']]}\n","{'id': 590, 'text': 'The ACLU is just as bad as the SPLC.  Both used to be respectable.  Now both are extreme Left and insane.', 'labels': [[98, 103, 'Toxic']]}\n","{'id': 591, 'text': \"And you must be the other half, since you've made a seriously stupid comment. I guess that's easier than understanding reality.\", 'labels': [[62, 67, 'Toxic']]}\n","{'id': 592, 'text': 'NO one is a bigger bully than a scorned left-wing extremist.', 'labels': [[19, 23, 'Toxic'], [50, 58, 'Toxic']]}\n","{'id': 593, 'text': 'Your ignorance is astounding.', 'labels': [[5, 27, 'Toxic']]}\n","{'id': 594, 'text': \"You are correct; you are a doofus.\\n.\\nYou do understand that UBC did a study comparing the NDP ( from the 90's) fiscal performance, compared with the BC Liberal fiscal performance.  The result was that the NDP were deemed to be better fiscal managers.\\n.\\nAbout the only thing that Christy gave BC was $50b more in accrued debt; a BC record, and done in less than 6 short years.\\n.\\nhttp://news.ubc.ca/wp-content/uploads/2013/05/NDP-vs-Liberal-Performance.pdf\\n.\\nAll the good Liberals left because they couldn't stand Christy either.\", 'labels': [[17, 31, 'Toxic']]}\n","{'id': 595, 'text': 'I stated that in the beginning, out for blood only the greedy bastards!', 'labels': [[55, 69, 'Toxic']]}\n","{'id': 596, 'text': \"Alaska is the only state too stupid to have constitutional control of it's own natural resource.  There's a No Special Privilege clause for fisheries.  Where is there a No Special Privilege clause for oil, mining, or timber?\", 'labels': [[29, 34, 'Toxic']]}\n","{'id': 597, 'text': 'It’s needs to be addressed that yes Muslims are people too but they carry a lot of unwanted cultural baggage and a medieval mindset with them. Muslims are notorious for failing to integrate into western society. Just look around the world. Whether you want to acknowledge it or not, Muslims are a social problem.', 'labels': [[283, 310, 'Toxic']]}\n","{'id': 598, 'text': 'Brennan is a traitor to the American People.  I hope Trump has all these shadowy scumbags thoroughly investigated.', 'labels': [[0, 19, 'Toxic'], [73, 88, 'Toxic']]}\n","{'id': 599, 'text': \"Idiots. None of these numbnuts understand economics or smart enough to understand what Colorado and espcially Denver struggled with during the late 70's, the entire 80's, and first half of the 90's - an economically depressed state and city where jobs were scarce, layoffs frequent, and boarded up windows littering the state and Denver. If Amazon comes to the area, the exponential economic benefits will last a century. These clowns will be the same people who whine come next downturn\\u200b that they cannot find a job and the government is doing nothing to help.\", 'labels': [[0, 5, 'Toxic']]}\n","{'id': 600, 'text': \"Call it what it is, SOCIALIST PARTY.  If Idiots can't look at Venezuela and see where Socialism  leads them then they are too ignorant to be American. \\n Put your hands in your pockets instead of holding them out for the Gov. to fill with goodies for your vote.\", 'labels': [[41, 46, 'Toxic']]}\n","{'id': 601, 'text': \"Actually I've moved into YOUR mom's basement and her meatloaf really sucks.\", 'labels': [[69, 73, 'Toxic']]}\n","{'id': 602, 'text': 'Republican Utopia.  All wealth controlled by the few.  All of the many too stupid to realize it.', 'labels': [[55, 94, 'Toxic']]}\n","{'id': 603, 'text': 'You hit the nail on the head Sam. Not only should these worthless corrupt bums be voted out they should be investigated.', 'labels': [[56, 77, 'Toxic']]}\n","{'id': 604, 'text': \"A politically stupid move on Trump's part. The reality is that the Paris accord does very little in reality ... I mean, trying to limit the  heating to 2 degrees is  too little in any case ... chances are, what we have already dumped into the climate system will take us above 2 degrees anyway, and, really, that alone would be catastrophic for the environment, leading to major droughts, bouts of extreme weather and melting ice that will flood Florida and some major cities over the next few decades.\\n\\nBut by opting of an international agreement (that he can't *** really*** opt out of anyway, he is declaring that he doesn't care about his own grandchildren, never mind yours. He is denying that the ice caps are melting and he's declaring that he doesn't give a damn if they are.\\n\\nPolitically, this is not a very wise move, ON TOP of the fact that it is politically unwise to discourage the growing green energy sector that is worth billions of dollars.\", 'labels': [[14, 19, 'Toxic']]}\n","{'id': 605, 'text': 'Great now we can toast his ass and every liberal in the country in 2019 just another lie from a liberal to get votes and he cant do it, he knows his polling number are falling so fast he has to do something to appease pissed off canadians.this shows he has no balls if he believed in then do it and face the wrath of voters.', 'labels': [[27, 29, 'Toxic'], [85, 87, 'Toxic'], [260, 264, 'Toxic']]}\n","{'id': 606, 'text': 'funny how these churches want to protect illegals who break the law, you think as a citizen that if i go and break a bunch of laws the church will protect me from the cops? seperation of state and government, ICE needs to walk in that church and arrest that criminal. sure do i feel bad for her kids that their mom is a criminal sure, but if i break the law and face jail whos gonna come running to protect me because my kids dont want me to go to jail. this crap about protecting criminals that are illegal immigrants just cause they are illegal immigrants is ridiculous.', 'labels': [[320, 327, 'Toxic']]}\n","{'id': 607, 'text': \"It's not public cash.  It's shareholder's cash.\\n\\nNot your concern what a corporation does with shareholder's cash.\\n\\nYour comment is ridiculous.\", 'labels': [[132, 141, 'Toxic']]}\n","{'id': 608, 'text': \"I'll bet the new love of her life can list off every mistake she has made since they have been together. The guy is a jerk.\", 'labels': [[118, 121, 'Toxic']]}\n","{'id': 609, 'text': 'Most certainly voters seem to prefer stupidity - look at the election results: Ontariowe, Canada ( federal ), the USA ( Trump )......', 'labels': [[37, 52, 'Toxic']]}\n","{'id': 610, 'text': \"Foul language on both side doesn't alter the fact that Trump is a bottom feeder.\", 'labels': [[15, 20, 'Toxic']]}\n","{'id': 611, 'text': 'Agreed. This trash should be fined for illegal bear baiting. \\n\\nIf you want to keep chickens in Alaska, you should be responsible to the wildlife that surrounds you. Or move to Iowa, you idiots.', 'labels': [[13, 17, 'Toxic'], [186, 191, 'Toxic']]}\n","{'id': 612, 'text': 'A meeting between dumb and dumber.', 'labels': [[18, 32, 'Toxic']]}\n","{'id': 613, 'text': \"I'm not mocking Obama, he is simply a failure, that's not mocking, that's rightful criticism. Your childlike definition of pressuring a foreign leader and calling it begging is.\", 'labels': [[38, 44, 'Toxic']]}\n","{'id': 614, 'text': 'Well there you have it. She wants more government assistance.   screw her', 'labels': [[64, 72, 'Toxic']]}\n","{'id': 615, 'text': \"Lol you guy's are pathetic. If a fly turn around your head i bet you call it a fly from Quebec...\\nGet over it.\", 'labels': [[18, 25, 'Toxic']]}\n","{'id': 616, 'text': \"Aren't you the rascist idiot that reveals your IQ with every inane, kneejerk blathering you post?\", 'labels': [[23, 27, 'Toxic']]}\n","{'id': 617, 'text': 'These idiots are bound and determined to start a civil war! No one is going to stand for a few states electing a president every 4 years. Liberals truly are insane', 'labels': [[6, 11, 'Toxic']]}\n","{'id': 618, 'text': 'About the same percentage as Trumplodites in America?', 'labels': [[29, 40, 'Toxic']]}\n","{'id': 619, 'text': 'Your silly statement is obvious your a taker.. ( non-worker)!! You would know about sitting on the sidelines collecting free money. I bet your first in line when the word free is mentioned.', 'labels': [[5, 9, 'Toxic']]}\n","{'id': 620, 'text': 'What a ridiculous pile of bullshit.', 'labels': [[7, 16, 'Toxic']]}\n","{'id': 621, 'text': 'Organized idiocy!', 'labels': [[10, 15, 'Toxic']]}\n","{'id': 622, 'text': 'Well, lookey there. I provide adefinition in good faith, and you come back with even more overt FUD and long disproven talking points.\\n\\nAs to economics, the sustainability and renewables sector is one of the fastest growing and most profitible set of industries worldwide- creating and capable of creating millions of well paid jobs, and yet is ever hampered by useless hacks and right wing ideologues.', 'labels': [[362, 368, 'Toxic']]}\n","{'id': 623, 'text': 'Because idiots believe supporting and wanting our immigration laws to be enforced is so how racists.', 'labels': [[8, 13, 'Toxic']]}\n","{'id': 624, 'text': 'baloney. Obviously, either your memory is shot, or you are just lying. \\n\\nI was rooting for McCain right from the start until he picked up Palin. Actually, when he first picked her up, I was in favor until allen and a few others pointed out her record and how stupid she was. Even back then, I was saying that McCain would not last a year in the office and therefore Palin would be president. \\n\\nThat is when I changed. \\nAnd BTW, you backed McCain and declared him a hero. Now, you declare him an enemy of the state again, based on lies from the far right?', 'labels': [[259, 264, 'Toxic']]}\n","{'id': 625, 'text': \"Don't like it you can leave d*ckhead. No one is forcing you to be here. I cant stand idiots like you. Idiota like you thibk Hick is going set Dunlap free. Tbats shows how stupid you truly are. If anything he will commute his sentence to life.which is harsher sentence then the death penalty but you republicans talk a big bad game but at the end of the day your bloodthirsty like actual killers. Get out of my state you redkneck\", 'labels': [[28, 35, 'Toxic'], [85, 90, 'Toxic'], [102, 107, 'Toxic'], [171, 176, 'Toxic'], [362, 373, 'Toxic'], [387, 393, 'Toxic']]}\n","{'id': 626, 'text': \"So BDpapa, you'd rather be working with a stinking drunk ?? I got news for you braddah, motor skills are less affected by marijuana than alcohol. Try it, YOU WILL see.\", 'labels': [[42, 55, 'Toxic'], [122, 130, 'Toxic']]}\n","{'id': 627, 'text': 'See?  What did I tell you.  Hopelessguy belongs in the stupid camp.', 'labels': [[55, 60, 'Toxic']]}\n","{'id': 628, 'text': 'You Sue  are an idiot.', 'labels': [[16, 20, 'Toxic']]}\n","{'id': 629, 'text': \"Silly, absolutely trash thinking, silly is harmless this person's analogy is down right putrid.\", 'labels': [[0, 4, 'Toxic'], [34, 38, 'Toxic']]}\n","{'id': 630, 'text': 'Yeah, but in reality the greedy governments care more about the taxes they collect from tobacco than they care about their stupid citizens. Simple.', 'labels': [[25, 30, 'Toxic'], [123, 128, 'Toxic']]}\n","{'id': 631, 'text': \"Violated the terms of her release. Now give her what she deserves, DEATH !  Or is the system gonna give her juaaaan more chance?  How about community service,,,, have her stand and direct traffic right in the middle of the H1 at peak traffic.  If she doesn't make it, i guess it just wasn't meant to be.\", 'labels': [[0, 7, 'Toxic']]}\n","{'id': 632, 'text': \"We don't want stupid dishonest people like this being protected and settling in Canada.\", 'labels': [[14, 19, 'Toxic']]}\n","{'id': 633, 'text': 'might as well start the countdown to idiot miller, oh too late you are already there', 'labels': [[37, 41, 'Toxic']]}\n","{'id': 634, 'text': 'As Dr. Phil says, \"Well, that\\'s just plain STUPID\".  I pray for the dead man and his family, and I pray that Mr. Montez goes to prison for LIFE.  Game Over IDIOT.', 'labels': [[43, 48, 'Toxic'], [156, 160, 'Toxic']]}\n","{'id': 635, 'text': 'They should be persecuted. And if they have children, they should be taken away from them. People this monumentally stupid should not be allowed to raise kids. Or reproduce.', 'labels': [[116, 121, 'Toxic'], [130, 171, 'Toxic']]}\n","{'id': 636, 'text': \"Blow that pretentious crap out your ear, Chance.\\n\\nAll you've done is show everyone your own lack of character.\", 'labels': [[22, 25, 'Toxic']]}\n","{'id': 637, 'text': 'Diane Frankenstein (D)onkey  said today that they have found nothing on Trump.  Not one damn thing!  The dems are so dumb!!', 'labels': [[88, 91, 'Toxic']]}\n","{'id': 638, 'text': 'If morons like Tipton would do their jobs, especially representing his own district, there would have been a pathway to citizenship put in place that is expedient and affordable years ago. Now kids who have known nothing but the US are at risk of being deported to other countries from which they have no ties?  Typical elitist attitude finding means to their ways!', 'labels': [[3, 8, 'Toxic']]}\n","{'id': 639, 'text': 'Nothing of what you claim is in my post.  Nothing.  A black person is obviously black to all casual observers.  Not always, but the vast majority of the time.  This fact does not apply to homosexual people.  When a bisexual person engages in homosexual activity, does this make them homosexual or do they continue to be bi?  My point is that, really, it is none of my, nor your, business.  Unless you observe the activity, or if they proclaim their sexual preferences, you have no way of discriminating against the person.  Black Americans do not have this ability to hide their status.', 'labels': [[188, 197, 'Toxic']]}\n","{'id': 640, 'text': 'Pathetic.   Stop accepting drugs from your doc.  Duh.', 'labels': [[0, 7, 'Toxic']]}\n","{'id': 641, 'text': 'What a load. What the left \"cannot stand\" is the lying, traitorous moron with whom you defiled the White House. He and the GOP are literally destroying America. Wolf Eagle is right. It\\'s time for a revolution.', 'labels': [[49, 53, 'Toxic'], [56, 65, 'Toxic'], [67, 71, 'Toxic']]}\n","{'id': 642, 'text': 'Listening to Ms McKenna advising us that floods and drought are caused by climate change is pathetic. These are woefully ignorant people.', 'labels': [[92, 99, 'Toxic'], [121, 135, 'Toxic']]}\n","{'id': 643, 'text': 'Is that because she, like her husband, thinks with her genitals?', 'labels': [[55, 62, 'Toxic']]}\n","{'id': 644, 'text': 'Could anyone be more illiterate and idiotic in a Comment?  Bama Adinistration?  What, some Alabama Congressman?  Look closer to home for the \"uneducated\" idiot.', 'labels': [[36, 42, 'Toxic'], [154, 158, 'Toxic']]}\n","{'id': 645, 'text': \"What idiots, both of them.\\n1. You don't ride a motor scooter on the sidewalk.\\n2. You don't flash fire arms.\\n3. You don't lay down in front of a moving motor vehicle, anywhere. That's just dumb, and then grab a loaded gun. Guttzie but dumb.\", 'labels': [[5, 10, 'Toxic']]}\n","{'id': 646, 'text': 'And there are many of us who are appalled at the idea and are even more ready to oppose it after watching Mr. Bannon and Mr. Trump in action. They are incompetent bunglers who live off a rhetoric of hate.', 'labels': [[151, 161, 'Toxic'], [163, 170, 'Toxic']]}\n","{'id': 647, 'text': \"Zoo's? How about we lock you up in a zoo, fools.\\n\\nKill the goats, kill the wolves, nice!\", 'labels': [[42, 46, 'Toxic'], [50, 53, 'Toxic']]}\n","{'id': 648, 'text': \"Am I still asleep or did Steve Bannon actually say all this? I may have to re-think my opinion of him. He's dead on, of course, about there being no military solution to North Korea AND that white nationalists are a bunch of clowns.\", 'labels': [[225, 230, 'Toxic']]}\n","{'id': 649, 'text': \"you are baloney, you don't know what you are talking about.  even your analogy is misguided and erroneous, it has no relevance.  if you want to argue, you must be clear, logical and persuasive and you are not - far from it.\", 'labels': [[8, 14, 'Toxic']]}\n","{'id': 650, 'text': \"1. I don't like the chances of re-election for the mayor who decided not to suggest even a voluntary evacuation. Dumb.\\n2. But all will be OK. Trump will visit soon. Hallelujah! <sarc off>  \\n\\nWhy do I think trump believes that news he will come will be all the area needs to burst into happiness and cheer? Oh yes - because he's an idjit.\", 'labels': [[321, 325, 'Toxic']]}\n","{'id': 651, 'text': 'Rotten to the core. Put them in prison until they perish. They should never have a day of freedom again.', 'labels': [[0, 5, 'Toxic']]}\n","{'id': 652, 'text': 'liam your an idiot', 'labels': [[13, 17, 'Toxic']]}\n","{'id': 653, 'text': \"Can't fix stupid...\", 'labels': [[10, 15, 'Toxic']]}\n","{'id': 654, 'text': \"Feral cats do not belong in the wild, thus the term 'feral'. Kill them all.\", 'labels': [[61, 73, 'Toxic']]}\n","{'id': 655, 'text': 'In a \"right to work\" state where employees have little to no recourse (excepting for harassment), that\\'s about all anyone can do. It\\'s kind of pathetic.', 'labels': [[143, 150, 'Toxic']]}\n","{'id': 656, 'text': \"How has the Church made gay people's lives a living hell?\\n\\nGiven what gay priests have done to the Church, yours seems to be the party that owes reparations.\", 'labels': [[24, 26, 'Toxic'], [70, 80, 'Toxic']]}\n","{'id': 657, 'text': \"Does the Globe and Mail realize how Trump obsessed it has become?  Almost every article on it's front page are Trump related.  Doing the 24\\\\7 never ending coverage on Canadians is about as meaningful as talking to the wall.  WE can't vote on any of it, there is nothing we can do and the election is even over.\\n\\nWe have our own idiot ruining our country.  Can we turn back our focus on things that we have control over?\", 'labels': [[328, 340, 'Toxic']]}\n","{'id': 658, 'text': 'Seriously, loser? I was simply pointing out that you used \"udder\" when you should have used utter. My mom died of brain cancer - I took care of her for the last 3 months of her life. I\\'m guessing that\\'s a malady you won\\'t have to worry about. No brain - no brain cancer. You truly suck.', 'labels': [[11, 15, 'Toxic'], [281, 284, 'Toxic']]}\n","{'id': 659, 'text': '@ Anne M. Erskine\\nWhen Your Grandkids, Kids All DIE Because Of CLIMATE CHANGE.... I Hope They Read Your Comment.!!!! Knowing There Grandmother Was So STUPID.!!!!!', 'labels': [[150, 155, 'Toxic']]}\n","{'id': 660, 'text': 'I suspect there is, in this debate, also something at play which the blogger John Pavlovitz calls \"Americhristianity\" [http://johnpavlovitz.com/2015/11/17/freeing-christians-from-americhristianity/].  Though his piece aims at the exploitation of fear, I think his reasoning can also be applied to the realm of economy and economic justice (btw: does anyone, including Ms. Slade, remember that great prophetic letter by the US Bishops, \"Economic Justice For All\", from November 1986?). A Pope who is called \"a goddamn socialist\" in America is a very good one.  Ayn Rand\\'s philosophy has succeeded in infiltrating the thinking of many who call themselves Catholic or Christian.  What it actually does is creating \"economic Americhristianity\", which is universes apart from true Christianity as expressed in the Gospel. Maybe Pope Francis needs to make an authoritative statement to that effect, in form of an Encyclical, written in English. Title: \"With Grave Concern\" (respectful thanks to Pius XI).', 'labels': [[509, 515, 'Toxic']]}\n","{'id': 661, 'text': 'You\\'re such a delicious fool Donald, calling advisaries by derogatory names - I wonder which one will be yours if you follow through on the rhetoric and become the world\\'s most prolific mass killer  - \"Devil Incarnate\" should suffice.', 'labels': [[7, 10, 'Toxic']]}\n","{'id': 662, 'text': 'When it all goes to crap, better to punch up into it and call center to head home with an IFR clearance. Some guys try too hard.....', 'labels': [[20, 23, 'Toxic']]}\n","{'id': 663, 'text': 'The Idiot says something one day and something else the next. He disavows his appointees constantly. How can he be trusted?', 'labels': [[4, 8, 'Toxic']]}\n","{'id': 664, 'text': '\"educated morons\"', 'labels': [[10, 15, 'Toxic']]}\n","{'id': 665, 'text': \"Tugging at heartstrings?\\nYou sound like a third rate country music tavern singer pounding out third rate songs.\\nCollect your lobbying pay some other way, you're inept at this method.\", 'labels': [[161, 165, 'Toxic']]}\n","{'id': 666, 'text': 'For all those who keep harping on about how every terrorist is a Muslim, please educate yourselves by reading this FBI study that says 94% of recent terrorist attacks in the US were carried out by Non-Muslims:\\n\\nhttps://www.fbi.gov/stats-services/publications/terrorism-2002-2005\\n\\nIn fact, there were more terrorist attacks carried out by extremist Jewish people than by extremist Muslims.', 'labels': [[50, 70, 'Toxic']]}\n","{'id': 667, 'text': 'united still hiring IDIOTS', 'labels': [[20, 25, 'Toxic']]}\n","{'id': 668, 'text': \"As a taxpayer I say go for it.\\n\\nIt was too bad the state lost that case fee case against Jay Hammond's former whore and that other looser for the pebble mine fight.\", 'labels': [[81, 87, 'Toxic'], [110, 114, 'Toxic']]}\n","{'id': 669, 'text': 'It\\'s funny. Every time I read a comment and think \"That\\'s stupid.\" I look at the poster and more often than not it\\'s you.', 'labels': [[58, 63, 'Toxic']]}\n","{'id': 670, 'text': \"It might have helped if Trump didn't go out of his way to insult the intelligence community before and after he was elected. He's learning other entities can be just as dirty as he is.\", 'labels': [[169, 173, 'Toxic']]}\n","{'id': 671, 'text': \"The whole idea is stupid.It's like inviting Italian immigrants,and telling them they cannot cook pasta,listen to opera,and dress a certain way that they like to dress. Inviting Islam to the West is the stupidest idea in the history of ideas,and Merkel is a fool for even trying. Had she known anything about history,perhaps she would  not have made the mistakes she has made.\\nWake up,people!! Read a book!\", 'labels': [[18, 28, 'Toxic'], [202, 210, 'Toxic'], [257, 260, 'Toxic']]}\n","{'id': 672, 'text': 'I never said it \"never happened \". \\n\\nYou lied.', 'labels': [[37, 44, 'Toxic']]}\n","{'id': 673, 'text': 'Hey Nowhere Man, go fuck yourself.', 'labels': [[20, 23, 'Toxic']]}\n","{'id': 674, 'text': \"Seriously?  People in a certain area of town are too stupid to go to Craigslist to look for a job?  Why are there jobs available and also high unemployment?  There cannot be that many people with a record looking for work.  Could it be that they don't have to work because of all the handouts (welfare) from folks who are working?\", 'labels': [[53, 58, 'Toxic']]}\n","{'id': 675, 'text': 'What a waste of time... this project hardly deserves this kind of coverage. 22 pictures and a lengthy article about --- wait for it ---- a remodeled golf green. Mr. Bellamy, you sir have way too much time on your hands.\\n\\nPATHETIC', 'labels': [[221, 228, 'Toxic']]}\n","{'id': 676, 'text': 'Such stupidity. Enough is enough. Jail time for management and the Board. And now. The lesson will not be learnt until we start jailing. Seriously folks. This is a regulated bank. Osfi is pretty useless and should speak to how their oversight is protecting us.', 'labels': [[5, 13, 'Toxic']]}\n","{'id': 677, 'text': \"It's funny how ignorant you are in your certainty about something you don't understand.\", 'labels': [[15, 22, 'Toxic']]}\n","{'id': 678, 'text': 'Elefante for Mayor.  We need another fool to replace the fool we currently have as Mayor.', 'labels': [[37, 40, 'Toxic'], [57, 60, 'Toxic']]}\n","{'id': 679, 'text': \"So silly. This article has nothing to do with politics, perfect time to bash Trudeau?\\n\\nYou are what's wrong with the internet.\", 'labels': [[3, 7, 'Toxic'], [46, 53, 'Toxic']]}\n","{'id': 680, 'text': \"Arpaio is as much of a horse's -as as the moron who pardoned him.\", 'labels': [[42, 46, 'Toxic']]}\n","{'id': 681, 'text': 'Clinton was president when the Columbine school shooting took place .  Obama during Sandy Hook . So your comment is utter nonsense .', 'labels': [[122, 129, 'Toxic']]}\n","{'id': 682, 'text': \"I'll bet it drives just great on snow and ice.\\nThe stupidity is strong in some.\", 'labels': [[51, 59, 'Toxic']]}\n","{'id': 683, 'text': 'They won.\\n\\nJust win, baby.  And you can be anything you want, including being \"stupid\".', 'labels': [[79, 84, 'Toxic']]}\n","{'id': 684, 'text': 'He should never have been allowed to be beaten but, rather, should have been summarily executed instead.', 'labels': [[40, 45, 'Toxic'], [77, 94, 'Toxic']]}\n","{'id': 685, 'text': 'It’s likely not racist ignorant hate but rather stupid kids that are bored and lack parental guidance. So quick to judge.', 'labels': [[48, 53, 'Toxic']]}\n","{'id': 686, 'text': 'Your ignorance is profound, and once again you have shown you are completely void of cognitive reasoning. Reality is beyond your intellect. The fact we have a renters refund program that rebates property taxes collected in rent is beyond your intellect to grasp. Furthermore, you are incapable of grasping even the basics of business, and the fact property investors add property taxes to rent because this is how they cover the costs of their investment. Your deluded stupidity believes property investors eat this costs and go in debt. Frankly, when you are posting this level of mind numbing stupidity I am very impressed you learned how to type, seriously,', 'labels': [[5, 13, 'Toxic'], [469, 477, 'Toxic'], [595, 603, 'Toxic']]}\n","{'id': 687, 'text': 'Yeah this is the standard garbage I read in New Age/alien abduction books and magazines when I was an ignorant teenager. \\n\\nSomeone this fruity has no business in public office.', 'labels': [[102, 118, 'Toxic']]}\n","{'id': 688, 'text': 'What future?  And who would be stupid enough to trust him?  He let partisan politics invade at least two serious law enforcement investigations and bungled them both.  He got pushed around by Lowretta , leaked information, and his actions had some minor effect on the 2016 election.  No matter how this turns out, both parties will continue throwing him under every bus that passes by.', 'labels': [[31, 36, 'Toxic']]}\n","{'id': 689, 'text': 'Hubris is such a killer.', 'labels': [[17, 22, 'Toxic']]}\n","{'id': 690, 'text': \"Ramaphosa's words are fake and nothing else. Who wants to believe him\\nOnly dumb people believe him\", 'labels': [[75, 78, 'Toxic']]}\n","{'id': 691, 'text': '\"With Trump it’s hard to distinguish between improvised flourish and deliberate strategy.\"\\nMaybe it\\'s merely outright idiocy.', 'labels': [[118, 123, 'Toxic']]}\n","{'id': 692, 'text': 'i do not like this crowd of perverts\\naloha!', 'labels': [[19, 35, 'Toxic']]}\n","{'id': 693, 'text': \"What would the Liberals and the media do if they didn't have the Conservatives to blame everything on?  Trudeau has been south of the border selling his ray of sunshine bs ever since elected.....and now the big bad Conservatives are to blame for Trudeau and Co.'s bizarre hushed, over the top, and fast tracked payment to Khadr.    Like that would never make it to the US papers..........seriously pathetic.\", 'labels': [[398, 405, 'Toxic']]}\n","{'id': 694, 'text': 'Thought we were supposed to hate russia', 'labels': [[16, 23, 'Toxic'], [28, 31, 'Toxic']]}\n","{'id': 695, 'text': \"you are an azzzzz -  you are unpleasant and insecure - to put it mildly. i won't bother to respond to you anymore - your are a waste, you have no intention on carrying on conversation. -30- (you think it's nuts..because it goes above YOUR head. YOU don't know it's meaning...maybe go wiki it.\", 'labels': [[127, 131, 'Toxic']]}\n","{'id': 696, 'text': 'It\\'s not surprising that you pathetically pivoted to the \"illegal\" conversation given the current political climate. I\\'m sorry that it\\'s so hard for you to relate to the heroism and selflessness this man demonstrated that night. This HUMAN BEING may have prevented countless casualties at the expense of his future physical and mental well-being and here you are spewing nothing but petulant attacks and hateful rhetoric. You are disgusting.', 'labels': [[422, 439, 'Toxic']]}\n","{'id': 697, 'text': \"And the Boston Tea Party was  an act of terror by American Terrorists.  Who cares WHY they did it: Lock 'em up. \\nYou can't fix stupid.\", 'labels': [[127, 132, 'Toxic']]}\n","{'id': 698, 'text': 'Alaska wilderness - 1\\nIdiot - 0', 'labels': [[22, 26, 'Toxic']]}\n","{'id': 699, 'text': 'Sure and we can charge Obama too because he was in office at the time and did nothing to warn the citizens either.  Scapegoating is stupid for lots of reasons.', 'labels': [[132, 137, 'Toxic']]}\n","{'id': 700, 'text': \"Dumbest president ever, notanelite, and there's no post you can make to change that.\", 'labels': [[0, 6, 'Toxic']]}\n","{'id': 701, 'text': 'No need for research with trump. Just make crap up and sheeple follow.', 'labels': [[43, 46, 'Toxic']]}\n","{'id': 702, 'text': '\"Suckers\"  \"stupidly\" \"emotional need to blame others\"\\n\\nWhat \"they got\", at a minimum, was someone who at least pretended that they and their circumstances  were worth attention.  They \"got\" someone who promised something which wasn\\'t just 8 more years of the same.  \\n\\nThey were smart enough to see Trump\\'s warts and say, \"I don\\'t care.  At least he won\\'t buy the election with money from Wall Street. \"  At least he doesn\\'t talk about a dead ambassador and his protectors by saying \"What does it matter, now?\"  \"He is arrogant but he might use that arrogance in my behalf instead of using it to hide his real beliefs  on a private server or behind closed doors while collecting millions from the fat cats in Wall Street.\"\\n\\nI think the Podesta e-mails revealed the true character of Hillary and her party elite handlers and it wasn\\'t  \"stupidity\" to react negatively to what was revealed.', 'labels': [[1, 7, 'Toxic'], [12, 19, 'Toxic']]}\n","{'id': 703, 'text': 'Democrats/Liberals = Sexist Pigs', 'labels': [[0, 17, 'Toxic'], [21, 26, 'Toxic']]}\n","{'id': 704, 'text': 'ibbitson in clearly a lib trolling hack now, the senate is a joke it just caved to justin rather than stand its ground, what a useless bunch of paid losers', 'labels': [[149, 154, 'Toxic']]}\n","{'id': 705, 'text': 'Kalaheo, as a consistent liar and distortionist, you are pathetic', 'labels': [[57, 64, 'Toxic']]}\n","{'id': 706, 'text': 'I think the fine line between maverick and Democrat useful idiot has been crossed.', 'labels': [[59, 63, 'Toxic']]}\n","{'id': 707, 'text': \"Obama didn't lie. It's just that some really stupid people think he did...\", 'labels': [[45, 50, 'Toxic']]}\n","{'id': 708, 'text': 'No it means that in all probability you and your family will not have their heads cut off in public.', 'labels': [[36, 98, 'Toxic']]}\n","{'id': 709, 'text': \"The ignorance of the left is more than disgusting! Chin is using this issue to make himself look 'good' to the loony-toons living on our islands that have no common sense and are unable to think for themselves. Trump is NOT doing anything that other presidents haven't done. What's the big deal - he wants to protect us while liberals keep their heads buried in a place where the sun doesn't shine (not in the sand)! Stupidity abounds on the left...\", 'labels': [[39, 48, 'Toxic'], [417, 445, 'Toxic']]}\n","{'id': 710, 'text': 'Fun? Trapping is fun? By the way, it\\'s \"You\\'re kidding,\" not \"Your kidding.\" You make a fool of yourself every time you post with that handle.', 'labels': [[135, 140, 'Toxic']]}\n","{'id': 711, 'text': 'there is nothing newsworthy that ever apeared on left wing creations, CNN etc, they are a marketing mechanism for DEMOCRATE and hyper socialism.  Ignorant sheep like you watch cnn etc and other left wing media properties falling for the propaganda  for the alt left wing extremist ideology!,,\\n\\nThere i fixed it for you loser!', 'labels': [[146, 159, 'Toxic'], [319, 323, 'Toxic']]}\n","{'id': 712, 'text': 'What a coward.  Take your own but leave innocent people alone.  I feel sorry for the innocent lives lost here but feel nothing for the coward loser that died.', 'labels': [[7, 12, 'Toxic'], [135, 140, 'Toxic'], [142, 146, 'Toxic'], [153, 156, 'Toxic']]}\n","{'id': 713, 'text': \"If you truly believe this country is rooting for trump, you need your head examined. The only thing we are rooting for is for Mueller to box him in a corner and fry him for the whole world to see.\\n\\nTrump doesn't have the mental capacity of my dog. It's hard to rally around a divisive moron.\", 'labels': [[285, 289, 'Toxic']]}\n","{'id': 714, 'text': 'Elton John should sue Donald for using \"Rocket Man\". Damn DOTARD.', 'labels': [[53, 56, 'Toxic']]}\n","{'id': 715, 'text': '\"Critical Reasoning\" is code word for liberal stupidity!  You post some stupidity from a fringe newspaper site (Huffington Dog Post) that no one in their right mind would ever take seriously, about Trump raping a 13 yr old girl and post it as factual, and you say I am off my meds?  Freaking idiot!', 'labels': [[72, 80, 'Toxic']]}\n","{'id': 716, 'text': 'Strada is an idiot.', 'labels': [[13, 17, 'Toxic']]}\n","{'id': 717, 'text': 'Meggsy writes: \"You\\'re a complete idiot.\"\\n\\nIt can be hard to imagine, but THIS is what passes for \"logical argument\" in socialist circles.\\n\\nReally.\\n\\nI blame our education system...', 'labels': [[34, 38, 'Toxic']]}\n","{'id': 718, 'text': 'you would not be allowed to write this crap if we had an anti-catholicaphobia law', 'labels': [[39, 42, 'Toxic']]}\n","{'id': 719, 'text': 'What a silly hat.', 'labels': [[7, 11, 'Toxic']]}\n","{'id': 720, 'text': \"How many of our conservative friends acknowledge the ACLU 'went to bat' for the KKK and their right to demonstrate. However, I doubt the ACLU will defend the feeble-minded imbecile who drove into the counter demonstrators.\", 'labels': [[158, 170, 'Toxic'], [172, 179, 'Toxic']]}\n","{'id': 721, 'text': 'When you really think about it, the VOTERS were incompetent.', 'labels': [[32, 58, 'Toxic']]}\n","{'id': 722, 'text': \"His idiot and racist troll sidekick Bannon isn't helping matters at all, either.\", 'labels': [[4, 8, 'Toxic'], [14, 19, 'Toxic']]}\n","{'id': 723, 'text': 'And who told you about this valley mr. ass?', 'labels': [[35, 41, 'Toxic']]}\n","{'id': 724, 'text': 'What a stupid comment from someone :Named \"CatNamedJava\"!', 'labels': [[7, 12, 'Toxic']]}\n","{'id': 725, 'text': \"It's obvious ...9401doug.. is one of those cretins that either works at farming, or drives the transport trucks from Hell!!!.\", 'labels': [[43, 49, 'Toxic']]}\n","{'id': 726, 'text': \"The only thing funny is watching you squirm as the bubble gets closer to popping. And of course for the hilarious stupidity of upvoting yourself, thus showing why you've earned the title of thread clown.\", 'labels': [[114, 122, 'Toxic']]}\n","{'id': 727, 'text': 'I don\\'t think \"damned liar\" meets CC\\'s civility standards, but that is the term you have chosen to use.', 'labels': [[15, 20, 'Toxic']]}\n","{'id': 728, 'text': 'It\\'s to prevent \"stupid\" from basically committing suicide and the US wasting resources in an attempt to rescue US Citizens trying to get out of NK at some point when \"stupid\" experiences a moment of lucidity and realizes NK is NOT their friend or some utopian paradise!', 'labels': [[17, 22, 'Toxic']]}\n","{'id': 729, 'text': 'Turdo better get on his knees and pucker up for Donald. Donald will just want a kiss on the ass but Turdo will want to give him a BJ', 'labels': [[34, 39, 'Toxic'], [92, 94, 'Toxic']]}\n","{'id': 730, 'text': 'Cleaner air.... from a guy who drives a big Ford diesel.....LOL...hey buddy we are all laughing at you.   I a surprised you are a reader of the G and M..Thought the local Sun rag would be more of your IQ rating.  You do have a post doctorate degree in idiocy dont you??', 'labels': [[252, 257, 'Toxic']]}\n","{'id': 731, 'text': \"WTF ronin did you lose a family member? Obviously no so STFUP. You sick ---- always wiping his --- and then you wonder why it's always damage control for you f------g idiots. Read the f------g article!\", 'labels': [[0, 2, 'Toxic'], [67, 70, 'Toxic']]}\n","{'id': 732, 'text': 'Junior seems to be taking his cue from Kathleen Wynne.\\n\\nTwo incredulously incompetent politicians.', 'labels': [[60, 84, 'Toxic']]}\n","{'id': 733, 'text': \"Oh goody, let's provoke and disparage Russia! Here in Canada we're big and tough and strong, we can handle them... As my server at CANADIAN Tim Hortons says: No Worries! I'm just DYING to see those dozen F18s scramble off the tarmac to engage the enemy, I'm just DYING to see our proud Royalesque Navy go toe to toe with nuclear armed, nuclear powered submarines! Yay! Canada is awesome! We're letting in Refugees and Russia is not! We know everything about them and they know nothing! Yay! My red Roots (TM) hoodie is bulletproof and my Canada Goose (TM) parka is ionizing radiation proof! Yay! And no, we DON'T need the backup of the bloated orange racist and his stupid country to the south either. We are the best!!!\", 'labels': [[16, 22, 'Toxic'], [666, 692, 'Toxic']]}\n","{'id': 734, 'text': 'too little too late, the idiots in Sudbury voted for the fly in liberal.', 'labels': [[25, 30, 'Toxic']]}\n","{'id': 735, 'text': 'What about igniting the terror within with this ban?  Cowardly fools, all of them!  Make no mistake about it, Steve Bannon rules.', 'labels': [[54, 67, 'Toxic']]}\n","{'id': 736, 'text': 'Xavier:  I have no desire to engage with trolls.', 'labels': [[41, 46, 'Toxic']]}\n","{'id': 737, 'text': \"Brian is a complete imbecile. That's just a fact.\", 'labels': [[20, 27, 'Toxic']]}\n","{'id': 738, 'text': 'Heterosexuals do not have sex with juvenile males.\\n\\nGay pedophiles do.', 'labels': [[52, 54, 'Toxic']]}\n","{'id': 739, 'text': 'The Trump idolators, climate denies, government -haters, ad nauseum wallow in their evil, destructive ideology right out of 1930s Germany.  The lame response is some amateur psycho-babble blaming all of the ills on those darn messengers revealing the truth of the idiocy permeating our government and national political structure.  Trump and the Republican Party anti-governing traitors are just the culmination of decades of lies, deceit, and institutonal failure leading to this travesty.  Time for a Revolution.', 'labels': [[221, 224, 'Toxic'], [264, 269, 'Toxic'], [346, 361, 'Toxic']]}\n","{'id': 740, 'text': 'He wants a govt. shutdown??? What an immensely stupid idea.', 'labels': [[47, 52, 'Toxic']]}\n","{'id': 741, 'text': 'Are there really enough red neck idiots in Washington  state to fill up the Xfinity Arena?', 'labels': [[24, 52, 'Toxic']]}\n","{'id': 742, 'text': \"I certainly hope that all these lunatics blaming him for Harvey and Irma haven't finally gotten to him… This is really disappointing if true.  :-(\", 'labels': [[12, 15, 'Toxic'], [32, 39, 'Toxic']]}\n","{'id': 743, 'text': \"Idiot Texas governor already offering up Thoughts and Prayers.\\n.\\nThoughts and Prayers: How to feel like you're helping while not actually helping.\", 'labels': [[0, 4, 'Toxic']]}\n","{'id': 744, 'text': 'whaaaaa, cry babies who dont respect democracy,, losers !', 'labels': [[49, 54, 'Toxic']]}\n","{'id': 745, 'text': \"Any political operative who says they wouldn't use purloined oppo research is a damn liar.\", 'labels': [[80, 88, 'Toxic']]}\n","{'id': 746, 'text': 'I am an independent but why is it that Republicans are always trying to rip off the public?  It is so distressing.  Every time I hear an arrogant, ignorant Republican Congressman they are trying to hurt my single mom and me.  WE have suffered enough poverty for a lifetime!', 'labels': [[102, 112, 'Toxic'], [137, 144, 'Toxic'], [195, 196, 'Toxic']]}\n","{'id': 747, 'text': \"In a sane world, he'd be tied to the glacis plate. Hard to believe( well not really) that that feckless moron could have been president.\", 'labels': [[95, 102, 'Toxic'], [104, 108, 'Toxic']]}\n","{'id': 748, 'text': 'Well, drugs will continue to win, until some innocent cute looking kids repeatedly get ranover by idiots high on dope.', 'labels': [[98, 103, 'Toxic']]}\n","{'id': 749, 'text': 'You Trumpsters are such illiterates...', 'labels': [[24, 34, 'Toxic']]}\n","{'id': 750, 'text': 'remember when you had even a hick up of intelligence? of course not your an idiot', 'labels': [[76, 80, 'Toxic']]}\n","{'id': 751, 'text': 'keep living the delusional fantasies you ignorant idiot,', 'labels': [[50, 54, 'Toxic']]}\n","{'id': 752, 'text': 'This guy is an idiot.  He is lucky to be alive.   The fact that the US spent any time or money on his rescue is amazing.   They should send him the bill.', 'labels': [[15, 19, 'Toxic']]}\n","{'id': 753, 'text': \"Perhaps she can also cover the moron that's supposedly our prime minister.\", 'labels': [[31, 35, 'Toxic']]}\n","{'id': 754, 'text': 'Do not BLAME the Gun.  GUNS misfire because of IDIOT, STUPID, IRRESPONSIBLE owners.', 'labels': [[47, 51, 'Toxic'], [54, 59, 'Toxic']]}\n","{'id': 755, 'text': 'Who left the bag of idiots open?', 'labels': [[20, 25, 'Toxic']]}\n","{'id': 756, 'text': 'There is only one problem with your reasoning.\\nNo one in the U.S., in the last 47 years, has been killed by a terror attack by immigrants from the seven Muslim-majority countries Trump has targeted with immigration bans, according to the Cato Institute.\\nYou say: \"Allowing people to come into our country when we have no proof of who they actually are is total stupidity. \"\\nReaching a conclusion based on false premises is even more stupid.\\nBased on fact, there has been no threat from these countries.', 'labels': [[433, 438, 'Toxic']]}\n","{'id': 757, 'text': \"It's easy to hate Boy-Roy; the stupidity just keeps on giving.\", 'labels': [[31, 39, 'Toxic']]}\n","{'id': 758, 'text': \"Flipping businesses, declaring bankruptcies, stiffing your creditors, all the while proclaiming you are brilliant doesn't make you so. It means the well paid accountants you hired are doing their job. He better hope his papers are in order and the next real estate collapse doesn't finish him off. He is nothing but that smug loser that cheats the other guy to pay himself. Not you. Himself.\", 'labels': [[282, 287, 'Toxic'], [326, 330, 'Toxic']]}\n","{'id': 759, 'text': 'Trump is a danger to America.  He should not be allowed to putt he world at danger by being the sole authority to drop nukes on Korea and end the world as we know it.  This jerk is a fool.  Shame on Republicans and their disgraceful base for putting AMERICA IN SUCH DANGER.', 'labels': [[167, 186, 'Toxic']]}\n","{'id': 760, 'text': \"Kick her to the curb...That's what she deserves for selling out her country.\", 'labels': [[0, 3, 'Toxic'], [10, 17, 'Toxic']]}\n","{'id': 761, 'text': 'McCain has been a loser his entire life.', 'labels': [[18, 22, 'Toxic']]}\n","{'id': 762, 'text': 'Watch Trump nominate one of his sons for the position.  Don\\'t be duped by this master con artist.  His ulterior motive for his \"crazy like a fox\" antics probably is because he wants the Republicans to impeach him sooner rather than later from a job he never wanted in the first place, and go down in flames like a martyr to his die-hard supporters instead of a disgraceful fool.', 'labels': [[128, 132, 'Toxic'], [328, 335, 'Toxic']]}\n","{'id': 763, 'text': \"Here's another sad example of weekend hikers not fully grasping the environment, which has no tolerance for short cuts. Mountaineering in Colorado requires preparation, respect for the terrain and discipline. You're required to have a license to fish but not one to climb 14ers — silly!\", 'labels': [[15, 17, 'Toxic']]}\n","{'id': 764, 'text': \"That moron is going to crash the world's economy now.  Is there anything that fool touches that doesn't end up in rubble?\", 'labels': [[5, 9, 'Toxic'], [29, 37, 'Toxic'], [78, 81, 'Toxic']]}\n","{'id': 765, 'text': \"For the way Coach MacIntyre handled the Joe Tumpkin incident and for the lack of courage on behalf of The University of Colorado in not firing him...Karma's a bitch.\", 'labels': [[159, 163, 'Toxic']]}\n","{'id': 766, 'text': 'Die yuppie scum.', 'labels': [[11, 14, 'Toxic']]}\n","{'id': 767, 'text': \"Can't believe he had the balls (and stupidity) to do it. Now let's see who moves to override and who votes to override.\", 'labels': [[36, 44, 'Toxic']]}\n","{'id': 768, 'text': 'Ha! I disagree with Schumer and Pelosi almost 100% of the time - but my bet would be on them snookering the idiot Trump.', 'labels': [[39, 44, 'Toxic']]}\n","{'id': 769, 'text': 'As John Wayne said.\\n\"Life is hard: it\\'s harder if you are stupid\"', 'labels': [[8, 12, 'Toxic'], [58, 63, 'Toxic']]}\n","{'id': 770, 'text': 'Sinclair Lewis wrote \"It Couldn\\'t Happen Here\" in the 1930s after the beginning of the Great Depression.  His prophesy comes true in 2016 as a stupid citizenry follows a spoiled, rich, bigoted racist into power to overthrow the Constitutional Republic.  And so it happens.', 'labels': [[143, 148, 'Toxic']]}\n","{'id': 771, 'text': 'These two schmucks wore slippers to their bookings? No class.', 'labels': [[10, 17, 'Toxic']]}\n","{'id': 772, 'text': 'here wo go again some jerk did not listen to the cops. its pretty much kindergarten stuff....just follow simple orders.', 'labels': [[22, 25, 'Toxic']]}\n","{'id': 773, 'text': 'Hey dolphin. Those darn raping muslims have some catching up to do.  \\n\\n\"The figures released February showed 7% of Australian priests, as well as other non-ordained religious brothers and sisters and other Church personnel, were accused of abusing children between 1950 and 2010.\\n\\nThe Commission found that approximately 40% of the priests from the religious order Brothers of St. John of God have allegations of abuse against them during this period.\"', 'labels': [[19, 22, 'Toxic'], [24, 37, 'Toxic']]}\n","{'id': 774, 'text': 'NIGERS WERE SEEN SWIMMING in the POND\\nThe FILTHY NIGERS are DISEASED SCUM\\nEXTERMINATE ALL the MONKEY NIGERS', 'labels': [[101, 106, 'Toxic']]}\n","{'id': 775, 'text': 'This basically confirms social media as the primary source of peoples\\' information, because Facebook and Twitter have been flooded with dubious links, memes, half-truths, and other bogus \"news\" for the last week. And people are stupid enough to believe them.', 'labels': [[228, 233, 'Toxic']]}\n","{'id': 776, 'text': 'or just his situation as a petty criminal and a loser.', 'labels': [[27, 40, 'Toxic'], [48, 52, 'Toxic']]}\n","{'id': 777, 'text': \"Idiot isn't a hate word. And you're an idiot. Flag away coward.\", 'labels': [[39, 43, 'Toxic'], [56, 61, 'Toxic']]}\n","{'id': 778, 'text': 'Pure fake news.  You need to be banned for putting out blatant lies.  You are sick!', 'labels': [[0, 8, 'Toxic'], [78, 81, 'Toxic']]}\n","{'id': 779, 'text': \"That's a whole of stupid for only being 20 years old.\", 'labels': [[18, 23, 'Toxic']]}\n","{'id': 780, 'text': 'Yup, the first very ignorant one just did below this comment!!! AKA scooters!!!!!', 'labels': [[20, 27, 'Toxic']]}\n","{'id': 781, 'text': 'I lived in one. They are junk. All byler is doing is raking in subsidies and selling crap homes to fools', 'labels': [[99, 103, 'Toxic']]}\n","{'id': 782, 'text': \"She's just another political piece of shit exploiting the fears of morons for her own support. As an athiest I hate everything about her and her radical Christian terrorist tactics\", 'labels': [[67, 72, 'Toxic']]}\n","{'id': 783, 'text': \"Obamacare is on it's last gasping breaths.   You idiots who don't want something else passed that's going to save your free healthcare are kind of stupid.   But if you block anything else that gives you socialized healthcare it's your own fault for being unbudging.  You can go back to nothing when nothing further is passed and Obamacare is just an ugly memory.\", 'labels': [[49, 54, 'Toxic'], [147, 152, 'Toxic']]}\n","{'id': 784, 'text': \"WAH-WAH-WAH!  Nasty liberal media is picking on poor Donald by reporting what he's said.\", 'labels': [[14, 18, 'Toxic']]}\n","{'id': 785, 'text': \"Why do you suppose that Putin is helping the Syrians, is it because he likes Syrians? If he likes Syrians why didn't Russia take any refugees? So why has he helped kill so many, so what will stop him from killing more, nothing so far. So why do we have troops over there and in the middle east even, just to make men out of boys. Maybe we should just build a bunch if golf courses over there and frustrate the hell out of the Syrians. There are no answers to the nonsense.\", 'labels': [[157, 167, 'Toxic'], [205, 216, 'Toxic']]}\n","{'id': 786, 'text': \"You all need to quit talking about shit that is irrelevant. What's relevant is that a beautiful young woman is gone. Say some prayers for her children that got left behind and her mother who is devastated. It doesn't matter what info the police released or didn't release. It's really none of anyone's business until it is determined what exactly happened. The register guard really needs to stop with the publicity shit as well and allow a mother to grieve for her daughter without constantly having that wound reopens. Have some respect .\", 'labels': [[35, 38, 'Toxic']]}\n","{'id': 787, 'text': 'No one needs a lecture on \"disrespectful actions\" from a Trump-Traitor. \\n\\nIsn\\'t there a Gold Star family you could be attacking right now?', 'labels': [[63, 69, 'Toxic']]}\n","{'id': 788, 'text': \"All the environmentalists in the world can't stop an idiot who doesn't put their campfire out properly.\", 'labels': [[53, 57, 'Toxic']]}\n","{'id': 789, 'text': 'What a dick.', 'labels': [[7, 10, 'Toxic']]}\n","{'id': 790, 'text': 'Hey now, you can\\'t pose intellectual questions to idiots that just want to \"blow things up\".', 'labels': [[50, 55, 'Toxic']]}\n","{'id': 791, 'text': 'jimbo you trash, typical alt left lunatic, someone comes up with a suggested alternative and you immediately call him a denier!! then after i call you out being the coward you are, you edit your post to this lunatic stupidity about trump, well loser its the usa under trump that is going to get past the alt left wing bs carbon taxing nutters like canada and enjoy the prosperity while we begin to do the damage to our people', 'labels': [[10, 14, 'Toxic']]}\n","{'id': 792, 'text': 'Which sewer do you live in, Stewart?', 'labels': [[6, 10, 'Toxic']]}\n","{'id': 793, 'text': \"So... She says stuff. So does Rachel Maddow, Chris Matthews and Glenn Connectthedots. You like her? Go see her. You don't - go mow your lawn. Got a neighbor who is old and infirm, go help her out. You like her and don't like what some troll says about her? Ignore him. Just like any sensible liberal would if Maddow was coming to town. Go have a life ... all of you knuckleheads.\", 'labels': [[124, 139, 'Toxic'], [366, 377, 'Toxic']]}\n","{'id': 794, 'text': \"Wanting our president to fail to analogous to wanting the pilot of the airplane to fail. Stupid. And the march for equality, mutual respect, inclusiveness and appreciation of diversity doesn't really want pro-life women there. Stupid AND hypocritical.\", 'labels': [[89, 94, 'Toxic']]}\n","{'id': 795, 'text': 'and yet another sheep of stupid, so you are going to vote for the most corrupt incomepetent liberals who have all but destroyed our economy over some accusations? man you are one of the problems we dont need', 'labels': [[25, 30, 'Toxic']]}\n","{'id': 796, 'text': 'Naw. Donny will just double down on the racism/stupidity, as usual.', 'labels': [[41, 55, 'Toxic']]}\n","{'id': 797, 'text': 'How is it the white people are always blamed for islamophobia and being racist. It is time the government opened there eyes and put these type of comments in the right order. It is the museums and other middle eastern people, that will not or refuse are customs and the way we live. They come to Canada and want us to change to their way of life. These people or most of these people, do not even try to get along with Canadian people. They usually only associate with there own race, and the kids go around in gangs looking for trouble with white people.\\nI have no idea why the government, always make it seem it is the white people that cause these racial issues. Why can the government start to look after Canadians, and tell these people they have to adjust to are way of living 100%. And if they are not willing to do this, then leave are country.\\nI am just one white person out of many, that are deemed to be a racist. And one of many that has had it, with being called a racist.', 'labels': [[10, 18, 'Toxic'], [49, 60, 'Toxic']]}\n","{'id': 798, 'text': \"Well yes, if I'm murdered, that's what I'll most likely do.  Die.\\n\\nDamn, I'd hate to be a foreigner trying master this language.\", 'labels': [[17, 24, 'Toxic'], [67, 70, 'Toxic']]}\n","{'id': 799, 'text': \"Does that mean we can call him a 'loser', now?  Just askin'...\", 'labels': [[34, 38, 'Toxic']]}\n","{'id': 800, 'text': \"AKSnowman, you are either an idiot or a liar. I'm leaning towards liar, because even an idiot would know what kind of weapon they carried in the military.\", 'labels': [[29, 33, 'Toxic'], [40, 43, 'Toxic'], [88, 92, 'Toxic']]}\n","{'id': 801, 'text': 'You spelled your last name wrong; it should be \"Fools.\"', 'labels': [[48, 52, 'Toxic']]}\n","{'id': 802, 'text': 'What is \"beer muscles with a side of fireball\"?  Other than pure stupidity of course.', 'labels': [[65, 73, 'Toxic']]}\n","{'id': 803, 'text': 'Remember those little computer babies high school girls took home and nursed to learn the real experience of having babies. They would cry all night, required feeding every few hours 24 hours every day, make wastes and required diaper changes, make them wash diapers and clothes daily, cry to make them hug, kiss, and carry them, and so on. Should restart that as a required course for all high school boys and girls. Best way to teach everybody to wear condoms or practice responsible contraception. They were invented for a good reason. Use them stupid heads.', 'labels': [[548, 553, 'Toxic']]}\n","{'id': 804, 'text': \"I tried to watch the Vice special but apparently need a subscription to HBO. In the intro President Obama said he had a goal to reach across party lines and build consensus. I'm paraphrasing but HUH? That's ridiculous. How many meetings did Obama have with the Republican leadership these past eight years, like maybe three? I watched the interview with Trump that Chris Wallace did today. Will be on TV later and is on Youtube now. I think people would have to be stark raving mad not to be able to agree with much of what Trump says. https://www.youtube.com/watch?v=lysx7s9ocJU\", 'labels': [[207, 216, 'Toxic']]}\n","{'id': 805, 'text': \"Tiger doesn't change his strips, plus, his followers all point to his multiple bankruptcies and thousands of lawsuits as some great 'business record' to be proud of ... \\n\\nStupid is as stupid does, Gump was right.\\n\\nRepublicans need to be shot into the sun.\", 'labels': [[171, 189, 'Toxic']]}\n","{'id': 806, 'text': 'Got a love these jerks at the AUSCP.\\n\\nHow dare you, Pope Francis, attack Gay Priests and support the idea they are less worthy for priesthood.  Don\\'t you know that you should follow the Association of US Catholic Priests and only attack the human dignity of all women called to priesthood and equal ordination.  Only women aren\\'t really people.  You might actually hurt men when you strip their souls by taking away their experience of equal sacredness by taking away a whole sacrament without any real reason.  AUSCP only feels women are not harmed by their forced voicelessness in our church and sacramental slavery and that is what we stated to you Pope Francis in our letter just two years ago - please limit only women to deacons. \\n\\n\"A Statement  released, by the 1,200-member Ohio-based organization charged that \"the terms \\'homosexual tendencies\\' and \\'deep-seated homosexual tendencies\\' are ambiguous and disrespectful of the personhood of those who identify with a homosexual orientation.\"', 'labels': [[17, 21, 'Toxic'], [73, 83, 'Toxic']]}\n","{'id': 807, 'text': 'So you think the remedy to Clinton lies is to elect a bigger liar named Trump?', 'labels': [[61, 64, 'Toxic']]}\n","{'id': 808, 'text': 'John McCain is a media whore as is  Graham.', 'labels': [[23, 27, 'Toxic']]}\n","{'id': 809, 'text': 'Bull shit he should be in prison, Obama and Hillary same cell.', 'labels': [[5, 8, 'Toxic']]}\n","{'id': 810, 'text': 'Nope, its a clown catcher, every, time and it, works. Keep pumping your own old bald tires, fool.', 'labels': [[0, 3, 'Toxic'], [92, 95, 'Toxic']]}\n","{'id': 811, 'text': 'Trump looks foolish already.', 'labels': [[12, 18, 'Toxic']]}\n","{'id': 812, 'text': 'Your emoji sucks!', 'labels': [[11, 15, 'Toxic']]}\n","{'id': 813, 'text': 'There is no end to the stupidity of the American public.', 'labels': [[23, 31, 'Toxic']]}\n","{'id': 814, 'text': 'State Assemblyman?  What State do you actually live in Ward?  \\n\\nCertainly not Oregon.  No resident of Oregon could actually be that ignorant!\\n\\nOf course, anyone who thinks a State official (whatever they might be called) can overturn the Constitution of the United States could be that ignorant, I suppose.', 'labels': [[132, 139, 'Toxic']]}\n","{'id': 815, 'text': \"you are out of line; i've had excellent service for many years from every rep i've worked with. why do people think being a jerk is funny\", 'labels': [[124, 127, 'Toxic']]}\n","{'id': 816, 'text': '@westernPatriot said; \"...the Queen is MERELY a figurehead  and has NO LEGAL authority\"\\n\\nWhy keeping  her then ?...on massif Canadian bank note ?...pictures of her all over the place in Parlement ?...oath to her when being a Canadian citizen ?......And not to mention your admiration backward without limit for the monarchy, Canada will not become a “real country” until YOU stop being a boot-licking colony.', 'labels': [[388, 406, 'Toxic']]}\n","{'id': 817, 'text': \"An irrational person (criminal/mentally ill) can use anything to justify criminal or anti-social behavior.  The media jumping on an innocent comment and warping it simply provides more opportunity for irrational people to latch on to something.  The Dallas police murderer, Orlando night club murderer, abortion doc murderer, and as you referred, a long sad history of irrational people doing what they want.  There will always be whack jobs who do whatever they want.  Trump's comments were in no way meant to incite violence and to say so is simply playing the outrage card and does nothing to promote civil discourse.  Twisting comments to make political hay is disgusting and intellectually dishonest.\", 'labels': [[3, 12, 'Toxic'], [22, 38, 'Toxic'], [73, 80, 'Toxic'], [264, 271, 'Toxic'], [293, 300, 'Toxic'], [316, 323, 'Toxic'], [369, 378, 'Toxic'], [665, 674, 'Toxic']]}\n","{'id': 818, 'text': \"I don't think the feds should jail these morons, but a whale going up a fresh water is pretty much dead\", 'labels': [[41, 46, 'Toxic']]}\n","{'id': 819, 'text': 'well flounder, you sure didn\\'t like \"fat, drunk and stupid...\" ..', 'labels': [[37, 57, 'Toxic']]}\n","{'id': 820, 'text': \"Defending Trump? You're sick.\", 'labels': [[24, 27, 'Toxic']]}\n","{'id': 821, 'text': 'i cant fucking beleive thet charge for this search it fucking cruel fuck this shit ,   they want to charge someone to search for there child who is in danger dont we pay taxes for this shit.  wtf why would it cost more than police driving there car all day looking for crime , they feel like a crime took place so when theres actual need for the goverment or police they are not able too unless paid for , but when no crime is committed there right up ur ass trying to vindicate one. what do rthe dogs have something better to do instead gimme a break souless  .... people fuckin outraged', 'labels': [[7, 13, 'Toxic'], [68, 71, 'Toxic'], [78, 81, 'Toxic'], [573, 578, 'Toxic']]}\n","{'id': 822, 'text': 'I would have been a reckless idiot if having engaged or even encouraged the guy.  I would have been justified in standing and defending my ground, but nevertheless, stupid for doing so where there were free avenues available for me to easily retreat.  Here, one or the other would lose very badly , which is an avoidable cost to society and disrespectful to Ke Akua who created all life.  It was good for me that the \"make big body\" guy abruptly departed, as he was likely challenging some hallucination rather than me.  It was very, very comforting seeing him bob and shadowbox the air farther and farther from his empty car in only clingy trunks, having had no gun or knife at hand.  And my truck has reverse gear.', 'labels': [[20, 33, 'Toxic'], [165, 170, 'Toxic']]}\n","{'id': 823, 'text': 'Maybe we can get those people to hand feed the lions at the zoo.   Next time you want to see a goat, Google it you idiots.', 'labels': [[115, 120, 'Toxic']]}\n","{'id': 824, 'text': 'Yes, any dummy who initiates a war with the press, bringing up accusations of \"fake news\" in anticipation of questions he knew were going to come up regarding his team\\'s deliberate interactions with Russian officials, is a traitor. Any ldiot who seeks to restrict/abolish the First Amendment for his own selfish gains should be impeached. #MAGA!', 'labels': [[9, 13, 'Toxic']]}\n","{'id': 825, 'text': 'Shut the fuck up you stupid bitch', 'labels': [[21, 26, 'Toxic'], [28, 32, 'Toxic']]}\n","{'id': 826, 'text': '20 million \"motor voter\" votes were cast and counted.  They ALL went Demo-liberal.  I\\'m being VERY generous in proposing only 5 of 20 million cast, were illegals.  Of course they voted, they\\'re not idiots.  Stick your head back in the sand, I\\'m sure it\\'s comforting.', 'labels': [[198, 203, 'Toxic']]}\n","{'id': 827, 'text': 'Ralph Goodale. Capable guy in a playpen of fools.', 'labels': [[43, 47, 'Toxic']]}\n","{'id': 828, 'text': 'Once again, Justin True Dope proved that he is an idiot.  Time to retire him and his fake smile.', 'labels': [[50, 54, 'Toxic']]}\n","{'id': 829, 'text': 'You, Mr. Grisham, are a complete and total jerk using religion as an excuse for your mean behavior.', 'labels': [[43, 46, 'Toxic']]}\n","{'id': 830, 'text': \"Siemian's HORRIBLE. And it's not just the ridiculous interceptions. He's terrible in literally EVERY facet of the game. Even when the pocket's clean, his throws are rarely on target. If there IS pressure, he doesn't feel it and gets sacked &/or fumbles. But if there ISN'T pressure, he sees ghosts and panics ANYWAY. And he COMPLETELY stares down his primary receiver.\\nAnd THEN, he throws a crucial 2 point conversion WAY out the back of the end zone, when it would've been better to throw it DIRECTLY to a Chief, like he did numerous OTHER times during the game, & at least they might've accidentally TIP it to a Bronco. When he AIR MAILED it 10 feet over his head, DT had NO chance. \\nAnd Joseph? We heard that he was such a red hot coaching commodity, but the FIRST time I heard him try to speak, my heart dropped. And AGAIN, he said that we CAN'T make a QB change if it's a 2 possession game. WTF?! So if a QB throws 6 picks but the D balls out, we can't bench the QB?!\\nThese 2 are KILLING us.\", 'labels': [[42, 51, 'Toxic']]}\n","{'id': 831, 'text': 'The stupid is strong among Trump Chumps today.', 'labels': [[4, 9, 'Toxic']]}\n","{'id': 832, 'text': 'Yup, once there were enough other senators to kill it she stepped forward in the elevator.  The same type of crap she pulled with DeVoss.......  She did nothing to kill this.  Do not be sucked in by her BS.  What a pathetic move from an utter coward.', 'labels': [[109, 112, 'Toxic'], [215, 222, 'Toxic'], [243, 248, 'Toxic']]}\n","{'id': 833, 'text': \"I wonder when the prime minister was a bouncer if he didn't say something stupid about women but wasn't caught on tape.\", 'labels': [[74, 79, 'Toxic']]}\n","{'id': 834, 'text': 'I don\\'t distrust the \"... youth of America\" because they\\'re radical and dangerous; I distrust them because they are pig ignorant and feel really good about it.', 'labels': [[116, 118, 'Toxic'], [120, 127, 'Toxic']]}\n","{'id': 835, 'text': \"Well, that may be your hate-filled, ignorant-as-usual and worthless opinion, but it's yours, and everyone's entitled to theirs, no matter how stupid.\", 'labels': [[36, 43, 'Toxic'], [142, 147, 'Toxic']]}\n","{'id': 836, 'text': \"You may be right, it's often a waste of time to respond to these sorts of morons.\", 'labels': [[74, 79, 'Toxic']]}\n","{'id': 837, 'text': 'Ah, so sad. It certainly does seem to bother the trolls.', 'labels': [[49, 54, 'Toxic']]}\n","{'id': 838, 'text': \"You can't fix stupid.\\n\\nI'm sure they had absolutely no intention of coming to Canada and intended to stay in America. Trump's election and Trudeau's idiotic invitation for everyone unwelcome in America to come to Canada is why they are coming. They don't want to be here but they're not wanted in America.\", 'labels': [[14, 19, 'Toxic'], [149, 155, 'Toxic']]}\n","{'id': 839, 'text': 'Sharing mailing lists is not part of conservative principals and not an ideology in which I share.\\n\\nAs in other parties, there are a lot of young staffers who think that they are clever, but are actually  social morons.', 'labels': [[212, 217, 'Toxic']]}\n","{'id': 840, 'text': \"If he wasn't such a useless, fake, attention seeking, hypocrite, I would be more impressed and dressing up like superman definitely goes against his true character, I think Cruella Deville or any other evil character would have been a better suit.\", 'labels': [[54, 62, 'Toxic']]}\n","{'id': 841, 'text': 'wench and evil whore o f the first order!', 'labels': [[15, 19, 'Toxic']]}\n","{'id': 842, 'text': 'a moron is running the world!', 'labels': [[0, 27, 'Toxic']]}\n","{'id': 843, 'text': '?? carbon tax  votes is not a % of all he does, stupid.', 'labels': [[48, 53, 'Toxic']]}\n","{'id': 844, 'text': 'You are an idiot', 'labels': [[11, 15, 'Toxic']]}\n","{'id': 845, 'text': 'hey idiot, this is about Ontario not harper, get over it, save the deflection trolling bs', 'labels': [[4, 8, 'Toxic'], [78, 85, 'Toxic']]}\n","{'id': 846, 'text': 'Fool', 'labels': [[0, 3, 'Toxic']]}\n","{'id': 847, 'text': 'Pray thee tell why. Or are you the only one that gets to call other comments stupid and get past the \"civility\" filter?', 'labels': [[77, 82, 'Toxic']]}\n","{'id': 848, 'text': \"You won't get your country back by following racist idiots.\", 'labels': [[52, 57, 'Toxic']]}\n","{'id': 849, 'text': '\"Conservatives\" conserving nature and the world we live in?  That\\'s just silly.', 'labels': [[73, 77, 'Toxic']]}\n","{'id': 850, 'text': 'chen you idiot', 'labels': [[9, 13, 'Toxic']]}\n","{'id': 851, 'text': 'This is a stupid message board. I suppose this comment will suffer the same fate as my other one. Is it a good comment ? Is it civil ? Well with all due respect....GO FUCK YOURSELVES !', 'labels': [[10, 15, 'Toxic']]}\n","{'id': 852, 'text': 'weirdos. The \"devil\" is controlling the world?? So WHO made the devil or ALLOWED the devil to control the world?\\n\\nWHO made the earth with earthquakes and tsunamis along with asteroids, droughts etc??\\n\\nWHO made animals attack with savagery and fangs, poison sacs etc?', 'labels': [[14, 18, 'Toxic'], [64, 68, 'Toxic'], [85, 89, 'Toxic']]}\n","{'id': 853, 'text': 'You appear ignorant that the \"torrents\" of illegal immigrants that entered during the previous administrations where always subject to ridiculous appeal court processes and never deported.  That is about to change ... and Canada should copy.', 'labels': [[11, 18, 'Toxic'], [135, 144, 'Toxic']]}\n","{'id': 854, 'text': \"It won't be - this is going to be so monitored that stupid stoners will continue whining from their parents' basements.\", 'labels': [[52, 57, 'Toxic']]}\n","{'id': 855, 'text': \"I'm as conservative as they come. But I don't want to hear about abortion or gay marriage or sex education or bathrooms. \\n\\nThat ship has sailed.\\n\\nStop wasting our time with distractions. I'm no fan of any of the Clintonistas, but James Carville was right. It's the economy, stupid.\", 'labels': [[77, 79, 'Toxic'], [274, 279, 'Toxic']]}\n","{'id': 856, 'text': 'aa the usual left wing attack of stupidity is on full speed!,, what is extreme is the left wing crying that wont stop', 'labels': [[33, 41, 'Toxic'], [96, 116, 'Toxic']]}\n","{'id': 857, 'text': 'Blah, blah, blah \"grab their p*%#*\" blah, blah \"I moved on her like a bitch\" blah, blah, blah....', 'labels': [[70, 74, 'Toxic']]}\n","{'id': 858, 'text': 'Mr. Stachelrodt was killed with a \"punch knife\" this is not a tool like a pocket knife or multi tool, this thing is a weapon with only one use - to stab someone with! Period, plain and simple! Consider that in this \"self defense\" crap!', 'labels': [[230, 233, 'Toxic']]}\n","{'id': 859, 'text': 'Pus, it made Obama look like an idiot.', 'labels': [[32, 36, 'Toxic']]}\n","{'id': 860, 'text': 'SCUM. Like trump and his family. Die.', 'labels': [[0, 3, 'Toxic'], [33, 35, 'Toxic']]}\n","{'id': 861, 'text': '\"He is arrogant, condescending and full of himself\" Sounds like the kind of guy that got shot in the back by his own troops in Vietnam.\\n\\nDean Vernon Wormer: \"Put Neidermeyer on it. He\\'s a sneaky little _____ just like you.\"', 'labels': [[7, 14, 'Toxic']]}\n","{'id': 862, 'text': \"Liberals & Trudeau present this BS as good news and we're stupid enough, or so in love with his Flounciness that we suck it up!\", 'labels': [[58, 63, 'Toxic']]}\n","{'id': 863, 'text': \"I have never liked this man more. It's about time someone called it like it is with Trump - he's a disgusting cretin.\", 'labels': [[99, 115, 'Toxic']]}\n","{'id': 864, 'text': \"It's is probably more common than you realize having experience and still screwing up.  My ex was in the AF and his job was combat arms training and maintenance (CATM).  He was emptying out his gun one day, but got distracted.  He thought he had cleared his weapon and so he fired the gun pointing at the car.  The bullet ricocheted off the trunk and out the window in the direction of people standing outside.  One of his fellow CATM members once thought he had cleared his weapon and so pulled the trigger.  He was in his truck and I think he shot his radio.  You'd think an AF Cop would know how to drive, but one hit me on Elmendorf AFB causing $5k in damage.  Military can be very stupid too.\", 'labels': [[74, 84, 'Toxic'], [686, 691, 'Toxic']]}\n","{'id': 865, 'text': 'darn federal over-reach', 'labels': [[5, 11, 'Toxic'], [18, 22, 'Toxic']]}\n","{'id': 866, 'text': 'Unlike Jim, I don\\'t think you\\'re the nastiest person, but you are contradicting yourself here.\\n\\nYou\\'re naming and disdaining several dangerous and violent people as \"the nastiest\" or among the nastiest, while at the same time, earlier in the thread, you\\'re calling for mollycoddling and babying (paraphrased) the guy shooting near the highway and threatening people.  \\n\\nWhich is it?  Violent people are nasty? Or they\\'re pathetic people who need a warm blankie and \"understanding?\"', 'labels': [[166, 177, 'Toxic']]}\n","{'id': 867, 'text': 'All we got yesterday was confirmation that Comey was the leaker and that his alibi for why he did it does not hold water, ie dates dont match up.\\nSeems to me that make Comey a liar,', 'labels': [[176, 179, 'Toxic']]}\n","{'id': 868, 'text': \"When your sorry ass gets beat & abused by them,  I won't be there but to laugh at you. I've seen their treatment of women & families & it's wrong!!  You sit here in you little corner of the country & have no idea of the things that go on. I've been to the Middle East & seen it. We need to take care of our US CITIZENS first & get this country back on track. We don't need anymore outsiders coming into this country & bleeding it dry. Let's fix our own internal problems first for our Rightful Citizens then maybe look at that. Japan isn't taking any refugees for the simple answer of caring for its own CITIZENS first. These folks will bring harm to the US just like they have in other countries along with protests & property damages. They aren't civil.\", 'labels': [[16, 37, 'Toxic'], [604, 611, 'Toxic']]}\n","{'id': 869, 'text': 'Oh, bullshit. Your opinions are as worthless as a word from Trump is a lie.  Is that all you\\'ve got, the worn out, pathetic and clearly wrong \"sore loser\" argument?  Are the Federal courts sore losers? Are all the AGs, legal scholars and Republican attorneys who have opined the EO is illegal sore losers? The only sore losers I see are Trump, his brown-nosing supporters and his cabinet.  It\\'s a Muslim ban and that is illegal.', 'labels': [[4, 11, 'Toxic'], [148, 152, 'Toxic'], [194, 199, 'Toxic']]}\n","{'id': 870, 'text': 'Then keep your damn pants zipped, Joel, and lay off the Viagra.', 'labels': [[15, 18, 'Toxic'], [52, 61, 'Toxic']]}\n","{'id': 871, 'text': 'Lay offs suck and the legislatures need to do their job. -BUT- Anchorage needs to stop the whining and crying and implement a Citywide sales tax...', 'labels': [[9, 12, 'Toxic'], [91, 97, 'Toxic']]}\n","{'id': 872, 'text': \"So you're a troll then.  At least you confirm it.\", 'labels': [[12, 16, 'Toxic']]}\n","{'id': 873, 'text': 'You are ignorance personified.', 'labels': [[0, 28, 'Toxic']]}\n","{'id': 874, 'text': \"You are a troll.\\nYou're not 907AK, you're an impostor.\", 'labels': [[10, 14, 'Toxic'], [45, 52, 'Toxic']]}\n","{'id': 875, 'text': \"OMG,what a room of losers.Looks like Ted Mack amateur hour.If you added them all up they wouldn't equal one brain between them .As for ted nugent,he hasn't been a driving force in the music scene since the 70's.What a burnt out hasbin.\", 'labels': [[19, 24, 'Toxic']]}\n","{'id': 876, 'text': 'How hypocritical of the CPC supporters when Tubby spent more than that on the Economic Action Plan propaganda for a non-existent program.', 'labels': [[4, 15, 'Toxic']]}\n","{'id': 877, 'text': 'So, if this is accurate, which I doubt, extremists Muslims attack and kill Britons in Britain and there is a backlash against extremist Muslims by Britons in Britain.  Go figure.', 'labels': [[15, 22, 'Toxic'], [51, 57, 'Toxic']]}\n","{'id': 878, 'text': 'Stupid owner. Poor dog that belongs to her...\\n\"Atta girl!!\" to the woman who broke the window.', 'labels': [[0, 5, 'Toxic']]}\n","{'id': 879, 'text': \"Another story about the pathological lying from Trump.\\n\\nTrump is obviously insane.  It's remarkable that his sycophant followers ignore his mental illness.\", 'labels': [[37, 41, 'Toxic'], [75, 80, 'Toxic'], [109, 117, 'Toxic']]}\n","{'id': 880, 'text': 'Trump is a massive idiot who did not listen to the military apparatus or the intelligence reports that stated they had no evidence Sarin gas  was used.  Instead he jumpe dthe gun after seeing picture of dying children and  went ahead created another international incident by using the mother of all bombs on a target that contained no chemical weapons. Now everyone is trying to cover up his mistake. \\n\\nhttps://www.welt.de/politik/ausland/article165905578/Trump-s-Red-Line.html', 'labels': [[19, 23, 'Toxic']]}\n","{'id': 881, 'text': 'Time for Toronto to secede from Ontario.  Wynne is an economic imbecile.', 'labels': [[63, 70, 'Toxic']]}\n","{'id': 882, 'text': 'Would you prefer they do the Mandan dance?  Notice I didn\\'t say \"silly\" out of respect for their culture.', 'labels': [[65, 69, 'Toxic']]}\n","{'id': 883, 'text': 'Bill Beckel was a pain in the  butt--glad he is gone!  Whenever he was on the show I muted it so I would not have to listen to his nonsense.', 'labels': [[31, 34, 'Toxic'], [131, 138, 'Toxic']]}\n","{'id': 884, 'text': 'And who do we blame his stupidity on?', 'labels': [[24, 32, 'Toxic']]}\n","{'id': 885, 'text': 'The government is mad because those kids should be off to war somewhere - not fooling around like idiots.', 'labels': [[98, 103, 'Toxic']]}\n","{'id': 886, 'text': 'Shit for brains is too kind.', 'labels': [[0, 3, 'Toxic']]}\n","{'id': 887, 'text': \"Allowing independents to vote in primaries is completely moronic. Can't believe Colorado was stupid enough to allow this nonsense.\", 'labels': [[57, 63, 'Toxic'], [93, 98, 'Toxic']]}\n","{'id': 888, 'text': \"We really do have a bunch of idiots in the legislature. Excuse me they got additional pay for the special sssion. You all got paid extra for something that could have been done during the regular session. It took you people three days to do what you couldn't do in 90 days RIGHT ?  And you took care of our (don't know who voted for him) cry baby mayor.  I really can't see how anyone can approve of a project that really is costing (this is not the end) an outrageous amount. The smartest thing to do is stop it at middle street and expand/improve the already best bus system. At this point the federal monies are just incidental to the project(as the total cost have escalated the federal monies have remained the same. It originally was about 25% and now it's about 10% and still declining.\", 'labels': [[29, 34, 'Toxic']]}\n","{'id': 889, 'text': \"''They must really think Canadians are stupid.'' \\n\\nThey aren't that far off the mark.\", 'labels': [[39, 44, 'Toxic']]}\n","{'id': 890, 'text': 'One less idiot to worry about.', 'labels': [[9, 13, 'Toxic']]}\n","{'id': 891, 'text': 'I am Canadian, born and raised and also know French. I suggest you go back to school, stupid.', 'labels': [[86, 91, 'Toxic']]}\n","{'id': 892, 'text': \"Hard to believe that a man of Morneau's background is this stupid.\", 'labels': [[59, 64, 'Toxic']]}\n","{'id': 893, 'text': \"They blow it out their ass and hope we don't say it stinks...too rude, sorry. trump builds on the shoot from the hip to blow out his behind.\", 'labels': [[5, 25, 'Toxic'], [52, 57, 'Toxic'], [133, 138, 'Toxic']]}\n","{'id': 894, 'text': 'I fought VA, LHIN, CCAC and their Quebec counterparts for a year to get my father a WWII veteran into the Perley and all I got was the run around.  VA and those other agencies are only concerned about self service and not those they are supposed to serve.  My father died before he could get into a veterans hospital. \\n\\nVA should have their budget slashed, a new DM brought in from the outside and their disgusting red tape streamlined to serve clients not bureaucrats', 'labels': [[457, 467, 'Toxic']]}\n","{'id': 895, 'text': 'Fear mongers work on spreading fear,\\nmost of Trump\"s spreads are lies,everyone knows that,\\nexcept the Trump Humpers, who\"ll hang on to Trump\"s ,\\nlittle tiny,small wee ___ to the hilt,\\nand continue to be stupid ,no matter what.\\nYou can\"t fix stupid.', 'labels': [[241, 246, 'Toxic']]}\n","{'id': 896, 'text': \"`The Russian troll farms have cooked up the appropriate line of propaganda for their bots to reintroduce and echo.\\nAnd Bitebart was first in line to start the ball rolling again.\\nThe line of propaganda is crafted to appeal to those who have no view grounded in reality, those who are easily led to believe the exact opposite of any evident reality.\\nTrump/Putin can tell their followers up is down and they'll all chime in that anything else is fake news.\\nTruly wondrous, …the extent of the indoctrination.\\nTrump can murder America in the street, (…and he's hard at it.), and yet his followers won't lift an eyebrow.\\nThey're too busy listening to Sebastion Gorka, or Alex Jones or some other equally crazy loon.\", 'labels': [[516, 521, 'Toxic'], [699, 708, 'Toxic']]}\n","{'id': 897, 'text': \"Take it easy, Kochbertan spammer crybabies.\\n\\nWe'll study the details of your pipe dream ad infinitum first.\\n\\nThen we'll kill it.\\n\\nHappy, now ?\", 'labels': [[114, 126, 'Toxic']]}\n","{'id': 898, 'text': \"Let's see.... Ontario is already heading for financial disaster... $330,000,000,000.00 in debt (is that the right amount of zeros?) and growing.... \\nEven with a fiscally responsible government in place it will take decades to get Ontario on track..\\nAnd now the idiot Liberals come up with another ridiculous spending scheme??\\nPlease, please, please, don't vote for your Liberal candidate next year.\", 'labels': [[261, 265, 'Toxic']]}\n","{'id': 899, 'text': 'Stupid,Fat Mericans.', 'labels': [[0, 18, 'Toxic']]}\n","{'id': 900, 'text': 'Your an idiot...', 'labels': [[8, 12, 'Toxic']]}\n","{'id': 901, 'text': 'Well looky there...Trump finally got one of his dumb ideas to stick.', 'labels': [[48, 51, 'Toxic']]}\n","{'id': 902, 'text': \"You voted for Johnson. That says it all. The idiot that didn't know what was Allepo.\", 'labels': [[45, 49, 'Toxic']]}\n","{'id': 903, 'text': 'does you penis lean left?', 'labels': [[9, 13, 'Toxic']]}\n","{'id': 904, 'text': 'We would probably had been more lucky to have him then your selfish ass.', 'labels': [[60, 70, 'Toxic']]}\n","{'id': 905, 'text': 'Actually, in the US, most terrorists are nominally Christian.', 'labels': [[26, 35, 'Toxic']]}\n","{'id': 906, 'text': \"So hes' not only a far right, egotistical, jerk who lacks any sense of how to run a country, and is not even bilingual, but he also is lacking in business acumen.\", 'labels': [[43, 46, 'Toxic']]}\n","{'id': 907, 'text': 'obviously this asshole grouped and assaulted Taylor Swift. His actions are the only things that are preventing him from attaining a job elsewhere. Wow. This behavior cannot be excepted and I cant wait for the judge to award Taylor and make him pay all the lawyer fees.', 'labels': [[10, 21, 'Toxic']]}\n","{'id': 908, 'text': 'Just execute the bastard.', 'labels': [[17, 23, 'Toxic']]}\n","{'id': 909, 'text': 'No No No SAY No to the bonds as we will have to pay for them in direct taxation increases.\\nRUSTY THE HATED SCREECHING MONEY SUCKING RAIL IS AT IT AGAIN & AGAIN. \\n\\nJUST SAY NO!!!!', 'labels': [[124, 130, 'Toxic']]}\n","{'id': 910, 'text': 'Ok.. blinders off. Bill Clinton is not running for President and Donald Trump is a pig.', 'labels': [[83, 85, 'Toxic']]}\n","{'id': 911, 'text': 'LOL...love it when stupidity exposes itself on the internet.', 'labels': [[19, 27, 'Toxic']]}\n","{'id': 912, 'text': 'The woman is demented.', 'labels': [[13, 20, 'Toxic']]}\n","{'id': 913, 'text': 'To lump every kid that goes to Valley Pathways as a bad kid and that the school does no good is ludicrous! Have you been to the school..spoke to any of the kids that have graduated from there or who are currently going there. ..do you know any of the teachers or administration? To base the schools entire history on the acts of one delinquent is asinine.', 'labels': [[96, 104, 'Toxic']]}\n","{'id': 914, 'text': \"Why not?  Let everyone see those disrespectful bastards.  Don't show them during the playing of the National Anthem?  Bye, bye Fox!\", 'labels': [[33, 45, 'Toxic'], [47, 54, 'Toxic']]}\n","{'id': 915, 'text': \"So much for open and transparent sourcing.  And, a sub-fleet of 18 fighter aircraft.  That's really clever as well.  \\n\\nWho are these idiots?\", 'labels': [[133, 138, 'Toxic']]}\n","{'id': 916, 'text': '- Stupidest statement I\\'ve read in a while:  \"When we bike, we have as much right to the road as when we drive,\" said Vicki Harper, spokeswoman for State Farm.\\n- Then answers why: \"Unfortunately, when bikes and cars collide, cyclists are much more susceptible to serious injury or death.\"\\n- Pedestrians usually, if not always, have the \"right of way\"... and again \"unfortunately\", regardless of human indignation and on-paper \\'rights\\', the human body can\\'t compete with speeds/weight of a ton or two of glass and metal, fiberglass, and plastic... nor distracted drivers ...period.\\nMotorcycles are better equipped to compete with speeds, and there\\'s token effort to equip riders with protective gear. Bicyclists are at much more disadvantage and often required to use bikepaths when they are present.\\nOnce long ago, I came upon a couple of young boys riding bicycles in the middle of a traffic lane... later at a gas station, one belligerently said their teacher said they had a \\'right\\'. I disagreed.', 'labels': [[2, 10, 'Toxic']]}\n","{'id': 917, 'text': \"Newt Gingrich is the has-been of the decade.  Let's all just forget this champion loser.\", 'labels': [[82, 86, 'Toxic']]}\n","{'id': 918, 'text': 'But a stupid HS mascot somehow is relevant to the unhinged left.\\n\\nYour hypocrisy is showing again.', 'labels': [[6, 11, 'Toxic']]}\n","{'id': 919, 'text': 'Two shooting and a home invasion and three of the four suspects were black.  Just saying', 'labels': [[50, 73, 'Toxic']]}\n","{'id': 920, 'text': 'Oh me, oh my!  A \"tweet\" from Valerie Flaming Idiot!', 'labels': [[46, 50, 'Toxic']]}\n","{'id': 921, 'text': '.\\n\"But state officials are criticizing Enbridge\\'s failure to disclose the damage earlier.\"\\n\\nGentlemen, oil corporations, and as a matter of fact ALL large corporations are untouchable. Period. Regardless of ho many 1000\\'s if not 100 000\\'s of people they kill, mane, make sick/ill, the corporations out there have the $$$$, the organization, the PR people to pay off our politicians, \"sprinkle \" our media with paid for \"opinion pieces\" from \"think tanks\" bought a LONG time ago (hello Fraser Institute) to make all that nasty stuff go away at the speed of light.\\n\\nAfter all, it\\'s all about \"share holder value\"........and damn the truth, decency and anyone who stands in their way.\\n\\n.', 'labels': [[254, 257, 'Toxic'], [622, 625, 'Toxic']]}\n","{'id': 922, 'text': 'Canada, just say no.  Period.  Walk away.  Then the real American negotiating position will begin to assert itself.  This is just an idiotic Trumpian bullying wish list.', 'labels': [[133, 139, 'Toxic']]}\n","{'id': 923, 'text': \"Trump is a moron who can't open his mouth without something stupid rolling out but if he's what it takes to keep that lying,corrupt,self serving crook Clinton out,he's got my vote.Hands down she(and Bill) are the worst possible thing that could happen to our once proud country.\", 'labels': [[11, 15, 'Toxic'], [60, 65, 'Toxic'], [118, 122, 'Toxic'], [124, 130, 'Toxic'], [145, 149, 'Toxic']]}\n","{'id': 924, 'text': 'Why oh Why are comments closed in the Norman case??  When the government is using the police to persecute individuals who challenge their idiotic policies, why is the Globe complicit?', 'labels': [[138, 144, 'Toxic']]}\n","{'id': 925, 'text': 'Would be good if an article was written about that scumbag president of Angola.', 'labels': [[51, 57, 'Toxic']]}\n","{'id': 926, 'text': 'Sounds like some of you are scared of pussy and its obvious who that is!😁', 'labels': [[38, 42, 'Toxic']]}\n","{'id': 927, 'text': 'President Hillary Clinton.\\n\\nSuck on that, contards!', 'labels': [[28, 31, 'Toxic']]}\n","{'id': 928, 'text': \"With all your education, you are still an idiot.  But a funnee one so it's all good.\", 'labels': [[42, 46, 'Toxic']]}\n","{'id': 929, 'text': '\"Tax his land,\\nTax his bed,\\nTax the table\\nAt which he\\'s fed.\\n\\nTax his tractor,\\nTax his mule,\\nTeach him taxes\\nAre the rule....\\n\\nTax his car,\\nTax his gas,\\nFind other ways\\nTo tax his ass.\"', 'labels': [[180, 182, 'Toxic']]}\n","{'id': 930, 'text': \"What does it mean?\\n\\n\\u2004Flush the Liberal looters.\\n▀▀▀▀▀▀▀▀▀▀▀▀▀▀\\n\\nWorse than parasites, they're incompetent and bipolar too.\\nTapeworms don't take their families to holiday in the Bahamas at taxpayer expense.\\n\\nCanada needs Ivermectin for Liberals.\", 'labels': [[75, 83, 'Toxic'], [94, 104, 'Toxic'], [110, 116, 'Toxic']]}\n","{'id': 931, 'text': \"Offering state financed sex change procedures to young vulnerable people with gender and mental health challenges that's leftist compassion gone bonkers.\", 'labels': [[145, 151, 'Toxic']]}\n","{'id': 932, 'text': 'Bad little penis! Bad! Bad!\\nChoke to death on your own puke, Robinson.\\nAfter you shank Harmon', 'labels': [[4, 15, 'Toxic'], [28, 58, 'Toxic']]}\n","{'id': 933, 'text': \"one question...  who would ride a bike, or plan on riding a bike, in eugene - that  DOESN'T ALREADY HAVE ONE?  this is one of the stupidest wastes of money.  good god this city has it's collective head, up it's collective arse.\\n  perhaps they shouldn't be asking us WHERE to put the stations...\", 'labels': [[130, 138, 'Toxic']]}\n","{'id': 934, 'text': 'Terminal stupidity - an act of stupidity so beyond the bounds of Common sense that it is likely to kill someone.  This is a prime example.', 'labels': [[0, 17, 'Toxic'], [31, 39, 'Toxic']]}\n","{'id': 935, 'text': 'TRUMP DEATH SQUADS™ will KILL YOUR GRANDMOTHER the first time she gets the sniffles.', 'labels': [[6, 10, 'Toxic'], [25, 28, 'Toxic']]}\n","{'id': 936, 'text': \"What's this trash? Really this is some serious thrash. No wonder it's in Seattle lol. Please explain how the whole story firmts with...John Titor?!?! Seriously, punkasses, smoke less pot\", 'labels': [[0, 16, 'Toxic']]}\n","{'id': 937, 'text': 'trumpf is a reactionary bulls**tter, and he is going to get a lot of us killed.', 'labels': [[24, 34, 'Toxic']]}\n","{'id': 938, 'text': 'morons!!!', 'labels': [[0, 5, 'Toxic']]}\n","{'id': 939, 'text': \"Yours is one of the most idiotic and hateful comments I've ever seen published in the G&M.\", 'labels': [[25, 31, 'Toxic']]}\n","{'id': 940, 'text': 'my god this lunatic is dumb, its the opposition that is forcing another election', 'labels': [[23, 26, 'Toxic']]}\n","{'id': 941, 'text': 'What a stupid thing to say. You must be a communist.', 'labels': [[7, 12, 'Toxic']]}\n","{'id': 942, 'text': 'ERISA exists because of disgusting attempts like this to hide skull-surgery under the guise of religious freedom. Due on these whites sepulchres!', 'labels': [[24, 33, 'Toxic']]}\n","{'id': 943, 'text': 'Well, GW Bush has been mocked for being rather stupid.  Perhaps its true considering that he hired Michael Gerson.', 'labels': [[47, 52, 'Toxic']]}\n","{'id': 944, 'text': 'Millions of cretins.', 'labels': [[12, 18, 'Toxic']]}\n","{'id': 945, 'text': 'The problem is that you are a lying sack and whatever you say is just lies. You are probably a scum immigration attorney.', 'labels': [[95, 98, 'Toxic']]}\n","{'id': 946, 'text': 'Dream on Beav. These women are sending out a powerful message not just to America but the world. It will resound and create something positive out if the chaos and stupidity of the Putrumpski movement.', 'labels': [[164, 172, 'Toxic']]}\n","{'id': 947, 'text': 'I remember some reality gold-miners that had a backhoe stuck in the hole it had dug, and they were trying to figure a way to get it out before freeze-up. I found myself hollering at my TV \"Bury the d*** thing and go back home to Oregon, you idiots.\"', 'labels': [[241, 246, 'Toxic']]}\n","{'id': 948, 'text': 'well since he is not a fascist he has nothing such to remember idiot', 'labels': [[63, 67, 'Toxic']]}\n","{'id': 949, 'text': '...................... or learn from the Americans who torn down Nazi monuments\\n\\nI expect that most of the fools whining about losing Confederate statues, cheered when the statue of Saddam Hussein was torn down by US government troops.', 'labels': [[107, 111, 'Toxic']]}\n","{'id': 950, 'text': \"She's a far left loon....... just like anyone who believes this crap.....\", 'labels': [[64, 67, 'Toxic']]}\n","{'id': 951, 'text': 'Wow!!!!  One of the most stupid comments I have ever seen.', 'labels': [[25, 30, 'Toxic']]}\n","{'id': 952, 'text': 'Leonard Pitts is a waste of oxygen.', 'labels': [[19, 23, 'Toxic']]}\n","{'id': 953, 'text': 'As opposed to objecting to freedom of speech that on a personal level would be considered self serving and idiotic?', 'labels': [[107, 113, 'Toxic']]}\n","{'id': 954, 'text': \"Just another rich idiot. I'm sick of these people.\", 'labels': [[18, 22, 'Toxic']]}\n","{'id': 955, 'text': 'I maintain that Donald Trump doesn\\'t really mean it when he denies the science behind the assertion that global warming is real and that it is man-made. We already know the man is a serial liar. I think  he\\'s lying about this because his real interest is in lining the pockets of his billionaire buddies in the oil and gas industry, and if he were to come right out and admit that it would be seen as too crass, even for him. So he lies and claims he doesn\\'t believe the science, which sounds more legit.\\n\\nWhat I don\\'t get is all the \"family values\" people who are always the first to chime in with \"but what about the children?\" not caring about climate change now. It\\'s clear to me as a gay person that \"family values\" only ever meant \"no homo,\" but still, you\\'d think that conservatives really would care about the world they\\'re leaving their children. The fact that they elected Trump tells me that they don\\'t give a d*mn because we all knew Trump\\'s plans before the election. Hypocrites all.', 'labels': [[981, 990, 'Toxic']]}\n","{'id': 956, 'text': 'You must be a troll or the stupidest person in Alaska', 'labels': [[27, 42, 'Toxic']]}\n","{'id': 957, 'text': \"This is suck bullshit.  Who picks the fruits and vegetables that we buy everyday at the grocery store?  Do these generally transient illegal immigrants not contribute?  They earn minimum wage at best, receive no health care.  Why are these people the enemy and not corporate America that doesn't pay it's share of taxes, lobbies to minimize competition and is never held accountable for their actions. \\nIt's always easy to point the finger at those that can't defend themselves.\", 'labels': [[13, 20, 'Toxic']]}\n","{'id': 958, 'text': \"These idiots and their service dogs are jagoffs. Even if they need the dog...they don't need it on the plane. Put it in the cargo hold....with the real dogs.\", 'labels': [[6, 11, 'Toxic']]}\n","{'id': 959, 'text': 'Finally the petulant McCain reveals his true motivation for his positions on health care. Time for that fool to retire. See ya, Maverick.', 'labels': [[12, 19, 'Toxic']]}\n","{'id': 960, 'text': 'He is a BULLY.', 'labels': [[8, 12, 'Toxic']]}\n","{'id': 961, 'text': \"This wretched LOSER of a 'woman' - Hillary Clinton - is a self-absorbed, psycho NUT JOB who should be locked up in prison for all of the innocent lives lost and the corruption that she is PERSONALLY RESPONSIBLE and LIABLE for!\", 'labels': [[0, 18, 'Toxic']]}\n","{'id': 962, 'text': 'another arrogant liberal troll living in the hypocrisy and lies of his party', 'labels': [[25, 29, 'Toxic']]}\n","{'id': 963, 'text': 'Radical white terrorist. Supported by and encouraged by the words and actions of this pathetic and embarrassing sham of an Administration. Look the subhuman scum up for the rest of his life and continue fighting these fragile white neo-nazis at every turn.', 'labels': [[0, 22, 'Toxic']]}\n","{'id': 964, 'text': 'Trump and his supporters are racist scum.', 'labels': [[29, 39, 'Toxic']]}\n","{'id': 965, 'text': \"What an unbelievable waste of money. It's a stupid walrus.\", 'labels': [[44, 49, 'Toxic']]}\n","{'id': 966, 'text': 'Here are your \"cites\"; Donald Trump is president.\\n\\nApparently watching the events unfold in real time in full color isn\\'t enough proof for you and your ilk so the remaining sane people in this country just \"cited\" their evidence. \\n\\nplease go back to that moist dark rock you live under.\\n\\nD or R, if what she did and said after Benghazi doesn\\'t incense you there is something fundamentally wrong with you. ...and if it had happened under GWB your opinion would be 180 from what it is. that makes you a super hypocrite.', 'labels': [[507, 515, 'Toxic']]}\n","{'id': 967, 'text': 'That pig-eyed guy is hardly sorry. Let him go.', 'labels': [[5, 7, 'Toxic']]}\n","{'id': 968, 'text': 'The Trumpster tweeted on Dec 22, 2016, \"The U.S. must ‘greatly strengthen and expand’ nuclear capability.\"\\n\\nThe Trumpster now says, just one month later, \"For one thing, I think nuclear weapons should be way down and reduced very substantially, that\\'s part of it.\"\\n\\nThe man is clearly a complete idiot, and he doesn\\'t know what he\\'s talking about at least half of the time, and probably more.', 'labels': [[4, 12, 'Toxic'], [112, 120, 'Toxic'], [296, 300, 'Toxic']]}\n","{'id': 969, 'text': \"That is the problem. There are some penis's out there wanting to use the vagina restroom, and some vagina's wanting to use the penis restroom. Understand?\", 'labels': [[127, 131, 'Toxic']]}\n","{'id': 970, 'text': 'Check out those unis....we look stupid and suck doing it!!! FFH now!!!', 'labels': [[32, 37, 'Toxic']]}\n","{'id': 971, 'text': 'Please allow me the joy of knowing where one finds a totally ridiculous definition such as you quoted.Whats the source of all of this research.', 'labels': [[61, 70, 'Toxic']]}\n","{'id': 972, 'text': 'No, I did, dick - head', 'labels': [[11, 14, 'Toxic']]}\n","{'id': 973, 'text': \"Yes...and the first one called Mr. Trump a 'moron'...\", 'labels': [[44, 48, 'Toxic']]}\n","{'id': 974, 'text': 'Washington judge is a terrorist.', 'labels': [[22, 30, 'Toxic']]}\n","{'id': 975, 'text': 'Quotes from Gerald Butts\\' sock puppet:\\n\\n“There is no core identity, no mainstream in Canada.”\\n\\n“Canada is the world’s first post-national state.” \\n\\n“The Liberal Party believes that terrorists should get to keep their Canadian citizenship ... because I do,”......\"And I\\'m willing to take on anyone who disagrees with that.\"\\n\\nDo you think it will take Canadians 15 years to reject this kind of stupidity?', 'labels': [[392, 400, 'Toxic']]}\n","{'id': 976, 'text': \"trump is a pig...not to slight pigs.  it's looking lke he's spend the rest of his life in and out of courtrooms defending himself.  sniffle, sniffle, sniffle, snort.\", 'labels': [[0, 13, 'Toxic']]}\n","{'id': 977, 'text': 'belongs in the ground?? wow another ignorant alt left fool , tell us lunatic how much you do without oil!', 'labels': [[36, 43, 'Toxic']]}\n","{'id': 978, 'text': \"Let me see if I understand this. Officialdom, in all it's magnificent wisdom, says to ignore the coyote.  It will probably go away. And what if it doesn't?  Just imagine the hue and cry if a child was bitten by this animal. Would this same officialdom give the same advice if the trespasser was a bear.  I suspect not. Stupidity is increasing exponentially on planet earth.  Local governments seem to have more than their fair share.\", 'labels': [[33, 43, 'Toxic']]}\n","{'id': 979, 'text': 'It  did  no  such  thing,  this  writer  is  full of  crap.  He  can  send  his  own  money  to  Zimbabwe.', 'labels': [[54, 57, 'Toxic']]}\n","{'id': 980, 'text': \"Who the hell just abandons tents and gear?  Even if you're wealthy that is weird behavior by this group of swine.\", 'labels': [[107, 111, 'Toxic']]}\n","{'id': 981, 'text': \"Cowardly Comey, who was doing nothing more than any other criminal before a judge trying to cover his assets and seek understanding for a crime committed, in an astonishing statement before the United States Senate committee, admitted he leaked information. His leaking information is a felony. Comey manifests a disrespect for the rule of law. That's bad for all of us. The man is a fraud, he's a disgrace to the FBI, and he should be charged with leaking information as would any other citizen of the United States. Did Comey have the courage to recommend charges against Hillary Clinton? Of course not. He's a coward.\", 'labels': [[28, 36, 'Toxic'], [60, 64, 'Toxic']]}\n","{'id': 982, 'text': 'Depends Donny is a one-trick pony\\nand his trick is acting like a total swine', 'labels': [[71, 75, 'Toxic']]}\n","{'id': 983, 'text': 'Yeah, loser is right.', 'labels': [[6, 10, 'Toxic']]}\n","{'id': 984, 'text': 'Trump would have been shot a long time ago .........', 'labels': [[17, 20, 'Toxic']]}\n","{'id': 985, 'text': 'That idiot doctor got millions.. why settle for $30?  Ann sue the shiite out of this crappy airline.', 'labels': [[5, 9, 'Toxic']]}\n","{'id': 986, 'text': \"South Carolina has an idiot for a senator in graham. The state has major poverty problems and this idiot is still senator. Trump supporters should systematically remove those who are blocking the POTUS' agenda - mccain hopefully will be forced to make himself scarce!\", 'labels': [[22, 26, 'Toxic'], [99, 103, 'Toxic']]}\n","{'id': 987, 'text': '>>\"\"I applaud you for wanting to be buried with your neighbours. :)\"\\n.\\n\\nIf there was an award for stupidity, you certainly would have won the \"lifetime achievement\" category.', 'labels': [[98, 106, 'Toxic']]}\n","{'id': 988, 'text': \"Those 'is this comment 'civil' ?  judgements are problematic.\\n\\nWhen does that 'civil' line get crossed? Any common standard for that?\\n\\nThere ought to be a 'civil', but stupid' category !!!\", 'labels': [[168, 173, 'Toxic']]}\n","{'id': 989, 'text': \"The mentality of Il Duce Trump's blind faithful, tweener idiots as they follow the fascist Furhrer into the ultimate destruction of the Republic.\", 'labels': [[17, 23, 'Toxic'], [57, 62, 'Toxic'], [83, 97, 'Toxic']]}\n","{'id': 990, 'text': \"Wow, what rubbish. We have exactly one significant and zero major manufacturers of this product, and that manufacturer has a wait list longer than heaven, and the problem is lack of demand? \\nLOL, the problem is that Tesla has just barely inched up the supply curve, and when we have four major manufacturers competing in the space the cars will cost 1/2 as much and go twice as far and there will be chargers everywhere. \\n\\nReading this article I feel like if the author had been a Kitty Hawk, he would have scoffed at how useless these flying machines were - look at the range! Pathetic! And all the training! And the fuel! No, I'll stick to my horse, there's no demand for these death machines!  hahahahaha\", 'labels': [[10, 16, 'Toxic']]}\n","{'id': 991, 'text': 'Pathetic is a good description.', 'labels': [[0, 7, 'Toxic']]}\n","{'id': 992, 'text': 'What a ridiculous comment, absurd.', 'labels': [[0, 32, 'Toxic']]}\n","{'id': 993, 'text': 'You cant fix stupid, EG.  Every time one if them opens his or her mouth it only confirms it.', 'labels': [[13, 18, 'Toxic']]}\n","{'id': 994, 'text': 'Senator, I\\'m jaded.  Too often \"We must invest in Alaska\\'s future\" is analogous to one fool convincing other fools into believing they can get a pile of granite rocks to burn.  They gather the rocks,  pour gasoline (i.e. state money) onto the rocks, throw a match and BOOM - there comes a huge ball of fire, with plenty of heat and smoke. They immediately celebrate their collective genius and return to the house.  The next day they go outside and discover nothing but a pile of warm rocks. So what do the do?  They try again to get the granite rocks to burn and again they fail. \\n So then they decide that they chose the wrong type of rocks. So they gather shale rocks  which are a different color (yet  just as inert).  Proclaiming they have found the solution they pour even more gasoline (state money) onto this \"new\" pile of rocks and the cycle repeats itself with exactly the same results.\\n Saddly,  until the gasoline (state money) runs out they never quit trying to get those rocks to burn.', 'labels': [[87, 90, 'Toxic'], [109, 113, 'Toxic']]}\n","{'id': 995, 'text': \"Here's your gun back. holy shit. and its ok to take it to Fla. with ammo. We know your insane, violent, have a court case pending, and thinking about joining isis. Have a nice flight.       God help us.\", 'labels': [[27, 30, 'Toxic'], [158, 161, 'Toxic']]}\n","{'id': 996, 'text': \"Special OPs does dozens of these raids all the time. Should the president be in the situation room for each one? By the way, where was Obama and Hillary when the Benghazi attack was going on late into the night? Can't answer because nobody knows that is willing to talk. Stop being a hypocrite.\", 'labels': [[284, 292, 'Toxic']]}\n","{'id': 997, 'text': \"You are a hypocrite of the lowest order.......Tulo could EASILY whip the tar out of you.  And he doesn't even  know     NOR WILL HE EVER  KNOW      of your pathetic existence  on the meager  slice of dirt that you reside upon\\n\\n........hey tough guy, this is where you tell us how much money you make\", 'labels': [[10, 18, 'Toxic']]}\n","{'id': 998, 'text': \"richardson you knew how we the citizens of Oregon felt about this ridiculous committee.  I hope you lose your job.  That's MY information you turned over to this idiot's presidency.\", 'labels': [[66, 75, 'Toxic'], [162, 168, 'Toxic']]}\n","{'id': 999, 'text': \"Phillips will sell gay couples a standard, out-of-the-cooler, sheet cake.\\nHe refuses to design any wedding cake for gay couples. A service he offers to ANY straight couple who walks through the door.\\nThat's discrimination.\\nIf Phillips refused to design cakes for inter-racial couples you'd be condemning him. But because he refuses to design cakes for gay couples, you're fine with it.\", 'labels': [[19, 21, 'Toxic']]}\n","{'id': 1000, 'text': 'We could make a \"killing\"', 'labels': [[17, 23, 'Toxic']]}\n","{'id': 1001, 'text': \"Idiots for politicians  does not relate to training rural VPSO's nor their ability to be armed. But having a low opinion of some politicians is the right of you and all other Americans.\", 'labels': [[0, 5, 'Toxic']]}\n","{'id': 1002, 'text': \"Don't let the door hit you in the ass. We won't miss you Alice.\", 'labels': [[34, 36, 'Toxic']]}\n","{'id': 1003, 'text': \"Can't get rid of these fools soon enough\", 'labels': [[10, 12, 'Toxic'], [23, 27, 'Toxic']]}\n","{'id': 1004, 'text': 'Justin is half competent. That is the scary thing. Imbeciles running the country!', 'labels': [[51, 59, 'Toxic']]}\n","{'id': 1005, 'text': \"I can only guess how stupid this guy's constituents are.\", 'labels': [[21, 26, 'Toxic']]}\n","{'id': 1006, 'text': 'An elected fool is still a fool. Not sure why folks think they will suddenly become capable in office.', 'labels': [[11, 30, 'Toxic'], [46, 50, 'Toxic']]}\n","{'id': 1007, 'text': 'What were the majority of Americans supposed to \"learn\" last November? \\n\\n\\nI think the narrative that anyone is supposed to now cater to deplorable snowflakes is one of the dumbest things going. That bunch is already far, far too coddled as it is.', 'labels': [[172, 185, 'Toxic'], [194, 214, 'Toxic']]}\n","{'id': 1008, 'text': 'Yore to silly too spell things propyly, write?', 'labels': [[8, 12, 'Toxic']]}\n","{'id': 1009, 'text': 'So all the entirely innocent cadets had to listen to a virtue signaling harangue  from this arsehole General because a demented academically failing race baiter perpetrated a hoax?..... Real nice General..... what a fool.', 'labels': [[92, 99, 'Toxic'], [216, 219, 'Toxic']]}\n","{'id': 1010, 'text': 'Remember Irving Madoff?  We never got to see his tax returns either, until it was too late.  Trump has always been a classic narcissistic sociopath and his supporters are shills and dupes.', 'labels': [[115, 146, 'Toxic'], [171, 186, 'Toxic']]}\n","{'id': 1011, 'text': '\"Patient\"? Hell [says the vulture] let\\'s go and KILL something!', 'labels': [[35, 61, 'Toxic']]}\n","{'id': 1012, 'text': 'A dollar to a donut hole this scumbag is an illegal alien.', 'labels': [[30, 36, 'Toxic']]}\n","{'id': 1013, 'text': 'Try getting a decent job with a prostitution charge on your record. Two different standards, one for the police and one for the rest of us. Hypocrite.', 'labels': [[140, 148, 'Toxic']]}\n","{'id': 1014, 'text': 'Trump is rather stupid. He should have at least waited until the indictment is revealed before commenting. Are we tired of all the winning? I tend to think Trump misspoke and meant to ask whether we would be tired of hearing him whine every day. It is just another day in the adult day care center at the White House. Lol.', 'labels': [[16, 21, 'Toxic']]}\n","{'id': 1015, 'text': \"BOY SURE DOES LOOK LIKE OUR MILITARY IS FOCUSED ON THIS GARBAGE ... wasn't his stupid proclamation supposed to 'cure' this ailment.  HAHAHAHAHAHAAAAA ... enjoy taking your black eyes for this stuff Republicans it'll be your undoing, as always, you shoot yourselves in the foot ...\", 'labels': [[79, 84, 'Toxic']]}\n","{'id': 1016, 'text': 'Is this a damn joke? The writer of this article is actually insinuating that wanting to speak with one\\'s elected representative is a \"nationwide push by liberal groups\".\\n\\nADN - go back to being a pay site so I can ignore you again.', 'labels': [[10, 13, 'Toxic']]}\n","{'id': 1017, 'text': \"Dude you are a freaking idiot criminals are going to obtain weapons illegally by theft or stealing or any way they can. if you think that banning guns is the right thing to do you need to go out and and see what it smells like underwater. I am a law-abiding citizen and I carry a gun all the time for someone like me I want to be able to defend myself or defend other people if need be.  you are probably voting for Hillary Clinton and for that I am sorry. I hope one day you wake up and realize that if there's a guy with a gun he's going to shoot you and you going to sit there with your thumb up your ass and won't do anything about it it is our 2nd Amendment right to bear arms. have a great 4th of July\", 'labels': [[15, 28, 'Toxic'], [590, 606, 'Toxic']]}\n","{'id': 1018, 'text': 'How childish of Rickie boy!  Some one sees the American flag displayed in an inappropriate manner and simply lets the other person know!  And what does Rickie boy do?  Responds with something saying the equivalent of \"at least I have one.\"  How moronic!', 'labels': [[245, 251, 'Toxic']]}\n","{'id': 1019, 'text': 'how about the authorities make it abundantly clear that NO ONE will get rescued?\\nAfter a couple of people die with no one helping them, the rest of the idiots will get the message.', 'labels': [[152, 157, 'Toxic']]}\n","{'id': 1020, 'text': 'All the way to the bank! \\n.\\nYes, Trump has told everyone he is a Mother F...... billionaire. \\n.\\nIf being a billionaire makes you wise than Jesus must have been stupid.\\n.\\nWith all your wisdom Harry.', 'labels': [[160, 165, 'Toxic']]}\n","{'id': 1021, 'text': 'Weekday idiot, and you compared populations sizes, and liberal cesspools and suicide and accidents and  other means of death and .................', 'labels': [[8, 12, 'Toxic']]}\n","{'id': 1022, 'text': 'Still blaming the left for your teenage acne and heartbreak as well?\\n\\nNewsflash.....that girl in HS dumped you because she decided you were a loser, not because of any political slant.', 'labels': [[142, 146, 'Toxic']]}\n","{'id': 1023, 'text': 'ESPN now means Extremely Stupid Political Network.  Heard it from someone on Fox News.', 'labels': [[25, 48, 'Toxic']]}\n","{'id': 1024, 'text': 'They are adding more \"stupid\" hours to the day.', 'labels': [[22, 27, 'Toxic']]}\n","{'id': 1025, 'text': 'Only an idiot would fight a guy with a knife and not shoot them!! One stab and you are dead. Why not put the knife down like the cop says. If you hold a knife against the cops you deserve to be shot!!!', 'labels': [[8, 12, 'Toxic']]}\n","{'id': 1026, 'text': 'This idiot and Mr Johnson, his friend, perfectly portray the lowest of the low. Lovers of the whoopie cushion genre. What happened to politicians with charm,  great manners intelligence?', 'labels': [[5, 9, 'Toxic']]}\n","{'id': 1027, 'text': 'What is it about Alaska that attracts jerks like this?', 'labels': [[38, 42, 'Toxic']]}\n","{'id': 1028, 'text': \"42% That's the facts, Jack. Your number is wrong, and you are a patsy to believe it.\", 'labels': [[58, 68, 'Toxic']]}\n","{'id': 1029, 'text': 'This scumbag may have been Peter Boy\\'s father but he certainly was not the boy\\'s \"dad.\"', 'labels': [[5, 11, 'Toxic']]}\n","{'id': 1030, 'text': \"I'll just wait for the idiot in chief's next tweet. Same bat time, same bat channel.\", 'labels': [[23, 27, 'Toxic']]}\n","{'id': 1031, 'text': '\"Plane\" stupid huh??  Try \"plain\" next time stupid.', 'labels': [[8, 13, 'Toxic'], [44, 49, 'Toxic']]}\n","{'id': 1032, 'text': 'bingo.  that imbecile Trudeau is feeding terrorists who will harm us because he wants that UN seat so bad he is blind to the damage he causes', 'labels': [[41, 50, 'Toxic']]}\n","{'id': 1033, 'text': \"Looks like 90% of americans are utterly useless and deserve to die.  Seriously, never been camping without electronics? Ever? Never done survival for 2 weeks innawoods? It's not hard, I, for one, welcome a NK EMP, because while only 10% will live we will be 100% white.\", 'labels': [[40, 46, 'Toxic']]}\n","{'id': 1034, 'text': \"You're such a dick. :)\", 'labels': [[0, 17, 'Toxic']]}\n","{'id': 1035, 'text': 'This bitch is nuts. Who would read a book by a woman.', 'labels': [[0, 51, 'Toxic']]}\n","{'id': 1036, 'text': 'To the absolute pricks saying my cousin was drinking and talking shit about the autopsy you better watch yourself because karma is a bitch! How dare you!!', 'labels': [[16, 20, 'Toxic'], [133, 137, 'Toxic']]}\n","{'id': 1037, 'text': '..or maybe just very,very stupid.  Every time Mr Boyle opens his mouth, the story seems to change.', 'labels': [[26, 31, 'Toxic']]}\n","{'id': 1038, 'text': 'THOSE DAMN RUSSIANS ARE EVERYWHERE!!!!', 'labels': [[6, 9, 'Toxic']]}\n","{'id': 1039, 'text': 'Trump is a weak and unstable milksop.\\n\\nA small and emasculated fraud.', 'labels': [[11, 14, 'Toxic'], [20, 35, 'Toxic'], [51, 67, 'Toxic']]}\n","{'id': 1040, 'text': \".\\n...except that's not an option.  The welfare is too large. \\n\\n No amount of cutting will fix the debt obligations.\\n\\n.\\n(besides, …it's idiotic to cut our own throats to save welfare for oil corporations.)\\n.\", 'labels': [[135, 141, 'Toxic']]}\n","{'id': 1041, 'text': 'What a loser. Go back to Washington State and waste their AG resources !!!', 'labels': [[7, 11, 'Toxic']]}\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":402},"id":"74TmLZC3wWpJ","executionInfo":{"status":"ok","timestamp":1610657559828,"user_tz":-330,"elapsed":1782,"user":{"displayName":"AMBUJE GUPTA","photoUrl":"","userId":"08374827863947652219"}},"outputId":"1f031ff4-aa8a-4a14-e95f-48fc8549c460"},"source":["df=pd.read_json('/content/drive/MyDrive/Toxic Span Detection - Semeval 2021/data_pre-process-Ambuje/val.json', lines = True)\n","df"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>id</th>\n","      <th>text</th>\n","      <th>labels</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>Kathy Griffin is a cheap slut</td>\n","      <td>[[19, 28, Toxic]]</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>Sessions memory is just fine. He remembers wha...</td>\n","      <td>[[109, 118, Toxic]]</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2</td>\n","      <td>First it's a \"hoax,\" then it's all Obama's fau...</td>\n","      <td>[[138, 142, Toxic]]</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>3</td>\n","      <td>This not a place that \"fake news\" or even real...</td>\n","      <td>[[460, 463, Toxic]]</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>4</td>\n","      <td>Micciche doesn't want to pay income tax on the...</td>\n","      <td>[[117, 119, Toxic]]</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>1037</th>\n","      <td>1037</td>\n","      <td>..or maybe just very,very stupid.  Every time ...</td>\n","      <td>[[26, 31, Toxic]]</td>\n","    </tr>\n","    <tr>\n","      <th>1038</th>\n","      <td>1038</td>\n","      <td>THOSE DAMN RUSSIANS ARE EVERYWHERE!!!!</td>\n","      <td>[[6, 9, Toxic]]</td>\n","    </tr>\n","    <tr>\n","      <th>1039</th>\n","      <td>1039</td>\n","      <td>Trump is a weak and unstable milksop.\\n\\nA sma...</td>\n","      <td>[[11, 14, Toxic], [20, 35, Toxic], [51, 67, To...</td>\n","    </tr>\n","    <tr>\n","      <th>1040</th>\n","      <td>1040</td>\n","      <td>.\\n...except that's not an option.  The welfar...</td>\n","      <td>[[135, 141, Toxic]]</td>\n","    </tr>\n","    <tr>\n","      <th>1041</th>\n","      <td>1041</td>\n","      <td>What a loser. Go back to Washington State and ...</td>\n","      <td>[[7, 11, Toxic]]</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>1042 rows × 3 columns</p>\n","</div>"],"text/plain":["        id  ...                                             labels\n","0        0  ...                                  [[19, 28, Toxic]]\n","1        1  ...                                [[109, 118, Toxic]]\n","2        2  ...                                [[138, 142, Toxic]]\n","3        3  ...                                [[460, 463, Toxic]]\n","4        4  ...                                [[117, 119, Toxic]]\n","...    ...  ...                                                ...\n","1037  1037  ...                                  [[26, 31, Toxic]]\n","1038  1038  ...                                    [[6, 9, Toxic]]\n","1039  1039  ...  [[11, 14, Toxic], [20, 35, Toxic], [51, 67, To...\n","1040  1040  ...                                [[135, 141, Toxic]]\n","1041  1041  ...                                   [[7, 11, Toxic]]\n","\n","[1042 rows x 3 columns]"]},"metadata":{"tags":[]},"execution_count":23}]},{"cell_type":"markdown","metadata":{"id":"t28XybUjh7rU"},"source":["#Final Annotations 'BIO' csv to TXT\n"]},{"cell_type":"code","metadata":{"id":"wD3NmisBk4za"},"source":["import pandas as pd"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"SItdUzC99bMM"},"source":["import re"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"Yhb2aSlOw7e7","executionInfo":{"status":"ok","timestamp":1617701928884,"user_tz":-330,"elapsed":1511,"user":{"displayName":"Harsh Kataria","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GimH0VsMEaiEzaEeo5nJzMe1WuJRQ2b1DK9fb3S=s64","userId":"07300304294680146354"}}},"source":["def remove_punctuation(words):\n","    \"\"\"Remove punctuation from list of tokenized words\"\"\"\n","    new_words = []\n","    for word in words:\n","        new_word = re.sub(r'[^\\w\\s]', ' ', word)\n","        if new_word != '':\n","            new_words.append(new_word)\n","    return new_words"],"execution_count":12,"outputs":[]},{"cell_type":"code","metadata":{"id":"6KrIcHp-k-bU"},"source":["df=pd.read_json('/content/drive/MyDrive/Toxic Span Detection - Semeval 2021/data_pre-process-Ambuje/train.json', lines = True)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"LbCA55zBiIqo","colab":{"base_uri":"https://localhost:8080/","height":402},"executionInfo":{"status":"ok","timestamp":1617296464581,"user_tz":-330,"elapsed":940,"user":{"displayName":"AMBUJE GUPTA","photoUrl":"","userId":"08374827863947652219"}},"outputId":"f691f853-ca9c-40ec-9789-b009fd12ab07"},"source":["df"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>id</th>\n","      <th>text</th>\n","      <th>labels</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>Intrepid - it will actually be real news if an...</td>\n","      <td>[[85, 90, Toxic], [95, 101, Toxic]]</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>Yeah, sorry, but you're regurgitating bullshit...</td>\n","      <td>[[38, 45, Toxic]]</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2</td>\n","      <td>Shooting at others is not speech. Trying to co...</td>\n","      <td>[[12, 17, Toxic], [91, 96, Toxic]]</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>3</td>\n","      <td>I get the financial influence within the gover...</td>\n","      <td>[[191, 217, Toxic], [303, 309, Toxic], [358, 3...</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>4</td>\n","      <td>According to the Harbor Master in a CNN interv...</td>\n","      <td>[[234, 239, Toxic]]</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>5897</th>\n","      <td>5897</td>\n","      <td>This is really stupid.  Guns are made to kill,...</td>\n","      <td>[[15, 20, Toxic]]</td>\n","    </tr>\n","    <tr>\n","      <th>5898</th>\n","      <td>5898</td>\n","      <td>For every low end DACA brown, deport a black!</td>\n","      <td>[[30, 35, Toxic]]</td>\n","    </tr>\n","    <tr>\n","      <th>5899</th>\n","      <td>5899</td>\n","      <td>Idiots</td>\n","      <td>[[0, 5, Toxic]]</td>\n","    </tr>\n","    <tr>\n","      <th>5900</th>\n","      <td>5900</td>\n","      <td>Ontario farmers are NOT allowed to produce exc...</td>\n","      <td>[[105, 111, Toxic]]</td>\n","    </tr>\n","    <tr>\n","      <th>5901</th>\n","      <td>5901</td>\n","      <td>You must be a Communist China troll, guantanamo.</td>\n","      <td>[[30, 34, Toxic]]</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>5902 rows × 3 columns</p>\n","</div>"],"text/plain":["        id  ...                                             labels\n","0        0  ...                [[85, 90, Toxic], [95, 101, Toxic]]\n","1        1  ...                                  [[38, 45, Toxic]]\n","2        2  ...                 [[12, 17, Toxic], [91, 96, Toxic]]\n","3        3  ...  [[191, 217, Toxic], [303, 309, Toxic], [358, 3...\n","4        4  ...                                [[234, 239, Toxic]]\n","...    ...  ...                                                ...\n","5897  5897  ...                                  [[15, 20, Toxic]]\n","5898  5898  ...                                  [[30, 35, Toxic]]\n","5899  5899  ...                                    [[0, 5, Toxic]]\n","5900  5900  ...                                [[105, 111, Toxic]]\n","5901  5901  ...                                  [[30, 34, Toxic]]\n","\n","[5902 rows x 3 columns]"]},"metadata":{"tags":[]},"execution_count":9}]},{"cell_type":"code","metadata":{"id":"l1i55lwLY0uk"},"source":["import numpy as np\n","\n","msk = np.random.rand(len(df)) < 0.9\n","\n","train = df[msk]\n","test = df[~msk]"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ioZ4DgHdY0w2","executionInfo":{"status":"ok","timestamp":1617296622548,"user_tz":-330,"elapsed":1263,"user":{"displayName":"AMBUJE GUPTA","photoUrl":"","userId":"08374827863947652219"}},"outputId":"a45fc59a-5e75-4c07-84d9-b71fc0ef3b33"},"source":["\n","len(test)"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["559"]},"metadata":{"tags":[]},"execution_count":12}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"9gH8ofQwY-Vm","executionInfo":{"status":"ok","timestamp":1617296628006,"user_tz":-330,"elapsed":1249,"user":{"displayName":"AMBUJE GUPTA","photoUrl":"","userId":"08374827863947652219"}},"outputId":"90185096-ec90-4872-f844-bbe94580fe5a"},"source":["len(train)"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["5343"]},"metadata":{"tags":[]},"execution_count":13}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":402},"id":"NEICQJDBY-ZH","executionInfo":{"status":"ok","timestamp":1617296645374,"user_tz":-330,"elapsed":921,"user":{"displayName":"AMBUJE GUPTA","photoUrl":"","userId":"08374827863947652219"}},"outputId":"aa636415-30ce-49ee-c2ab-64fcf0dc3445"},"source":["test"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>id</th>\n","      <th>text</th>\n","      <th>labels</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>15</th>\n","      <td>15</td>\n","      <td>Again proving my point that right wing nuts ar...</td>\n","      <td>[[48, 53, Toxic]]</td>\n","    </tr>\n","    <tr>\n","      <th>20</th>\n","      <td>20</td>\n","      <td>Ok Lars, its not fire, but its matches, gasoli...</td>\n","      <td>[[186, 189, Toxic]]</td>\n","    </tr>\n","    <tr>\n","      <th>37</th>\n","      <td>37</td>\n","      <td>Congratulations on wasting your pathetic life ...</td>\n","      <td>[[32, 39, Toxic], [67, 72, Toxic]]</td>\n","    </tr>\n","    <tr>\n","      <th>39</th>\n","      <td>39</td>\n","      <td>What a stupid time to close drilling in the Ar...</td>\n","      <td>[[7, 12, Toxic]]</td>\n","    </tr>\n","    <tr>\n","      <th>51</th>\n","      <td>51</td>\n","      <td>According to crushedhopesnation Ovechkin is ex...</td>\n","      <td>[[75, 87, Toxic]]</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>5881</th>\n","      <td>5881</td>\n","      <td>clearly you are one of the lunatic liberals,,y...</td>\n","      <td>[[148, 153, Toxic]]</td>\n","    </tr>\n","    <tr>\n","      <th>5883</th>\n","      <td>5883</td>\n","      <td>Trump Plans To Blow Up Iran Deal Because He Re...</td>\n","      <td>[[56, 60, Toxic]]</td>\n","    </tr>\n","    <tr>\n","      <th>5889</th>\n","      <td>5889</td>\n","      <td>Damn, he was good. Seems we always find a way ...</td>\n","      <td>[[0, 3, Toxic]]</td>\n","    </tr>\n","    <tr>\n","      <th>5890</th>\n","      <td>5890</td>\n","      <td>Beyak misses the point entirely. The PURPOSE O...</td>\n","      <td>[[409, 414, Toxic]]</td>\n","    </tr>\n","    <tr>\n","      <th>5894</th>\n","      <td>5894</td>\n","      <td>Same defense attorney that got Alexandra Ellis...</td>\n","      <td>[[86, 89, Toxic]]</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>559 rows × 3 columns</p>\n","</div>"],"text/plain":["        id  ...                              labels\n","15      15  ...                   [[48, 53, Toxic]]\n","20      20  ...                 [[186, 189, Toxic]]\n","37      37  ...  [[32, 39, Toxic], [67, 72, Toxic]]\n","39      39  ...                    [[7, 12, Toxic]]\n","51      51  ...                   [[75, 87, Toxic]]\n","...    ...  ...                                 ...\n","5881  5881  ...                 [[148, 153, Toxic]]\n","5883  5883  ...                   [[56, 60, Toxic]]\n","5889  5889  ...                     [[0, 3, Toxic]]\n","5890  5890  ...                 [[409, 414, Toxic]]\n","5894  5894  ...                   [[86, 89, Toxic]]\n","\n","[559 rows x 3 columns]"]},"metadata":{"tags":[]},"execution_count":14}]},{"cell_type":"code","metadata":{"id":"Vvc13ERCZMKw"},"source":["test.to_csv('/content/drive/MyDrive/Toxic Span Detection - Semeval 2021/1-4-2021/real_test_f1.csv',header=True, index=False)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"exj9Let3Y00F"},"source":["df=train"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"dADhc9aEsMJt"},"source":["# df.drop([2535],inplace = True)\n","df=df.reset_index()"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"b99UmiKiZ6PR"},"source":["del df['index']"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"g6p8vnH8a16o"},"source":["del df['level_0']"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"cWTysDhtbIhV"},"source":["del df['text'][2292]"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"6T3gppLPbtZc"},"source":["df=df.drop([2292,2293,2294])"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":402},"id":"b_QaVV5GcbWg","executionInfo":{"status":"ok","timestamp":1617297584192,"user_tz":-330,"elapsed":1143,"user":{"displayName":"AMBUJE GUPTA","photoUrl":"","userId":"08374827863947652219"}},"outputId":"bac32b85-e6ca-4f21-e4f8-ad2fadbeb39e"},"source":["df"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>text</th>\n","      <th>labels</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Intrepid - it will actually be real news if an...</td>\n","      <td>[[85, 90, Toxic], [95, 101, Toxic]]</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Yeah, sorry, but you're regurgitating bullshit...</td>\n","      <td>[[38, 45, Toxic]]</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Shooting at others is not speech. Trying to co...</td>\n","      <td>[[12, 17, Toxic], [91, 96, Toxic]]</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>I get the financial influence within the gover...</td>\n","      <td>[[191, 217, Toxic], [303, 309, Toxic], [358, 3...</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>According to the Harbor Master in a CNN interv...</td>\n","      <td>[[234, 239, Toxic]]</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>5335</th>\n","      <td>This is really stupid.  Guns are made to kill,...</td>\n","      <td>[[15, 20, Toxic]]</td>\n","    </tr>\n","    <tr>\n","      <th>5336</th>\n","      <td>For every low end DACA brown, deport a black!</td>\n","      <td>[[30, 35, Toxic]]</td>\n","    </tr>\n","    <tr>\n","      <th>5337</th>\n","      <td>Idiots</td>\n","      <td>[[0, 5, Toxic]]</td>\n","    </tr>\n","    <tr>\n","      <th>5338</th>\n","      <td>Ontario farmers are NOT allowed to produce exc...</td>\n","      <td>[[105, 111, Toxic]]</td>\n","    </tr>\n","    <tr>\n","      <th>5339</th>\n","      <td>You must be a Communist China troll, guantanamo.</td>\n","      <td>[[30, 34, Toxic]]</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>5340 rows × 2 columns</p>\n","</div>"],"text/plain":["                                                   text                                             labels\n","0     Intrepid - it will actually be real news if an...                [[85, 90, Toxic], [95, 101, Toxic]]\n","1     Yeah, sorry, but you're regurgitating bullshit...                                  [[38, 45, Toxic]]\n","2     Shooting at others is not speech. Trying to co...                 [[12, 17, Toxic], [91, 96, Toxic]]\n","3     I get the financial influence within the gover...  [[191, 217, Toxic], [303, 309, Toxic], [358, 3...\n","4     According to the Harbor Master in a CNN interv...                                [[234, 239, Toxic]]\n","...                                                 ...                                                ...\n","5335  This is really stupid.  Guns are made to kill,...                                  [[15, 20, Toxic]]\n","5336      For every low end DACA brown, deport a black!                                  [[30, 35, Toxic]]\n","5337                                             Idiots                                    [[0, 5, Toxic]]\n","5338  Ontario farmers are NOT allowed to produce exc...                                [[105, 111, Toxic]]\n","5339   You must be a Communist China troll, guantanamo.                                  [[30, 34, Toxic]]\n","\n","[5340 rows x 2 columns]"]},"metadata":{"tags":[]},"execution_count":72}]},{"cell_type":"code","metadata":{"id":"o-gsELVLix9F"},"source":["words = []\n","tags = []"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"2Ur2Q3X1iY_M","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1617297596777,"user_tz":-330,"elapsed":4738,"user":{"displayName":"AMBUJE GUPTA","photoUrl":"","userId":"08374827863947652219"}},"outputId":"ae39a406-bf48-442e-b524-1bd10ec9012c"},"source":["for i in range(len(df)):\n","  text = df['text'][i].replace('\\n',' ')\n","  #text = df['text'][i].strip()\n","  #text = ' between eden hospital health services corporation and eden medical center '.strip()\n","#   print(text)\n","  textl = list(text)\n","  textl = remove_punctuation(textl)\n","#   print(textl)\n","  tagl = ['O'] * len(textl)\n","  lb = df['labels'][i]\n","#   print(tagl)\n","  #print(len(tagl),len(textl))\n","  #print(lb)\n","  for k in range(len(lb)):\n","    t = lb[k]\n","    sp = False\n","    print(t)\n","    tagl[t[0]] = 'B-'+t[2]\n","    for l in range(t[0]+1,t[1]+1):\n","      if sp:\n","        tagl[l] = 'I-'+t[2]\n","      else:\n","        tagl[l] = 'B-'+t[2]\n","        if textl[l] == ' ': sp = True\n","    # print(tagl)\n","\n","  word = ''\n","  tag = ''\n","  for j in range(len(textl)):\n","    #if tagl[j] == \n","    if textl[j] == ' ':\n","      if word!='':\n","          words.append(word)\n","          word = ''\n","          tags.append(tag)\n","    else:\n","      word = word + textl[j]\n","      tag = tagl[j]\n","    \n","  words.append(word)\n","  tags.append(tag)\n","  words.append('')\n","  tags.append('')\n","#   print(words)\n","#   print(tags)\n","  print(i)"],"execution_count":null,"outputs":[{"output_type":"stream","text":["\u001b[1;30;43mStreaming output truncated to the last 5000 lines.\u001b[0m\n","3214\n","[366, 374, 'Toxic']\n","3215\n","[48, 51, 'Toxic']\n","3216\n","[4, 10, 'Toxic']\n","3217\n","[88, 92, 'Toxic']\n","3218\n","[141, 158, 'Toxic']\n","3219\n","[265, 273, 'Toxic']\n","3220\n","[0, 13, 'Toxic']\n","3221\n","[60, 67, 'Toxic']\n","3222\n","[31, 38, 'Toxic']\n","3223\n","[14, 18, 'Toxic']\n","3224\n","[119, 122, 'Toxic']\n","[420, 428, 'Toxic']\n","3225\n","[135, 138, 'Toxic']\n","3226\n","[550, 557, 'Toxic']\n","[613, 622, 'Toxic']\n","3227\n","[425, 429, 'Toxic']\n","[457, 462, 'Toxic']\n","3228\n","[4, 9, 'Toxic']\n","3229\n","[468, 481, 'Toxic']\n","[691, 702, 'Toxic']\n","3230\n","[242, 267, 'Toxic']\n","3231\n","[25, 30, 'Toxic']\n","3232\n","[70, 90, 'Toxic']\n","3233\n","[68, 72, 'Toxic']\n","3234\n","[0, 9, 'Toxic']\n","3235\n","[12, 21, 'Toxic']\n","3236\n","[38, 41, 'Toxic']\n","3237\n","[6, 11, 'Toxic']\n","3238\n","[331, 338, 'Toxic']\n","[546, 557, 'Toxic']\n","3239\n","[57, 63, 'Toxic']\n","3240\n","[43, 46, 'Toxic']\n","3241\n","[292, 297, 'Toxic']\n","3242\n","[209, 212, 'Toxic']\n","3243\n","[112, 118, 'Toxic']\n","3244\n","[5, 15, 'Toxic']\n","3245\n","[190, 203, 'Toxic']\n","3246\n","[42, 46, 'Toxic']\n","3247\n","[12, 20, 'Toxic']\n","3248\n","[8, 13, 'Toxic']\n","3249\n","[6, 13, 'Toxic']\n","[47, 53, 'Toxic']\n","3250\n","[31, 35, 'Toxic']\n","3251\n","[176, 184, 'Toxic']\n","3252\n","[406, 411, 'Toxic']\n","[722, 726, 'Toxic']\n","3253\n","[0, 9, 'Toxic']\n","3254\n","[9, 15, 'Toxic']\n","3255\n","[15, 20, 'Toxic']\n","3256\n","[15, 24, 'Toxic']\n","3257\n","[87, 91, 'Toxic']\n","3258\n","[25, 30, 'Toxic']\n","[84, 88, 'Toxic']\n","3259\n","[0, 27, 'Toxic']\n","3260\n","[22, 28, 'Toxic']\n","3261\n","[128, 133, 'Toxic']\n","[729, 733, 'Toxic']\n","3262\n","[16, 24, 'Toxic']\n","[103, 115, 'Toxic']\n","3263\n","[247, 249, 'Toxic']\n","3264\n","[36, 44, 'Toxic']\n","3265\n","[71, 94, 'Toxic']\n","[115, 118, 'Toxic']\n","3266\n","[136, 140, 'Toxic']\n","3267\n","[338, 345, 'Toxic']\n","3268\n","[0, 5, 'Toxic']\n","[13, 18, 'Toxic']\n","3269\n","[33, 37, 'Toxic']\n","[40, 43, 'Toxic']\n","3270\n","[52, 58, 'Toxic']\n","[231, 236, 'Toxic']\n","3271\n","[44, 60, 'Toxic']\n","[192, 198, 'Toxic']\n","[316, 325, 'Toxic']\n","3272\n","[23, 37, 'Toxic']\n","3273\n","[78, 89, 'Toxic']\n","3274\n","[99, 104, 'Toxic']\n","3275\n","[151, 156, 'Toxic']\n","3276\n","[42, 48, 'Toxic']\n","3277\n","[10, 19, 'Toxic']\n","3278\n","[13, 23, 'Toxic']\n","3279\n","[39, 43, 'Toxic']\n","3280\n","[43, 46, 'Toxic']\n","[53, 59, 'Toxic']\n","3281\n","[280, 288, 'Toxic']\n","3282\n","[0, 15, 'Toxic']\n","3283\n","[32, 36, 'Toxic']\n","3284\n","[0, 8, 'Toxic']\n","[21, 25, 'Toxic']\n","3285\n","[85, 90, 'Toxic']\n","[122, 127, 'Toxic']\n","3286\n","[26, 29, 'Toxic']\n","3287\n","[34, 42, 'Toxic']\n","3288\n","[17, 21, 'Toxic']\n","3289\n","[104, 107, 'Toxic']\n","3290\n","[8, 11, 'Toxic']\n","3291\n","[861, 866, 'Toxic']\n","3292\n","[47, 51, 'Toxic']\n","[78, 85, 'Toxic']\n","[87, 92, 'Toxic']\n","3293\n","[60, 96, 'Toxic']\n","3294\n","[7, 12, 'Toxic']\n","3295\n","[48, 51, 'Toxic']\n","3296\n","[35, 40, 'Toxic']\n","3297\n","[20, 33, 'Toxic']\n","3298\n","[41, 46, 'Toxic']\n","3299\n","[5, 12, 'Toxic']\n","3300\n","[0, 4, 'Toxic']\n","3301\n","[20, 62, 'Toxic']\n","3302\n","[11, 14, 'Toxic']\n","[101, 106, 'Toxic']\n","3303\n","[168, 175, 'Toxic']\n","3304\n","[32, 58, 'Toxic']\n","3305\n","[12, 17, 'Toxic']\n","3306\n","[476, 481, 'Toxic']\n","3307\n","[89, 111, 'Toxic']\n","3308\n","[13, 19, 'Toxic']\n","3309\n","[95, 102, 'Toxic']\n","3310\n","[33, 36, 'Toxic']\n","[38, 43, 'Toxic']\n","3311\n","[26, 31, 'Toxic']\n","3312\n","[42, 48, 'Toxic']\n","3313\n","[31, 36, 'Toxic']\n","[45, 50, 'Toxic']\n","3314\n","[128, 133, 'Toxic']\n","3315\n","[41, 50, 'Toxic']\n","3316\n","[110, 115, 'Toxic']\n","3317\n","[253, 257, 'Toxic']\n","3318\n","[373, 378, 'Toxic']\n","3319\n","[20, 26, 'Toxic']\n","3320\n","[60, 63, 'Toxic']\n","3321\n","[99, 102, 'Toxic']\n","3322\n","[10, 13, 'Toxic']\n","3323\n","[62, 65, 'Toxic']\n","[330, 336, 'Toxic']\n","3324\n","[152, 156, 'Toxic']\n","3325\n","[8, 13, 'Toxic']\n","3326\n","[119, 124, 'Toxic']\n","3327\n","[73, 76, 'Toxic']\n","3328\n","[13, 21, 'Toxic']\n","[23, 28, 'Toxic']\n","[211, 216, 'Toxic']\n","3329\n","[8, 12, 'Toxic']\n","3330\n","[4, 10, 'Toxic']\n","[105, 110, 'Toxic']\n","3331\n","[26, 32, 'Toxic']\n","[48, 51, 'Toxic']\n","3332\n","[112, 117, 'Toxic']\n","3333\n","[11, 52, 'Toxic']\n","3334\n","[0, 4, 'Toxic']\n","[35, 41, 'Toxic']\n","3335\n","[8, 12, 'Toxic']\n","3336\n","[25, 30, 'Toxic']\n","3337\n","[27, 32, 'Toxic']\n","3338\n","[128, 132, 'Toxic']\n","3339\n","[145, 162, 'Toxic']\n","3340\n","[19, 27, 'Toxic']\n","3341\n","[179, 185, 'Toxic']\n","[349, 358, 'Toxic']\n","[361, 369, 'Toxic']\n","3342\n","[216, 220, 'Toxic']\n","3343\n","[15, 20, 'Toxic']\n","3344\n","[47, 52, 'Toxic']\n","3345\n","[13, 17, 'Toxic']\n","3346\n","[311, 315, 'Toxic']\n","3347\n","[13, 27, 'Toxic']\n","[70, 76, 'Toxic']\n","3348\n","[109, 114, 'Toxic']\n","3349\n","[180, 191, 'Toxic']\n","3350\n","[24, 28, 'Toxic']\n","[109, 114, 'Toxic']\n","[137, 154, 'Toxic']\n","3351\n","[130, 148, 'Toxic']\n","3352\n","[67, 72, 'Toxic']\n","3353\n","[26, 35, 'Toxic']\n","3354\n","[52, 58, 'Toxic']\n","3355\n","[60, 62, 'Toxic']\n","[195, 199, 'Toxic']\n","[553, 586, 'Toxic']\n","3356\n","[142, 149, 'Toxic']\n","3357\n","[371, 376, 'Toxic']\n","[671, 675, 'Toxic']\n","3358\n","[28, 61, 'Toxic']\n","3359\n","[96, 103, 'Toxic']\n","[166, 171, 'Toxic']\n","3360\n","[82, 86, 'Toxic']\n","3361\n","[4, 24, 'Toxic']\n","3362\n","[19, 23, 'Toxic']\n","3363\n","[38, 46, 'Toxic']\n","[188, 196, 'Toxic']\n","3364\n","[0, 12, 'Toxic']\n","[66, 71, 'Toxic']\n","3365\n","[0, 3, 'Toxic']\n","[21, 24, 'Toxic']\n","3366\n","[258, 263, 'Toxic']\n","[369, 373, 'Toxic']\n","3367\n","[24, 38, 'Toxic']\n","3368\n","[5, 9, 'Toxic']\n","[349, 353, 'Toxic']\n","3369\n","[82, 87, 'Toxic']\n","3370\n","[33, 37, 'Toxic']\n","[353, 377, 'Toxic']\n","3371\n","[7, 11, 'Toxic']\n","3372\n","[49, 56, 'Toxic']\n","3373\n","[33, 40, 'Toxic']\n","3374\n","[7, 11, 'Toxic']\n","3375\n","[11, 16, 'Toxic']\n","3376\n","[108, 112, 'Toxic']\n","3377\n","[136, 139, 'Toxic']\n","3378\n","[109, 118, 'Toxic']\n","[148, 151, 'Toxic']\n","3379\n","[56, 61, 'Toxic']\n","3380\n","[425, 429, 'Toxic']\n","[811, 815, 'Toxic']\n","3381\n","[105, 109, 'Toxic']\n","[249, 254, 'Toxic']\n","[277, 285, 'Toxic']\n","3382\n","[12, 18, 'Toxic']\n","[33, 40, 'Toxic']\n","3383\n","[28, 42, 'Toxic']\n","[74, 81, 'Toxic']\n","3384\n","[87, 93, 'Toxic']\n","[202, 207, 'Toxic']\n","3385\n","[47, 51, 'Toxic']\n","[88, 93, 'Toxic']\n","[125, 128, 'Toxic']\n","3386\n","[4, 8, 'Toxic']\n","3387\n","[178, 185, 'Toxic']\n","3388\n","[104, 107, 'Toxic']\n","3389\n","[135, 144, 'Toxic']\n","[146, 154, 'Toxic']\n","[295, 297, 'Toxic']\n","3390\n","[0, 20, 'Toxic']\n","3391\n","[21, 24, 'Toxic']\n","[223, 226, 'Toxic']\n","3392\n","[127, 135, 'Toxic']\n","[163, 186, 'Toxic']\n","3393\n","[22, 31, 'Toxic']\n","3394\n","[86, 91, 'Toxic']\n","[493, 505, 'Toxic']\n","3395\n","[16, 20, 'Toxic']\n","3396\n","[19, 35, 'Toxic']\n","3397\n","[224, 229, 'Toxic']\n","3398\n","[33, 42, 'Toxic']\n","3399\n","[17, 33, 'Toxic']\n","3400\n","[5, 12, 'Toxic']\n","[18, 24, 'Toxic']\n","3401\n","[109, 118, 'Toxic']\n","3402\n","[253, 257, 'Toxic']\n","3403\n","[433, 438, 'Toxic']\n","3404\n","[0, 20, 'Toxic']\n","3405\n","[485, 488, 'Toxic']\n","3406\n","[20, 26, 'Toxic']\n","3407\n","[102, 105, 'Toxic']\n","3408\n","[11, 23, 'Toxic']\n","3409\n","[45, 52, 'Toxic']\n","3410\n","[4, 8, 'Toxic']\n","[228, 237, 'Toxic']\n","3411\n","[135, 138, 'Toxic']\n","3412\n","[17, 21, 'Toxic']\n","[685, 694, 'Toxic']\n","3413\n","[380, 389, 'Toxic']\n","3414\n","[149, 152, 'Toxic']\n","3415\n","[82, 87, 'Toxic']\n","3416\n","[689, 696, 'Toxic']\n","3417\n","[41, 49, 'Toxic']\n","3418\n","[24, 27, 'Toxic']\n","3419\n","[76, 82, 'Toxic']\n","3420\n","[63, 68, 'Toxic']\n","3421\n","[44, 57, 'Toxic']\n","[129, 140, 'Toxic']\n","3422\n","[114, 118, 'Toxic']\n","3423\n","[177, 183, 'Toxic']\n","3424\n","[32, 38, 'Toxic']\n","3425\n","[53, 57, 'Toxic']\n","3426\n","[2, 5, 'Toxic']\n","3427\n","[361, 365, 'Toxic']\n","[381, 387, 'Toxic']\n","3428\n","[11, 18, 'Toxic']\n","[24, 31, 'Toxic']\n","3429\n","[143, 147, 'Toxic']\n","3430\n","[15, 19, 'Toxic']\n","3431\n","[0, 14, 'Toxic']\n","3432\n","[392, 397, 'Toxic']\n","3433\n","[3, 6, 'Toxic']\n","3434\n","[64, 74, 'Toxic']\n","3435\n","[21, 24, 'Toxic']\n","[205, 209, 'Toxic']\n","3436\n","[15, 20, 'Toxic']\n","3437\n","[49, 59, 'Toxic']\n","3438\n","[6, 10, 'Toxic']\n","3439\n","[40, 44, 'Toxic']\n","3440\n","[145, 150, 'Toxic']\n","3441\n","[169, 173, 'Toxic']\n","3442\n","[87, 89, 'Toxic']\n","3443\n","[590, 599, 'Toxic']\n","3444\n","[131, 147, 'Toxic']\n","3445\n","[0, 3, 'Toxic']\n","[50, 57, 'Toxic']\n","3446\n","[191, 194, 'Toxic']\n","[242, 247, 'Toxic']\n","3447\n","[16, 21, 'Toxic']\n","3448\n","[17, 22, 'Toxic']\n","3449\n","[55, 60, 'Toxic']\n","3450\n","[20, 25, 'Toxic']\n","3451\n","[20, 27, 'Toxic']\n","3452\n","[75, 79, 'Toxic']\n","3453\n","[150, 159, 'Toxic']\n","[172, 177, 'Toxic']\n","[181, 196, 'Toxic']\n","[228, 231, 'Toxic']\n","3454\n","[11, 15, 'Toxic']\n","3455\n","[47, 54, 'Toxic']\n","3456\n","[0, 11, 'Toxic']\n","3457\n","[11, 18, 'Toxic']\n","3458\n","[156, 167, 'Toxic']\n","3459\n","[32, 37, 'Toxic']\n","3460\n","[584, 592, 'Toxic']\n","3461\n","[47, 52, 'Toxic']\n","[73, 78, 'Toxic']\n","3462\n","[173, 179, 'Toxic']\n","3463\n","[22, 25, 'Toxic']\n","3464\n","[9, 11, 'Toxic']\n","3465\n","[209, 216, 'Toxic']\n","3466\n","[8, 16, 'Toxic']\n","[424, 431, 'Toxic']\n","3467\n","[53, 58, 'Toxic']\n","3468\n","[8, 21, 'Toxic']\n","3469\n","[33, 37, 'Toxic']\n","3470\n","[88, 101, 'Toxic']\n","3471\n","[33, 37, 'Toxic']\n","3472\n","[47, 52, 'Toxic']\n","3473\n","[49, 56, 'Toxic']\n","3474\n","[34, 41, 'Toxic']\n","[47, 54, 'Toxic']\n","3475\n","[60, 66, 'Toxic']\n","[111, 117, 'Toxic']\n","3476\n","[0, 9, 'Toxic']\n","3477\n","[22, 29, 'Toxic']\n","[31, 39, 'Toxic']\n","3478\n","[138, 143, 'Toxic']\n","[167, 171, 'Toxic']\n","3479\n","[33, 49, 'Toxic']\n","[70, 76, 'Toxic']\n","3480\n","[30, 36, 'Toxic']\n","[70, 76, 'Toxic']\n","3481\n","[52, 57, 'Toxic']\n","3482\n","[102, 108, 'Toxic']\n","[262, 267, 'Toxic']\n","[289, 293, 'Toxic']\n","3483\n","[0, 4, 'Toxic']\n","3484\n","[12, 17, 'Toxic']\n","3485\n","[75, 79, 'Toxic']\n","3486\n","[8, 14, 'Toxic']\n","[148, 151, 'Toxic']\n","[157, 164, 'Toxic']\n","[174, 181, 'Toxic']\n","3487\n","[75, 83, 'Toxic']\n","3488\n","[214, 219, 'Toxic']\n","3489\n","[27, 31, 'Toxic']\n","3490\n","[9, 21, 'Toxic']\n","[88, 103, 'Toxic']\n","3491\n","[76, 85, 'Toxic']\n","3492\n","[3, 16, 'Toxic']\n","3493\n","[66, 70, 'Toxic']\n","[479, 484, 'Toxic']\n","[486, 491, 'Toxic']\n","3494\n","[13, 19, 'Toxic']\n","3495\n","[8, 13, 'Toxic']\n","3496\n","[40, 44, 'Toxic']\n","3497\n","[16, 42, 'Toxic']\n","[166, 169, 'Toxic']\n","3498\n","[12, 18, 'Toxic']\n","3499\n","[23, 26, 'Toxic']\n","3500\n","[127, 130, 'Toxic']\n","3501\n","[233, 238, 'Toxic']\n","3502\n","[11, 15, 'Toxic']\n","3503\n","[48, 62, 'Toxic']\n","3504\n","[0, 2, 'Toxic']\n","[5, 29, 'Toxic']\n","3505\n","[5, 17, 'Toxic']\n","3506\n","[0, 13, 'Toxic']\n","3507\n","[32, 36, 'Toxic']\n","3508\n","[0, 7, 'Toxic']\n","3509\n","[16, 19, 'Toxic']\n","3510\n","[169, 173, 'Toxic']\n","3511\n","[36, 49, 'Toxic']\n","3512\n","[62, 66, 'Toxic']\n","3513\n","[42, 49, 'Toxic']\n","3514\n","[25, 30, 'Toxic']\n","3515\n","[79, 84, 'Toxic']\n","3516\n","[117, 125, 'Toxic']\n","3517\n","[69, 77, 'Toxic']\n","[119, 124, 'Toxic']\n","3518\n","[97, 111, 'Toxic']\n","[307, 313, 'Toxic']\n","3519\n","[126, 139, 'Toxic']\n","3520\n","[24, 27, 'Toxic']\n","3521\n","[311, 317, 'Toxic']\n","3522\n","[5, 19, 'Toxic']\n","[68, 74, 'Toxic']\n","3523\n","[42, 47, 'Toxic']\n","3524\n","[42, 46, 'Toxic']\n","3525\n","[0, 4, 'Toxic']\n","[177, 181, 'Toxic']\n","3526\n","[134, 137, 'Toxic']\n","3527\n","[18, 24, 'Toxic']\n","3528\n","[40, 48, 'Toxic']\n","3529\n","[75, 81, 'Toxic']\n","3530\n","[0, 5, 'Toxic']\n","3531\n","[13, 20, 'Toxic']\n","3532\n","[154, 163, 'Toxic']\n","[166, 171, 'Toxic']\n","[180, 191, 'Toxic']\n","[302, 305, 'Toxic']\n","[310, 315, 'Toxic']\n","[320, 336, 'Toxic']\n","3533\n","[63, 66, 'Toxic']\n","3534\n","[20, 26, 'Toxic']\n","[38, 41, 'Toxic']\n","3535\n","[262, 275, 'Toxic']\n","3536\n","[47, 53, 'Toxic']\n","[149, 155, 'Toxic']\n","3537\n","[13, 16, 'Toxic']\n","[24, 28, 'Toxic']\n","3538\n","[163, 167, 'Toxic']\n","3539\n","[15, 20, 'Toxic']\n","3540\n","[61, 64, 'Toxic']\n","3541\n","[24, 31, 'Toxic']\n","3542\n","[148, 152, 'Toxic']\n","3543\n","[9, 12, 'Toxic']\n","3544\n","[14, 39, 'Toxic']\n","3545\n","[31, 38, 'Toxic']\n","[347, 361, 'Toxic']\n","[394, 408, 'Toxic']\n","3546\n","[8, 15, 'Toxic']\n","[21, 26, 'Toxic']\n","3547\n","[14, 18, 'Toxic']\n","3548\n","[20, 25, 'Toxic']\n","3549\n","[15, 18, 'Toxic']\n","3550\n","[168, 179, 'Toxic']\n","[200, 208, 'Toxic']\n","[233, 238, 'Toxic']\n","3551\n","[22, 29, 'Toxic']\n","[355, 364, 'Toxic']\n","3552\n","[0, 14, 'Toxic']\n","3553\n","[9, 25, 'Toxic']\n","[38, 43, 'Toxic']\n","3554\n","[22, 26, 'Toxic']\n","3555\n","[30, 36, 'Toxic']\n","3556\n","[119, 124, 'Toxic']\n","3557\n","[0, 8, 'Toxic']\n","[67, 80, 'Toxic']\n","3558\n","[68, 77, 'Toxic']\n","3559\n","[59, 65, 'Toxic']\n","[161, 164, 'Toxic']\n","3560\n","[287, 292, 'Toxic']\n","[688, 693, 'Toxic']\n","3561\n","[5, 9, 'Toxic']\n","3562\n","[143, 175, 'Toxic']\n","3563\n","[39, 46, 'Toxic']\n","3564\n","[80, 87, 'Toxic']\n","3565\n","[53, 58, 'Toxic']\n","3566\n","[29, 37, 'Toxic']\n","[82, 87, 'Toxic']\n","[130, 138, 'Toxic']\n","3567\n","[7, 16, 'Toxic']\n","3568\n","[20, 25, 'Toxic']\n","3569\n","[56, 63, 'Toxic']\n","3570\n","[38, 45, 'Toxic']\n","3571\n","[16, 19, 'Toxic']\n","3572\n","[191, 199, 'Toxic']\n","3573\n","[36, 41, 'Toxic']\n","[101, 106, 'Toxic']\n","3574\n","[409, 424, 'Toxic']\n","[508, 514, 'Toxic']\n","3575\n","[5, 8, 'Toxic']\n","[190, 196, 'Toxic']\n","[202, 211, 'Toxic']\n","3576\n","[30, 34, 'Toxic']\n","3577\n","[62, 70, 'Toxic']\n","3578\n","[9, 12, 'Toxic']\n","3579\n","[2, 11, 'Toxic']\n","[14, 20, 'Toxic']\n","[23, 28, 'Toxic']\n","[31, 40, 'Toxic']\n","3580\n","[85, 89, 'Toxic']\n","[520, 529, 'Toxic']\n","3581\n","[20, 27, 'Toxic']\n","3582\n","[11, 14, 'Toxic']\n","[488, 493, 'Toxic']\n","3583\n","[63, 68, 'Toxic']\n","[119, 127, 'Toxic']\n","3584\n","[69, 73, 'Toxic']\n","3585\n","[26, 29, 'Toxic']\n","3586\n","[47, 51, 'Toxic']\n","3587\n","[113, 132, 'Toxic']\n","3588\n","[0, 3, 'Toxic']\n","[37, 42, 'Toxic']\n","3589\n","[31, 38, 'Toxic']\n","[49, 67, 'Toxic']\n","3590\n","[22, 27, 'Toxic']\n","3591\n","[6, 9, 'Toxic']\n","[18, 21, 'Toxic']\n","3592\n","[7, 11, 'Toxic']\n","3593\n","[104, 109, 'Toxic']\n","3594\n","[287, 293, 'Toxic']\n","3595\n","[8, 12, 'Toxic']\n","3596\n","[58, 61, 'Toxic']\n","3597\n","[34, 59, 'Toxic']\n","3598\n","[103, 108, 'Toxic']\n","3599\n","[111, 117, 'Toxic']\n","3600\n","[11, 15, 'Toxic']\n","[36, 39, 'Toxic']\n","3601\n","[11, 15, 'Toxic']\n","[203, 211, 'Toxic']\n","3602\n","[72, 76, 'Toxic']\n","3603\n","[2, 7, 'Toxic']\n","[31, 37, 'Toxic']\n","3604\n","[111, 115, 'Toxic']\n","[156, 170, 'Toxic']\n","3605\n","[545, 565, 'Toxic']\n","3606\n","[41, 46, 'Toxic']\n","[212, 217, 'Toxic']\n","3607\n","[21, 25, 'Toxic']\n","3608\n","[5, 11, 'Toxic']\n","3609\n","[9, 17, 'Toxic']\n","3610\n","[0, 4, 'Toxic']\n","3611\n","[299, 307, 'Toxic']\n","[432, 437, 'Toxic']\n","3612\n","[497, 506, 'Toxic']\n","3613\n","[24, 29, 'Toxic']\n","[86, 95, 'Toxic']\n","3614\n","[29, 36, 'Toxic']\n","3615\n","[78, 84, 'Toxic']\n","3616\n","[92, 97, 'Toxic']\n","[143, 149, 'Toxic']\n","[171, 177, 'Toxic']\n","3617\n","[58, 62, 'Toxic']\n","3618\n","[676, 681, 'Toxic']\n","3619\n","[18, 22, 'Toxic']\n","[54, 58, 'Toxic']\n","[70, 75, 'Toxic']\n","[116, 120, 'Toxic']\n","3620\n","[212, 219, 'Toxic']\n","3621\n","[82, 90, 'Toxic']\n","3622\n","[198, 206, 'Toxic']\n","3623\n","[50, 57, 'Toxic']\n","3624\n","[78, 111, 'Toxic']\n","3625\n","[58, 64, 'Toxic']\n","3626\n","[180, 188, 'Toxic']\n","3627\n","[120, 129, 'Toxic']\n","3628\n","[20, 44, 'Toxic']\n","3629\n","[7, 12, 'Toxic']\n","3630\n","[81, 86, 'Toxic']\n","3631\n","[91, 96, 'Toxic']\n","3632\n","[52, 57, 'Toxic']\n","[142, 153, 'Toxic']\n","3633\n","[11, 14, 'Toxic']\n","3634\n","[31, 34, 'Toxic']\n","3635\n","[45, 51, 'Toxic']\n","3636\n","[218, 225, 'Toxic']\n","3637\n","[95, 99, 'Toxic']\n","3638\n","[0, 31, 'Toxic']\n","3639\n","[190, 197, 'Toxic']\n","3640\n","[11, 17, 'Toxic']\n","[93, 102, 'Toxic']\n","3641\n","[19, 24, 'Toxic']\n","3642\n","[188, 192, 'Toxic']\n","3643\n","[158, 182, 'Toxic']\n","3644\n","[48, 52, 'Toxic']\n","3645\n","[87, 94, 'Toxic']\n","[134, 141, 'Toxic']\n","3646\n","[108, 111, 'Toxic']\n","3647\n","[0, 4, 'Toxic']\n","[101, 116, 'Toxic']\n","3648\n","[381, 386, 'Toxic']\n","3649\n","[113, 120, 'Toxic']\n","3650\n","[13, 22, 'Toxic']\n","3651\n","[25, 30, 'Toxic']\n","3652\n","[4, 9, 'Toxic']\n","3653\n","[96, 98, 'Toxic']\n","3654\n","[13, 16, 'Toxic']\n","3655\n","[12, 17, 'Toxic']\n","3656\n","[168, 173, 'Toxic']\n","3657\n","[109, 112, 'Toxic']\n","3658\n","[11, 15, 'Toxic']\n","[27, 34, 'Toxic']\n","[161, 168, 'Toxic']\n","3659\n","[14, 26, 'Toxic']\n","[54, 62, 'Toxic']\n","3660\n","[226, 231, 'Toxic']\n","3661\n","[18, 25, 'Toxic']\n","[250, 255, 'Toxic']\n","3662\n","[145, 150, 'Toxic']\n","3663\n","[9, 13, 'Toxic']\n","3664\n","[26, 56, 'Toxic']\n","[212, 216, 'Toxic']\n","3665\n","[13, 16, 'Toxic']\n","3666\n","[0, 4, 'Toxic']\n","3667\n","[73, 81, 'Toxic']\n","[201, 208, 'Toxic']\n","3668\n","[27, 32, 'Toxic']\n","3669\n","[686, 698, 'Toxic']\n","[748, 755, 'Toxic']\n","[791, 798, 'Toxic']\n","3670\n","[11, 18, 'Toxic']\n","3671\n","[17, 21, 'Toxic']\n","3672\n","[262, 266, 'Toxic']\n","3673\n","[12, 17, 'Toxic']\n","3674\n","[635, 643, 'Toxic']\n","[649, 655, 'Toxic']\n","3675\n","[28, 33, 'Toxic']\n","[67, 75, 'Toxic']\n","3676\n","[35, 42, 'Toxic']\n","3677\n","[83, 88, 'Toxic']\n","[91, 97, 'Toxic']\n","[100, 105, 'Toxic']\n","[108, 112, 'Toxic']\n","3678\n","[173, 199, 'Toxic']\n","3679\n","[26, 34, 'Toxic']\n","[50, 57, 'Toxic']\n","3680\n","[278, 283, 'Toxic']\n","3681\n","[89, 92, 'Toxic']\n","[109, 114, 'Toxic']\n","3682\n","[14, 24, 'Toxic']\n","3683\n","[28, 31, 'Toxic']\n","3684\n","[12, 18, 'Toxic']\n","[73, 90, 'Toxic']\n","[233, 248, 'Toxic']\n","3685\n","[0, 11, 'Toxic']\n","3686\n","[106, 115, 'Toxic']\n","3687\n","[32, 38, 'Toxic']\n","3688\n","[506, 509, 'Toxic']\n","[776, 798, 'Toxic']\n","3689\n","[7, 12, 'Toxic']\n","3690\n","[38, 41, 'Toxic']\n","3691\n","[52, 57, 'Toxic']\n","3692\n","[177, 182, 'Toxic']\n","3693\n","[8, 10, 'Toxic']\n","[16, 21, 'Toxic']\n","3694\n","[7, 12, 'Toxic']\n","3695\n","[43, 46, 'Toxic']\n","3696\n","[23, 28, 'Toxic']\n","[219, 224, 'Toxic']\n","3697\n","[17, 35, 'Toxic']\n","3698\n","[27, 33, 'Toxic']\n","3699\n","[0, 20, 'Toxic']\n","3700\n","[367, 372, 'Toxic']\n","3701\n","[6, 15, 'Toxic']\n","3702\n","[308, 320, 'Toxic']\n","3703\n","[128, 132, 'Toxic']\n","3704\n","[36, 45, 'Toxic']\n","[145, 152, 'Toxic']\n","3705\n","[164, 172, 'Toxic']\n","[305, 317, 'Toxic']\n","[323, 334, 'Toxic']\n","3706\n","[0, 3, 'Toxic']\n","[11, 16, 'Toxic']\n","3707\n","[292, 297, 'Toxic']\n","3708\n","[56, 63, 'Toxic']\n","3709\n","[127, 133, 'Toxic']\n","3710\n","[52, 61, 'Toxic']\n","3711\n","[0, 3, 'Toxic']\n","[6, 9, 'Toxic']\n","3712\n","[137, 142, 'Toxic']\n","3713\n","[16, 20, 'Toxic']\n","3714\n","[7, 13, 'Toxic']\n","3715\n","[35, 39, 'Toxic']\n","3716\n","[76, 84, 'Toxic']\n","3717\n","[5, 9, 'Toxic']\n","3718\n","[48, 65, 'Toxic']\n","[68, 72, 'Toxic']\n","[78, 80, 'Toxic']\n","3719\n","[32, 41, 'Toxic']\n","3720\n","[10, 18, 'Toxic']\n","3721\n","[0, 4, 'Toxic']\n","[371, 374, 'Toxic']\n","3722\n","[405, 412, 'Toxic']\n","3723\n","[107, 113, 'Toxic']\n","3724\n","[4, 8, 'Toxic']\n","3725\n","[268, 272, 'Toxic']\n","3726\n","[16, 20, 'Toxic']\n","[124, 130, 'Toxic']\n","[181, 188, 'Toxic']\n","3727\n","[33, 44, 'Toxic']\n","3728\n","[95, 109, 'Toxic']\n","3729\n","[0, 13, 'Toxic']\n","3730\n","[37, 40, 'Toxic']\n","3731\n","[26, 31, 'Toxic']\n","3732\n","[20, 47, 'Toxic']\n","3733\n","[116, 122, 'Toxic']\n","3734\n","[270, 278, 'Toxic']\n","[302, 335, 'Toxic']\n","3735\n","[35, 40, 'Toxic']\n","[114, 117, 'Toxic']\n","3736\n","[47, 52, 'Toxic']\n","3737\n","[32, 42, 'Toxic']\n","[92, 96, 'Toxic']\n","3738\n","[11, 16, 'Toxic']\n","3739\n","[93, 104, 'Toxic']\n","[179, 185, 'Toxic']\n","3740\n","[18, 23, 'Toxic']\n","3741\n","[0, 5, 'Toxic']\n","3742\n","[59, 66, 'Toxic']\n","3743\n","[6, 11, 'Toxic']\n","3744\n","[0, 27, 'Toxic']\n","3745\n","[159, 191, 'Toxic']\n","3746\n","[7, 10, 'Toxic']\n","3747\n","[13, 21, 'Toxic']\n","[44, 61, 'Toxic']\n","3748\n","[10, 13, 'Toxic']\n","[17, 26, 'Toxic']\n","3749\n","[36, 39, 'Toxic']\n","[50, 53, 'Toxic']\n","3750\n","[15, 20, 'Toxic']\n","3751\n","[74, 81, 'Toxic']\n","3752\n","[116, 121, 'Toxic']\n","[166, 171, 'Toxic']\n","3753\n","[199, 206, 'Toxic']\n","3754\n","[4, 9, 'Toxic']\n","[45, 62, 'Toxic']\n","3755\n","[4, 12, 'Toxic']\n","3756\n","[43, 47, 'Toxic']\n","[103, 108, 'Toxic']\n","3757\n","[31, 43, 'Toxic']\n","[47, 50, 'Toxic']\n","3758\n","[21, 29, 'Toxic']\n","3759\n","[161, 166, 'Toxic']\n","[218, 221, 'Toxic']\n","3760\n","[391, 396, 'Toxic']\n","3761\n","[142, 165, 'Toxic']\n","3762\n","[112, 118, 'Toxic']\n","3763\n","[38, 42, 'Toxic']\n","3764\n","[49, 69, 'Toxic']\n","3765\n","[1, 8, 'Toxic']\n","[30, 36, 'Toxic']\n","3766\n","[58, 62, 'Toxic']\n","3767\n","[54, 60, 'Toxic']\n","3768\n","[29, 41, 'Toxic']\n","[252, 256, 'Toxic']\n","[349, 361, 'Toxic']\n","3769\n","[116, 120, 'Toxic']\n","[165, 169, 'Toxic']\n","3770\n","[14, 21, 'Toxic']\n","3771\n","[72, 74, 'Toxic']\n","[84, 90, 'Toxic']\n","3772\n","[49, 57, 'Toxic']\n","3773\n","[8, 16, 'Toxic']\n","[310, 315, 'Toxic']\n","3774\n","[57, 62, 'Toxic']\n","3775\n","[100, 105, 'Toxic']\n","3776\n","[39, 59, 'Toxic']\n","3777\n","[7, 11, 'Toxic']\n","3778\n","[430, 434, 'Toxic']\n","3779\n","[9, 21, 'Toxic']\n","3780\n","[665, 670, 'Toxic']\n","3781\n","[21, 26, 'Toxic']\n","3782\n","[129, 134, 'Toxic']\n","3783\n","[25, 29, 'Toxic']\n","3784\n","[43, 51, 'Toxic']\n","[54, 62, 'Toxic']\n","[69, 89, 'Toxic']\n","3785\n","[10, 37, 'Toxic']\n","3786\n","[8, 12, 'Toxic']\n","3787\n","[0, 8, 'Toxic']\n","3788\n","[20, 28, 'Toxic']\n","[153, 157, 'Toxic']\n","3789\n","[9, 12, 'Toxic']\n","3790\n","[267, 272, 'Toxic']\n","3791\n","[25, 30, 'Toxic']\n","3792\n","[8, 17, 'Toxic']\n","3793\n","[9, 15, 'Toxic']\n","3794\n","[37, 40, 'Toxic']\n","3795\n","[92, 96, 'Toxic']\n","[196, 201, 'Toxic']\n","3796\n","[10, 14, 'Toxic']\n","3797\n","[72, 76, 'Toxic']\n","3798\n","[21, 29, 'Toxic']\n","3799\n","[91, 95, 'Toxic']\n","3800\n","[11, 19, 'Toxic']\n","3801\n","[0, 7, 'Toxic']\n","3802\n","[167, 175, 'Toxic']\n","3803\n","[0, 28, 'Toxic']\n","3804\n","[60, 63, 'Toxic']\n","3805\n","[21, 29, 'Toxic']\n","3806\n","[54, 75, 'Toxic']\n","3807\n","[33, 57, 'Toxic']\n","[122, 127, 'Toxic']\n","3808\n","[46, 52, 'Toxic']\n","3809\n","[66, 69, 'Toxic']\n","3810\n","[229, 234, 'Toxic']\n","3811\n","[88, 96, 'Toxic']\n","3812\n","[259, 265, 'Toxic']\n","3813\n","[25, 29, 'Toxic']\n","[76, 85, 'Toxic']\n","3814\n","[52, 56, 'Toxic']\n","3815\n","[40, 51, 'Toxic']\n","3816\n","[25, 33, 'Toxic']\n","[45, 77, 'Toxic']\n","3817\n","[98, 140, 'Toxic']\n","[142, 150, 'Toxic']\n","3818\n","[23, 28, 'Toxic']\n","[196, 221, 'Toxic']\n","3819\n","[39, 44, 'Toxic']\n","3820\n","[8, 16, 'Toxic']\n","[82, 91, 'Toxic']\n","3821\n","[48, 53, 'Toxic']\n","3822\n","[49, 52, 'Toxic']\n","3823\n","[9, 12, 'Toxic']\n","3824\n","[0, 6, 'Toxic']\n","[30, 39, 'Toxic']\n","3825\n","[19, 23, 'Toxic']\n","3826\n","[229, 242, 'Toxic']\n","3827\n","[54, 59, 'Toxic']\n","3828\n","[246, 251, 'Toxic']\n","3829\n","[19, 23, 'Toxic']\n","[168, 173, 'Toxic']\n","3830\n","[95, 130, 'Toxic']\n","3831\n","[17, 22, 'Toxic']\n","[118, 138, 'Toxic']\n","3832\n","[164, 169, 'Toxic']\n","3833\n","[13, 20, 'Toxic']\n","3834\n","[187, 202, 'Toxic']\n","3835\n","[24, 45, 'Toxic']\n","[61, 66, 'Toxic']\n","3836\n","[0, 4, 'Toxic']\n","3837\n","[275, 281, 'Toxic']\n","3838\n","[47, 52, 'Toxic']\n","3839\n","[9, 16, 'Toxic']\n","[23, 31, 'Toxic']\n","[218, 223, 'Toxic']\n","3840\n","[41, 45, 'Toxic']\n","3841\n","[91, 95, 'Toxic']\n","3842\n","[12, 26, 'Toxic']\n","3843\n","[33, 37, 'Toxic']\n","3844\n","[0, 6, 'Toxic']\n","3845\n","[36, 40, 'Toxic']\n","3846\n","[7, 11, 'Toxic']\n","3847\n","[35, 44, 'Toxic']\n","3848\n","[10, 15, 'Toxic']\n","3849\n","[18, 26, 'Toxic']\n","3850\n","[51, 65, 'Toxic']\n","3851\n","[32, 39, 'Toxic']\n","3852\n","[186, 189, 'Toxic']\n","3853\n","[84, 89, 'Toxic']\n","3854\n","[244, 252, 'Toxic']\n","3855\n","[12, 16, 'Toxic']\n","[116, 127, 'Toxic']\n","3856\n","[15, 18, 'Toxic']\n","3857\n","[36, 41, 'Toxic']\n","3858\n","[52, 70, 'Toxic']\n","3859\n","[160, 169, 'Toxic']\n","3860\n","[45, 51, 'Toxic']\n","3861\n","[26, 29, 'Toxic']\n","3862\n","[0, 13, 'Toxic']\n","3863\n","[28, 30, 'Toxic']\n","[45, 51, 'Toxic']\n","3864\n","[366, 370, 'Toxic']\n","3865\n","[227, 235, 'Toxic']\n","[264, 269, 'Toxic']\n","[420, 429, 'Toxic']\n","[461, 469, 'Toxic']\n","3866\n","[22, 25, 'Toxic']\n","3867\n","[8, 12, 'Toxic']\n","3868\n","[120, 126, 'Toxic']\n","3869\n","[21, 25, 'Toxic']\n","[125, 132, 'Toxic']\n","3870\n","[0, 3, 'Toxic']\n","[20, 31, 'Toxic']\n","3871\n","[28, 33, 'Toxic']\n","3872\n","[0, 24, 'Toxic']\n","3873\n","[0, 4, 'Toxic']\n","3874\n","[4, 9, 'Toxic']\n","3875\n","[404, 416, 'Toxic']\n","[626, 640, 'Toxic']\n","3876\n","[47, 64, 'Toxic']\n","3877\n","[710, 718, 'Toxic']\n","[720, 727, 'Toxic']\n","3878\n","[15, 20, 'Toxic']\n","3879\n","[85, 90, 'Toxic']\n","3880\n","[50, 55, 'Toxic']\n","3881\n","[107, 110, 'Toxic']\n","3882\n","[47, 50, 'Toxic']\n","3883\n","[0, 10, 'Toxic']\n","[80, 94, 'Toxic']\n","3884\n","[210, 213, 'Toxic']\n","3885\n","[47, 51, 'Toxic']\n","3886\n","[120, 125, 'Toxic']\n","3887\n","[44, 47, 'Toxic']\n","3888\n","[41, 45, 'Toxic']\n","[51, 62, 'Toxic']\n","3889\n","[24, 41, 'Toxic']\n","3890\n","[8, 16, 'Toxic']\n","[21, 29, 'Toxic']\n","[394, 408, 'Toxic']\n","3891\n","[92, 96, 'Toxic']\n","[237, 241, 'Toxic']\n","[283, 286, 'Toxic']\n","3892\n","[36, 43, 'Toxic']\n","3893\n","[198, 203, 'Toxic']\n","3894\n","[217, 222, 'Toxic']\n","3895\n","[270, 283, 'Toxic']\n","3896\n","[39, 51, 'Toxic']\n","[71, 79, 'Toxic']\n","3897\n","[345, 352, 'Toxic']\n","3898\n","[52, 57, 'Toxic']\n","3899\n","[10, 14, 'Toxic']\n","3900\n","[457, 460, 'Toxic']\n","3901\n","[40, 43, 'Toxic']\n","3902\n","[5, 9, 'Toxic']\n","3903\n","[26, 30, 'Toxic']\n","3904\n","[0, 3, 'Toxic']\n","3905\n","[122, 130, 'Toxic']\n","3906\n","[103, 107, 'Toxic']\n","3907\n","[82, 87, 'Toxic']\n","3908\n","[24, 60, 'Toxic']\n","3909\n","[42, 48, 'Toxic']\n","3910\n","[36, 40, 'Toxic']\n","3911\n","[128, 133, 'Toxic']\n","3912\n","[28, 31, 'Toxic']\n","3913\n","[19, 22, 'Toxic']\n","3914\n","[29, 34, 'Toxic']\n","[36, 41, 'Toxic']\n","3915\n","[82, 87, 'Toxic']\n","[89, 92, 'Toxic']\n","3916\n","[53, 61, 'Toxic']\n","[135, 143, 'Toxic']\n","3917\n","[70, 75, 'Toxic']\n","3918\n","[16, 24, 'Toxic']\n","3919\n","[7, 19, 'Toxic']\n","3920\n","[17, 28, 'Toxic']\n","3921\n","[59, 74, 'Toxic']\n","3922\n","[91, 100, 'Toxic']\n","3923\n","[9, 13, 'Toxic']\n","3924\n","[55, 60, 'Toxic']\n","[134, 139, 'Toxic']\n","3925\n","[43, 49, 'Toxic']\n","3926\n","[14, 19, 'Toxic']\n","[40, 45, 'Toxic']\n","[51, 60, 'Toxic']\n","3927\n","[786, 799, 'Toxic']\n","3928\n","[4, 17, 'Toxic']\n","3929\n","[18, 25, 'Toxic']\n","3930\n","[0, 5, 'Toxic']\n","3931\n","[69, 74, 'Toxic']\n","3932\n","[73, 77, 'Toxic']\n","[522, 531, 'Toxic']\n","3933\n","[185, 191, 'Toxic']\n","3934\n","[41, 49, 'Toxic']\n","[65, 68, 'Toxic']\n","3935\n","[173, 177, 'Toxic']\n","3936\n","[70, 78, 'Toxic']\n","3937\n","[54, 57, 'Toxic']\n","[255, 258, 'Toxic']\n","3938\n","[23, 27, 'Toxic']\n","3939\n","[217, 222, 'Toxic']\n","3940\n","[54, 60, 'Toxic']\n","[76, 119, 'Toxic']\n","3941\n","[53, 61, 'Toxic']\n","3942\n","[20, 24, 'Toxic']\n","[32, 35, 'Toxic']\n","[131, 135, 'Toxic']\n","[138, 141, 'Toxic']\n","3943\n","[115, 147, 'Toxic']\n","3944\n","[6, 12, 'Toxic']\n","3945\n","[17, 21, 'Toxic']\n","3946\n","[6, 11, 'Toxic']\n","3947\n","[7, 14, 'Toxic']\n","[319, 329, 'Toxic']\n","3948\n","[6, 8, 'Toxic']\n","[123, 132, 'Toxic']\n","3949\n","[543, 549, 'Toxic']\n","3950\n","[34, 39, 'Toxic']\n","3951\n","[30, 37, 'Toxic']\n","3952\n","[98, 106, 'Toxic']\n","3953\n","[0, 11, 'Toxic']\n","3954\n","[16, 24, 'Toxic']\n","3955\n","[8, 12, 'Toxic']\n","3956\n","[7, 26, 'Toxic']\n","3957\n","[216, 219, 'Toxic']\n","3958\n","[140, 146, 'Toxic']\n","3959\n","[90, 104, 'Toxic']\n","3960\n","[42, 52, 'Toxic']\n","[134, 138, 'Toxic']\n","[286, 290, 'Toxic']\n","3961\n","[11, 19, 'Toxic']\n","3962\n","[23, 26, 'Toxic']\n","3963\n","[10, 14, 'Toxic']\n","3964\n","[13, 22, 'Toxic']\n","3965\n","[18, 24, 'Toxic']\n","3966\n","[111, 120, 'Toxic']\n","3967\n","[0, 8, 'Toxic']\n","[110, 114, 'Toxic']\n","3968\n","[38, 43, 'Toxic']\n","[144, 155, 'Toxic']\n","3969\n","[24, 27, 'Toxic']\n","[190, 204, 'Toxic']\n","[297, 300, 'Toxic']\n","3970\n","[60, 62, 'Toxic']\n","3971\n","[95, 104, 'Toxic']\n","[110, 114, 'Toxic']\n","3972\n","[150, 156, 'Toxic']\n","[363, 369, 'Toxic']\n","[957, 982, 'Toxic']\n","3973\n","[134, 137, 'Toxic']\n","3974\n","[177, 185, 'Toxic']\n","3975\n","[39, 62, 'Toxic']\n","3976\n","[62, 83, 'Toxic']\n","3977\n","[11, 16, 'Toxic']\n","3978\n","[22, 31, 'Toxic']\n","3979\n","[9, 16, 'Toxic']\n","[18, 20, 'Toxic']\n","[22, 24, 'Toxic']\n","3980\n","[5, 24, 'Toxic']\n","[113, 136, 'Toxic']\n","3981\n","[44, 58, 'Toxic']\n","3982\n","[83, 88, 'Toxic']\n","3983\n","[148, 150, 'Toxic']\n","3984\n","[10, 15, 'Toxic']\n","[55, 59, 'Toxic']\n","3985\n","[331, 345, 'Toxic']\n","[415, 418, 'Toxic']\n","3986\n","[279, 284, 'Toxic']\n","3987\n","[40, 87, 'Toxic']\n","3988\n","[5, 12, 'Toxic']\n","[104, 114, 'Toxic']\n","3989\n","[0, 6, 'Toxic']\n","3990\n","[21, 26, 'Toxic']\n","3991\n","[52, 56, 'Toxic']\n","3992\n","[49, 56, 'Toxic']\n","3993\n","[67, 79, 'Toxic']\n","3994\n","[0, 5, 'Toxic']\n","3995\n","[16, 20, 'Toxic']\n","3996\n","[47, 53, 'Toxic']\n","3997\n","[26, 29, 'Toxic']\n","3998\n","[75, 86, 'Toxic']\n","3999\n","[137, 146, 'Toxic']\n","4000\n","[9, 12, 'Toxic']\n","4001\n","[20, 38, 'Toxic']\n","4002\n","[27, 31, 'Toxic']\n","4003\n","[262, 265, 'Toxic']\n","4004\n","[56, 59, 'Toxic']\n","4005\n","[56, 70, 'Toxic']\n","[108, 121, 'Toxic']\n","[139, 154, 'Toxic']\n","4006\n","[62, 66, 'Toxic']\n","4007\n","[0, 15, 'Toxic']\n","[142, 147, 'Toxic']\n","4008\n","[23, 28, 'Toxic']\n","4009\n","[23, 28, 'Toxic']\n","4010\n","[49, 52, 'Toxic']\n","4011\n","[29, 33, 'Toxic']\n","[65, 72, 'Toxic']\n","4012\n","[32, 38, 'Toxic']\n","[160, 168, 'Toxic']\n","4013\n","[32, 37, 'Toxic']\n","4014\n","[52, 56, 'Toxic']\n","4015\n","[0, 13, 'Toxic']\n","4016\n","[31, 35, 'Toxic']\n","[42, 53, 'Toxic']\n","4017\n","[25, 37, 'Toxic']\n","4018\n","[15, 20, 'Toxic']\n","4019\n","[266, 273, 'Toxic']\n","4020\n","[0, 6, 'Toxic']\n","[40, 47, 'Toxic']\n","4021\n","[41, 59, 'Toxic']\n","[100, 105, 'Toxic']\n","4022\n","[90, 146, 'Toxic']\n","4023\n","[0, 3, 'Toxic']\n","[5, 12, 'Toxic']\n","4024\n","[22, 27, 'Toxic']\n","[116, 121, 'Toxic']\n","4025\n","[10, 15, 'Toxic']\n","4026\n","[135, 151, 'Toxic']\n","4027\n","[26, 31, 'Toxic']\n","4028\n","[52, 57, 'Toxic']\n","4029\n","[107, 111, 'Toxic']\n","[194, 202, 'Toxic']\n","4030\n","[38, 42, 'Toxic']\n","4031\n","[11, 60, 'Toxic']\n","4032\n","[0, 15, 'Toxic']\n","4033\n","[30, 35, 'Toxic']\n","4034\n","[7, 20, 'Toxic']\n","4035\n","[144, 154, 'Toxic']\n","4036\n","[34, 46, 'Toxic']\n","4037\n","[40, 47, 'Toxic']\n","[53, 63, 'Toxic']\n","[469, 476, 'Toxic']\n","4038\n","[12, 23, 'Toxic']\n","[25, 29, 'Toxic']\n","[31, 36, 'Toxic']\n","4039\n","[38, 45, 'Toxic']\n","4040\n","[14, 18, 'Toxic']\n","[76, 80, 'Toxic']\n","[187, 195, 'Toxic']\n","[201, 209, 'Toxic']\n","4041\n","[41, 61, 'Toxic']\n","4042\n","[46, 50, 'Toxic']\n","4043\n","[254, 259, 'Toxic']\n","[267, 272, 'Toxic']\n","[280, 283, 'Toxic']\n","4044\n","[21, 27, 'Toxic']\n","4045\n","[0, 21, 'Toxic']\n","[72, 79, 'Toxic']\n","[85, 89, 'Toxic']\n","4046\n","[15, 20, 'Toxic']\n","[90, 93, 'Toxic']\n","4047\n","[83, 91, 'Toxic']\n","4048\n","[78, 80, 'Toxic']\n","4049\n","[33, 38, 'Toxic']\n","4050\n","[130, 134, 'Toxic']\n","4051\n","[156, 161, 'Toxic']\n","4052\n","[19, 23, 'Toxic']\n","[33, 41, 'Toxic']\n","4053\n","[15, 18, 'Toxic']\n","4054\n","[112, 117, 'Toxic']\n","[502, 507, 'Toxic']\n","4055\n","[16, 31, 'Toxic']\n","4056\n","[9, 13, 'Toxic']\n","4057\n","[22, 33, 'Toxic']\n","4058\n","[5, 13, 'Toxic']\n","[196, 201, 'Toxic']\n","[209, 214, 'Toxic']\n","4059\n","[38, 44, 'Toxic']\n","4060\n","[32, 46, 'Toxic']\n","4061\n","[8, 18, 'Toxic']\n","4062\n","[119, 126, 'Toxic']\n","4063\n","[2, 7, 'Toxic']\n","4064\n","[5, 11, 'Toxic']\n","[74, 79, 'Toxic']\n","4065\n","[41, 45, 'Toxic']\n","4066\n","[418, 423, 'Toxic']\n","4067\n","[7, 15, 'Toxic']\n","[190, 199, 'Toxic']\n","4068\n","[130, 135, 'Toxic']\n","[167, 182, 'Toxic']\n","4069\n","[84, 88, 'Toxic']\n","4070\n","[4, 9, 'Toxic']\n","4071\n","[13, 22, 'Toxic']\n","[55, 68, 'Toxic']\n","4072\n","[11, 18, 'Toxic']\n","[23, 32, 'Toxic']\n","4073\n","[184, 187, 'Toxic']\n","4074\n","[18, 23, 'Toxic']\n","4075\n","[18, 21, 'Toxic']\n","4076\n","[9, 13, 'Toxic']\n","4077\n","[73, 89, 'Toxic']\n","4078\n","[0, 43, 'Toxic']\n","4079\n","[390, 394, 'Toxic']\n","4080\n","[35, 41, 'Toxic']\n","4081\n","[206, 208, 'Toxic']\n","4082\n","[13, 30, 'Toxic']\n","4083\n","[120, 125, 'Toxic']\n","4084\n","[17, 28, 'Toxic']\n","[95, 101, 'Toxic']\n","[130, 158, 'Toxic']\n","4085\n","[30, 32, 'Toxic']\n","4086\n","[0, 6, 'Toxic']\n","4087\n","[98, 104, 'Toxic']\n","4088\n","[277, 282, 'Toxic']\n","4089\n","[182, 187, 'Toxic']\n","4090\n","[52, 59, 'Toxic']\n","4091\n","[348, 356, 'Toxic']\n","4092\n","[65, 76, 'Toxic']\n","4093\n","[10, 19, 'Toxic']\n","4094\n","[159, 164, 'Toxic']\n","[269, 294, 'Toxic']\n","4095\n","[34, 38, 'Toxic']\n","4096\n","[11, 16, 'Toxic']\n","4097\n","[272, 289, 'Toxic']\n","4098\n","[39, 43, 'Toxic']\n","4099\n","[152, 156, 'Toxic']\n","4100\n","[110, 118, 'Toxic']\n","4101\n","[172, 180, 'Toxic']\n","4102\n","[11, 14, 'Toxic']\n","[164, 168, 'Toxic']\n","4103\n","[61, 63, 'Toxic']\n","[79, 86, 'Toxic']\n","[182, 187, 'Toxic']\n","4104\n","[68, 81, 'Toxic']\n","[179, 189, 'Toxic']\n","4105\n","[16, 20, 'Toxic']\n","4106\n","[7, 10, 'Toxic']\n","[109, 113, 'Toxic']\n","[145, 149, 'Toxic']\n","4107\n","[3, 6, 'Toxic']\n","4108\n","[7, 16, 'Toxic']\n","[102, 110, 'Toxic']\n","4109\n","[12, 23, 'Toxic']\n","4110\n","[5, 9, 'Toxic']\n","4111\n","[28, 37, 'Toxic']\n","4112\n","[8, 13, 'Toxic']\n","[18, 22, 'Toxic']\n","[28, 31, 'Toxic']\n","4113\n","[19, 23, 'Toxic']\n","4114\n","[16, 30, 'Toxic']\n","[35, 78, 'Toxic']\n","4115\n","[64, 77, 'Toxic']\n","4116\n","[146, 152, 'Toxic']\n","4117\n","[55, 58, 'Toxic']\n","4118\n","[98, 103, 'Toxic']\n","[371, 376, 'Toxic']\n","4119\n","[164, 165, 'Toxic']\n","4120\n","[50, 53, 'Toxic']\n","4121\n","[42, 45, 'Toxic']\n","4122\n","[20, 25, 'Toxic']\n","4123\n","[14, 21, 'Toxic']\n","[32, 38, 'Toxic']\n","[48, 57, 'Toxic']\n","[84, 92, 'Toxic']\n","4124\n","[57, 61, 'Toxic']\n","4125\n","[27, 32, 'Toxic']\n","4126\n","[186, 191, 'Toxic']\n","4127\n","[13, 21, 'Toxic']\n","4128\n","[13, 17, 'Toxic']\n","4129\n","[46, 51, 'Toxic']\n","[69, 73, 'Toxic']\n","4130\n","[15, 18, 'Toxic']\n","4131\n","[120, 123, 'Toxic']\n","[163, 168, 'Toxic']\n","4132\n","[53, 56, 'Toxic']\n","4133\n","[0, 30, 'Toxic']\n","4134\n","[12, 17, 'Toxic']\n","4135\n","[11, 16, 'Toxic']\n","4136\n","[0, 7, 'Toxic']\n","[10, 17, 'Toxic']\n","[19, 31, 'Toxic']\n","4137\n","[4, 8, 'Toxic']\n","4138\n","[8, 11, 'Toxic']\n","4139\n","[114, 117, 'Toxic']\n","4140\n","[202, 207, 'Toxic']\n","4141\n","[28, 45, 'Toxic']\n","4142\n","[58, 63, 'Toxic']\n","4143\n","[321, 326, 'Toxic']\n","4144\n","[107, 112, 'Toxic']\n","4145\n","[83, 90, 'Toxic']\n","4146\n","[59, 64, 'Toxic']\n","4147\n","[39, 42, 'Toxic']\n","4148\n","[16, 25, 'Toxic']\n","4149\n","[48, 54, 'Toxic']\n","4150\n","[413, 425, 'Toxic']\n","4151\n","[22, 32, 'Toxic']\n","4152\n","[229, 234, 'Toxic']\n","4153\n","[424, 429, 'Toxic']\n","4154\n","[22, 25, 'Toxic']\n","4155\n","[25, 31, 'Toxic']\n","4156\n","[13, 17, 'Toxic']\n","[37, 47, 'Toxic']\n","4157\n","[43, 48, 'Toxic']\n","4158\n","[86, 93, 'Toxic']\n","[236, 254, 'Toxic']\n","4159\n","[19, 26, 'Toxic']\n","[47, 53, 'Toxic']\n","4160\n","[45, 59, 'Toxic']\n","[324, 327, 'Toxic']\n","4161\n","[0, 5, 'Toxic']\n","4162\n","[90, 94, 'Toxic']\n","4163\n","[208, 213, 'Toxic']\n","4164\n","[11, 14, 'Toxic']\n","[25, 29, 'Toxic']\n","4165\n","[15, 20, 'Toxic']\n","4166\n","[97, 102, 'Toxic']\n","4167\n","[129, 134, 'Toxic']\n","4168\n","[39, 46, 'Toxic']\n","4169\n","[1, 13, 'Toxic']\n","4170\n","[97, 103, 'Toxic']\n","4171\n","[20, 23, 'Toxic']\n","[68, 80, 'Toxic']\n","4172\n","[15, 19, 'Toxic']\n","4173\n","[127, 130, 'Toxic']\n","4174\n","[11, 16, 'Toxic']\n","4175\n","[22, 27, 'Toxic']\n","4176\n","[4, 8, 'Toxic']\n","[58, 62, 'Toxic']\n","[147, 152, 'Toxic']\n","[217, 221, 'Toxic']\n","4177\n","[24, 27, 'Toxic']\n","[47, 51, 'Toxic']\n","[264, 267, 'Toxic']\n","4178\n","[26, 31, 'Toxic']\n","[378, 383, 'Toxic']\n","[392, 397, 'Toxic']\n","4179\n","[60, 71, 'Toxic']\n","4180\n","[49, 57, 'Toxic']\n","[109, 121, 'Toxic']\n","4181\n","[66, 77, 'Toxic']\n","[82, 90, 'Toxic']\n","[97, 102, 'Toxic']\n","4182\n","[8, 14, 'Toxic']\n","4183\n","[11, 14, 'Toxic']\n","4184\n","[171, 199, 'Toxic']\n","4185\n","[11, 23, 'Toxic']\n","[86, 89, 'Toxic']\n","4186\n","[454, 464, 'Toxic']\n","4187\n","[13, 17, 'Toxic']\n","4188\n","[13, 34, 'Toxic']\n","4189\n","[209, 214, 'Toxic']\n","[530, 535, 'Toxic']\n","4190\n","[166, 171, 'Toxic']\n","4191\n","[18, 49, 'Toxic']\n","4192\n","[10, 22, 'Toxic']\n","[28, 32, 'Toxic']\n","4193\n","[73, 82, 'Toxic']\n","[87, 102, 'Toxic']\n","4194\n","[43, 51, 'Toxic']\n","4195\n","[24, 35, 'Toxic']\n","4196\n","[26, 30, 'Toxic']\n","[40, 48, 'Toxic']\n","4197\n","[33, 40, 'Toxic']\n","4198\n","[53, 60, 'Toxic']\n","[63, 74, 'Toxic']\n","[77, 80, 'Toxic']\n","[83, 91, 'Toxic']\n","[94, 105, 'Toxic']\n","4199\n","[0, 6, 'Toxic']\n","4200\n","[0, 20, 'Toxic']\n","[67, 74, 'Toxic']\n","4201\n","[283, 293, 'Toxic']\n","4202\n","[219, 225, 'Toxic']\n","4203\n","[18, 25, 'Toxic']\n","4204\n","[47, 51, 'Toxic']\n","4205\n","[29, 34, 'Toxic']\n","[43, 73, 'Toxic']\n","4206\n","[38, 43, 'Toxic']\n","4207\n","[22, 29, 'Toxic']\n","4208\n","[45, 66, 'Toxic']\n","4209\n","[12, 19, 'Toxic']\n","[21, 29, 'Toxic']\n","4210\n","[0, 23, 'Toxic']\n","4211\n","[85, 96, 'Toxic']\n","4212\n","[30, 38, 'Toxic']\n","[40, 47, 'Toxic']\n","4213\n","[259, 267, 'Toxic']\n","4214\n","[33, 43, 'Toxic']\n","[57, 60, 'Toxic']\n","[75, 82, 'Toxic']\n","4215\n","[2, 7, 'Toxic']\n","4216\n","[37, 42, 'Toxic']\n","[48, 53, 'Toxic']\n","4217\n","[14, 22, 'Toxic']\n","[67, 71, 'Toxic']\n","[80, 88, 'Toxic']\n","4218\n","[161, 165, 'Toxic']\n","4219\n","[231, 234, 'Toxic']\n","4220\n","[96, 101, 'Toxic']\n","4221\n","[38, 55, 'Toxic']\n","4222\n","[32, 39, 'Toxic']\n","4223\n","[278, 287, 'Toxic']\n","4224\n","[164, 168, 'Toxic']\n","[205, 210, 'Toxic']\n","4225\n","[78, 83, 'Toxic']\n","4226\n","[109, 115, 'Toxic']\n","4227\n","[5, 9, 'Toxic']\n","4228\n","[0, 26, 'Toxic']\n","4229\n","[13, 17, 'Toxic']\n","[57, 68, 'Toxic']\n","4230\n","[38, 41, 'Toxic']\n","4231\n","[41, 49, 'Toxic']\n","4232\n","[32, 38, 'Toxic']\n","[40, 43, 'Toxic']\n","4233\n","[16, 21, 'Toxic']\n","4234\n","[85, 87, 'Toxic']\n","4235\n","[146, 169, 'Toxic']\n","4236\n","[151, 157, 'Toxic']\n","4237\n","[4, 12, 'Toxic']\n","4238\n","[82, 89, 'Toxic']\n","[121, 124, 'Toxic']\n","4239\n","[5, 21, 'Toxic']\n","4240\n","[22, 27, 'Toxic']\n","[108, 145, 'Toxic']\n","4241\n","[186, 194, 'Toxic']\n","[232, 238, 'Toxic']\n","4242\n","[142, 147, 'Toxic']\n","4243\n","[196, 202, 'Toxic']\n","4244\n","[29, 37, 'Toxic']\n","[81, 88, 'Toxic']\n","4245\n","[24, 31, 'Toxic']\n","4246\n","[115, 119, 'Toxic']\n","[217, 228, 'Toxic']\n","4247\n","[154, 166, 'Toxic']\n","4248\n","[44, 49, 'Toxic']\n","[67, 71, 'Toxic']\n","4249\n","[42, 48, 'Toxic']\n","4250\n","[45, 49, 'Toxic']\n","[62, 69, 'Toxic']\n","4251\n","[5, 8, 'Toxic']\n","4252\n","[0, 6, 'Toxic']\n","4253\n","[30, 33, 'Toxic']\n","[38, 43, 'Toxic']\n","[111, 115, 'Toxic']\n","4254\n","[16, 21, 'Toxic']\n","4255\n","[248, 254, 'Toxic']\n","4256\n","[379, 383, 'Toxic']\n","4257\n","[64, 80, 'Toxic']\n","4258\n","[60, 67, 'Toxic']\n","[209, 214, 'Toxic']\n","[240, 245, 'Toxic']\n","4259\n","[15, 17, 'Toxic']\n","4260\n","[113, 124, 'Toxic']\n","4261\n","[34, 40, 'Toxic']\n","4262\n","[56, 60, 'Toxic']\n","4263\n","[307, 312, 'Toxic']\n","4264\n","[111, 117, 'Toxic']\n","4265\n","[39, 45, 'Toxic']\n","4266\n","[185, 196, 'Toxic']\n","4267\n","[32, 37, 'Toxic']\n","[75, 79, 'Toxic']\n","4268\n","[8, 13, 'Toxic']\n","[41, 48, 'Toxic']\n","4269\n","[30, 36, 'Toxic']\n","4270\n","[92, 96, 'Toxic']\n","4271\n","[0, 7, 'Toxic']\n","4272\n","[47, 59, 'Toxic']\n","4273\n","[75, 79, 'Toxic']\n","4274\n","[46, 49, 'Toxic']\n","[98, 102, 'Toxic']\n","4275\n","[0, 28, 'Toxic']\n","4276\n","[5, 9, 'Toxic']\n","4277\n","[33, 36, 'Toxic']\n","4278\n","[71, 78, 'Toxic']\n","[84, 91, 'Toxic']\n","4279\n","[39, 43, 'Toxic']\n","4280\n","[13, 35, 'Toxic']\n","4281\n","[19, 31, 'Toxic']\n","4282\n","[335, 340, 'Toxic']\n","4283\n","[0, 15, 'Toxic']\n","4284\n","[35, 54, 'Toxic']\n","4285\n","[0, 8, 'Toxic']\n","4286\n","[31, 35, 'Toxic']\n","4287\n","[38, 41, 'Toxic']\n","[68, 75, 'Toxic']\n","4288\n","[0, 4, 'Toxic']\n","4289\n","[6, 11, 'Toxic']\n","[334, 337, 'Toxic']\n","4290\n","[27, 34, 'Toxic']\n","4291\n","[0, 43, 'Toxic']\n","[158, 177, 'Toxic']\n","4292\n","[16, 21, 'Toxic']\n","4293\n","[119, 146, 'Toxic']\n","4294\n","[23, 29, 'Toxic']\n","[58, 64, 'Toxic']\n","4295\n","[113, 118, 'Toxic']\n","4296\n","[114, 117, 'Toxic']\n","4297\n","[329, 335, 'Toxic']\n","4298\n","[14, 31, 'Toxic']\n","4299\n","[295, 303, 'Toxic']\n","4300\n","[0, 15, 'Toxic']\n","4301\n","[10, 17, 'Toxic']\n","[19, 23, 'Toxic']\n","4302\n","[55, 63, 'Toxic']\n","4303\n","[23, 32, 'Toxic']\n","4304\n","[29, 37, 'Toxic']\n","4305\n","[101, 106, 'Toxic']\n","4306\n","[24, 29, 'Toxic']\n","4307\n","[0, 5, 'Toxic']\n","4308\n","[0, 22, 'Toxic']\n","4309\n","[457, 462, 'Toxic']\n","[482, 488, 'Toxic']\n","4310\n","[0, 40, 'Toxic']\n","4311\n","[26, 33, 'Toxic']\n","[170, 182, 'Toxic']\n","4312\n","[8, 15, 'Toxic']\n","4313\n","[423, 428, 'Toxic']\n","4314\n","[8, 15, 'Toxic']\n","4315\n","[22, 34, 'Toxic']\n","4316\n","[118, 121, 'Toxic']\n","4317\n","[59, 63, 'Toxic']\n","4318\n","[363, 376, 'Toxic']\n","[528, 532, 'Toxic']\n","4319\n","[28, 32, 'Toxic']\n","[161, 167, 'Toxic']\n","4320\n","[34, 42, 'Toxic']\n","4321\n","[0, 4, 'Toxic']\n","[105, 110, 'Toxic']\n","4322\n","[24, 26, 'Toxic']\n","[213, 218, 'Toxic']\n","4323\n","[18, 39, 'Toxic']\n","4324\n","[197, 202, 'Toxic']\n","[304, 310, 'Toxic']\n","4325\n","[77, 80, 'Toxic']\n","[113, 117, 'Toxic']\n","4326\n","[49, 56, 'Toxic']\n","4327\n","[105, 114, 'Toxic']\n","[334, 344, 'Toxic']\n","4328\n","[45, 58, 'Toxic']\n","4329\n","[35, 42, 'Toxic']\n","4330\n","[22, 28, 'Toxic']\n","4331\n","[178, 184, 'Toxic']\n","4332\n","[31, 38, 'Toxic']\n","4333\n","[67, 73, 'Toxic']\n","4334\n","[26, 31, 'Toxic']\n","4335\n","[1, 18, 'Toxic']\n","4336\n","[20, 26, 'Toxic']\n","[28, 35, 'Toxic']\n","4337\n","[0, 9, 'Toxic']\n","[40, 45, 'Toxic']\n","[74, 80, 'Toxic']\n","[86, 105, 'Toxic']\n","4338\n","[0, 9, 'Toxic']\n","4339\n","[8, 14, 'Toxic']\n","4340\n","[116, 120, 'Toxic']\n","4341\n","[441, 444, 'Toxic']\n","[593, 596, 'Toxic']\n","4342\n","[49, 53, 'Toxic']\n","4343\n","[35, 39, 'Toxic']\n","4344\n","[206, 214, 'Toxic']\n","4345\n","[0, 4, 'Toxic']\n","4346\n","[108, 113, 'Toxic']\n","4347\n","[4, 11, 'Toxic']\n","4348\n","[89, 91, 'Toxic']\n","[93, 97, 'Toxic']\n","4349\n","[8, 15, 'Toxic']\n","[17, 20, 'Toxic']\n","[26, 30, 'Toxic']\n","4350\n","[157, 165, 'Toxic']\n","4351\n","[136, 139, 'Toxic']\n","4352\n","[51, 58, 'Toxic']\n","4353\n","[100, 105, 'Toxic']\n","4354\n","[154, 159, 'Toxic']\n","4355\n","[67, 71, 'Toxic']\n","[143, 147, 'Toxic']\n","4356\n","[9, 14, 'Toxic']\n","[43, 55, 'Toxic']\n","4357\n","[0, 8, 'Toxic']\n","4358\n","[48, 68, 'Toxic']\n","4359\n","[22, 27, 'Toxic']\n","4360\n","[20, 30, 'Toxic']\n","4361\n","[57, 62, 'Toxic']\n","[206, 209, 'Toxic']\n","[274, 281, 'Toxic']\n","[920, 926, 'Toxic']\n","4362\n","[523, 532, 'Toxic']\n","4363\n","[154, 159, 'Toxic']\n","4364\n","[58, 67, 'Toxic']\n","[184, 188, 'Toxic']\n","4365\n","[44, 67, 'Toxic']\n","4366\n","[68, 71, 'Toxic']\n","4367\n","[188, 201, 'Toxic']\n","4368\n","[69, 74, 'Toxic']\n","4369\n","[15, 19, 'Toxic']\n","4370\n","[8, 12, 'Toxic']\n","4371\n","[0, 5, 'Toxic']\n","4372\n","[4, 11, 'Toxic']\n","[470, 478, 'Toxic']\n","4373\n","[119, 124, 'Toxic']\n","[296, 299, 'Toxic']\n","4374\n","[0, 12, 'Toxic']\n","[15, 23, 'Toxic']\n","4375\n","[83, 88, 'Toxic']\n","4376\n","[59, 66, 'Toxic']\n","[82, 89, 'Toxic']\n","4377\n","[0, 9, 'Toxic']\n","4378\n","[4, 9, 'Toxic']\n","[46, 50, 'Toxic']\n","4379\n","[89, 93, 'Toxic']\n","[173, 185, 'Toxic']\n","4380\n","[64, 68, 'Toxic']\n","4381\n","[119, 133, 'Toxic']\n","4382\n","[0, 4, 'Toxic']\n","4383\n","[91, 99, 'Toxic']\n","4384\n","[41, 49, 'Toxic']\n","4385\n","[26, 29, 'Toxic']\n","[31, 36, 'Toxic']\n","4386\n","[40, 59, 'Toxic']\n","4387\n","[288, 293, 'Toxic']\n","[460, 465, 'Toxic']\n","4388\n","[11, 16, 'Toxic']\n","4389\n","[263, 269, 'Toxic']\n","4390\n","[170, 176, 'Toxic']\n","4391\n","[67, 88, 'Toxic']\n","4392\n","[45, 51, 'Toxic']\n","4393\n","[633, 638, 'Toxic']\n","4394\n","[123, 126, 'Toxic']\n","4395\n","[116, 123, 'Toxic']\n","4396\n","[90, 94, 'Toxic']\n","[130, 134, 'Toxic']\n","4397\n","[20, 24, 'Toxic']\n","4398\n","[79, 99, 'Toxic']\n","[179, 204, 'Toxic']\n","4399\n","[2, 7, 'Toxic']\n","4400\n","[8, 15, 'Toxic']\n","[246, 254, 'Toxic']\n","4401\n","[24, 32, 'Toxic']\n","[112, 116, 'Toxic']\n","4402\n","[8, 12, 'Toxic']\n","[14, 17, 'Toxic']\n","4403\n","[155, 168, 'Toxic']\n","4404\n","[29, 45, 'Toxic']\n","4405\n","[23, 27, 'Toxic']\n","4406\n","[157, 168, 'Toxic']\n","4407\n","[19, 26, 'Toxic']\n","4408\n","[7, 13, 'Toxic']\n","[113, 119, 'Toxic']\n","4409\n","[32, 35, 'Toxic']\n","4410\n","[58, 66, 'Toxic']\n","4411\n","[17, 22, 'Toxic']\n","4412\n","[50, 57, 'Toxic']\n","[62, 66, 'Toxic']\n","4413\n","[14, 20, 'Toxic']\n","4414\n","[61, 71, 'Toxic']\n","4415\n","[0, 8, 'Toxic']\n","4416\n","[25, 28, 'Toxic']\n","4417\n","[9, 12, 'Toxic']\n","[35, 38, 'Toxic']\n","4418\n","[35, 40, 'Toxic']\n","[200, 205, 'Toxic']\n","4419\n","[195, 206, 'Toxic']\n","4420\n","[87, 115, 'Toxic']\n","4421\n","[15, 24, 'Toxic']\n","4422\n","[154, 157, 'Toxic']\n","[164, 168, 'Toxic']\n","4423\n","[48, 52, 'Toxic']\n","[303, 310, 'Toxic']\n","4424\n","[50, 54, 'Toxic']\n","4425\n","[0, 4, 'Toxic']\n","4426\n","[244, 250, 'Toxic']\n","4427\n","[11, 20, 'Toxic']\n","4428\n","[42, 46, 'Toxic']\n","4429\n","[28, 69, 'Toxic']\n","[72, 84, 'Toxic']\n","[96, 103, 'Toxic']\n","4430\n","[34, 61, 'Toxic']\n","4431\n","[4, 9, 'Toxic']\n","4432\n","[21, 28, 'Toxic']\n","4433\n","[50, 56, 'Toxic']\n","[311, 341, 'Toxic']\n","4434\n","[4, 8, 'Toxic']\n","4435\n","[0, 9, 'Toxic']\n","4436\n","[144, 149, 'Toxic']\n","[172, 177, 'Toxic']\n","4437\n","[9, 15, 'Toxic']\n","[35, 42, 'Toxic']\n","[74, 77, 'Toxic']\n","4438\n","[120, 126, 'Toxic']\n","4439\n","[42, 47, 'Toxic']\n","4440\n","[8, 13, 'Toxic']\n","[159, 164, 'Toxic']\n","4441\n","[145, 159, 'Toxic']\n","4442\n","[0, 7, 'Toxic']\n","4443\n","[114, 118, 'Toxic']\n","4444\n","[39, 44, 'Toxic']\n","4445\n","[14, 20, 'Toxic']\n","[108, 115, 'Toxic']\n","4446\n","[11, 15, 'Toxic']\n","[354, 358, 'Toxic']\n","4447\n","[32, 35, 'Toxic']\n","4448\n","[607, 612, 'Toxic']\n","4449\n","[23, 28, 'Toxic']\n","4450\n","[109, 116, 'Toxic']\n","4451\n","[4, 7, 'Toxic']\n","4452\n","[0, 3, 'Toxic']\n","[96, 99, 'Toxic']\n","[128, 147, 'Toxic']\n","4453\n","[54, 58, 'Toxic']\n","4454\n","[132, 157, 'Toxic']\n","4455\n","[323, 334, 'Toxic']\n","4456\n","[19, 23, 'Toxic']\n","4457\n","[0, 16, 'Toxic']\n","4458\n","[44, 48, 'Toxic']\n","4459\n","[8, 12, 'Toxic']\n","4460\n","[56, 61, 'Toxic']\n","4461\n","[120, 128, 'Toxic']\n","4462\n","[35, 39, 'Toxic']\n","4463\n","[60, 98, 'Toxic']\n","4464\n","[41, 50, 'Toxic']\n","4465\n","[17, 22, 'Toxic']\n","[72, 77, 'Toxic']\n","4466\n","[16, 21, 'Toxic']\n","[47, 55, 'Toxic']\n","4467\n","[89, 100, 'Toxic']\n","4468\n","[111, 118, 'Toxic']\n","4469\n","[52, 56, 'Toxic']\n","4470\n","[14, 25, 'Toxic']\n","[55, 62, 'Toxic']\n","[108, 115, 'Toxic']\n","4471\n","[38, 42, 'Toxic']\n","4472\n","[124, 132, 'Toxic']\n","4473\n","[17, 23, 'Toxic']\n","4474\n","[0, 5, 'Toxic']\n","4475\n","[5, 9, 'Toxic']\n","4476\n","[0, 5, 'Toxic']\n","4477\n","[24, 28, 'Toxic']\n","4478\n","[40, 44, 'Toxic']\n","[67, 74, 'Toxic']\n","[140, 145, 'Toxic']\n","4479\n","[9, 12, 'Toxic']\n","[35, 38, 'Toxic']\n","4480\n","[0, 13, 'Toxic']\n","4481\n","[34, 42, 'Toxic']\n","4482\n","[33, 38, 'Toxic']\n","[132, 137, 'Toxic']\n","4483\n","[45, 50, 'Toxic']\n","4484\n","[53, 61, 'Toxic']\n","[63, 85, 'Toxic']\n","4485\n","[16, 21, 'Toxic']\n","4486\n","[20, 30, 'Toxic']\n","4487\n","[7, 11, 'Toxic']\n","4488\n","[45, 56, 'Toxic']\n","4489\n","[0, 5, 'Toxic']\n","[17, 23, 'Toxic']\n","4490\n","[0, 15, 'Toxic']\n","4491\n","[373, 378, 'Toxic']\n","4492\n","[38, 45, 'Toxic']\n","4493\n","[19, 32, 'Toxic']\n","4494\n","[198, 206, 'Toxic']\n","[276, 280, 'Toxic']\n","4495\n","[77, 81, 'Toxic']\n","4496\n","[6, 31, 'Toxic']\n","4497\n","[162, 167, 'Toxic']\n","4498\n","[8, 11, 'Toxic']\n","4499\n","[55, 61, 'Toxic']\n","4500\n","[35, 38, 'Toxic']\n","4501\n","[0, 3, 'Toxic']\n","4502\n","[214, 219, 'Toxic']\n","[272, 280, 'Toxic']\n","4503\n","[367, 372, 'Toxic']\n","4504\n","[78, 83, 'Toxic']\n","4505\n","[0, 2, 'Toxic']\n","4506\n","[7, 19, 'Toxic']\n","4507\n","[138, 143, 'Toxic']\n","4508\n","[276, 278, 'Toxic']\n","4509\n","[418, 427, 'Toxic']\n","4510\n","[52, 57, 'Toxic']\n","4511\n","[60, 140, 'Toxic']\n","[150, 154, 'Toxic']\n","4512\n","[41, 46, 'Toxic']\n","4513\n","[150, 158, 'Toxic']\n","4514\n","[27, 39, 'Toxic']\n","[42, 50, 'Toxic']\n","4515\n","[78, 83, 'Toxic']\n","[85, 115, 'Toxic']\n","4516\n","[18, 23, 'Toxic']\n","4517\n","[0, 7, 'Toxic']\n","4518\n","[24, 31, 'Toxic']\n","4519\n","[24, 27, 'Toxic']\n","4520\n","[29, 33, 'Toxic']\n","4521\n","[120, 127, 'Toxic']\n","[179, 189, 'Toxic']\n","4522\n","[99, 103, 'Toxic']\n","4523\n","[3, 21, 'Toxic']\n","4524\n","[38, 41, 'Toxic']\n","4525\n","[188, 194, 'Toxic']\n","4526\n","[78, 86, 'Toxic']\n","4527\n","[47, 52, 'Toxic']\n","[58, 63, 'Toxic']\n","4528\n","[30, 40, 'Toxic']\n","[56, 60, 'Toxic']\n","4529\n","[11, 17, 'Toxic']\n","4530\n","[97, 105, 'Toxic']\n","[533, 542, 'Toxic']\n","4531\n","[281, 284, 'Toxic']\n","[327, 330, 'Toxic']\n","[378, 386, 'Toxic']\n","4532\n","[173, 176, 'Toxic']\n","[193, 196, 'Toxic']\n","4533\n","[12, 16, 'Toxic']\n","4534\n","[34, 39, 'Toxic']\n","[45, 49, 'Toxic']\n","4535\n","[31, 46, 'Toxic']\n","4536\n","[55, 58, 'Toxic']\n","4537\n","[30, 36, 'Toxic']\n","4538\n","[0, 3, 'Toxic']\n","4539\n","[54, 59, 'Toxic']\n","[62, 69, 'Toxic']\n","4540\n","[8, 15, 'Toxic']\n","4541\n","[48, 76, 'Toxic']\n","4542\n","[16, 20, 'Toxic']\n","4543\n","[20, 29, 'Toxic']\n","4544\n","[5, 12, 'Toxic']\n","4545\n","[18, 29, 'Toxic']\n","4546\n","[57, 61, 'Toxic']\n","4547\n","[15, 34, 'Toxic']\n","4548\n","[338, 343, 'Toxic']\n","4549\n","[27, 32, 'Toxic']\n","[56, 60, 'Toxic']\n","4550\n","[11, 15, 'Toxic']\n","[35, 39, 'Toxic']\n","4551\n","[5, 10, 'Toxic']\n","[23, 28, 'Toxic']\n","4552\n","[37, 44, 'Toxic']\n","4553\n","[0, 16, 'Toxic']\n","[423, 432, 'Toxic']\n","[449, 454, 'Toxic']\n","4554\n","[54, 59, 'Toxic']\n","4555\n","[49, 54, 'Toxic']\n","4556\n","[75, 81, 'Toxic']\n","4557\n","[31, 36, 'Toxic']\n","4558\n","[0, 4, 'Toxic']\n","4559\n","[0, 6, 'Toxic']\n","4560\n","[15, 21, 'Toxic']\n","4561\n","[123, 126, 'Toxic']\n","[128, 133, 'Toxic']\n","4562\n","[9, 20, 'Toxic']\n","4563\n","[211, 216, 'Toxic']\n","4564\n","[503, 505, 'Toxic']\n","[572, 577, 'Toxic']\n","4565\n","[25, 41, 'Toxic']\n","4566\n","[36, 62, 'Toxic']\n","4567\n","[44, 47, 'Toxic']\n","4568\n","[251, 274, 'Toxic']\n","4569\n","[123, 128, 'Toxic']\n","4570\n","[12, 17, 'Toxic']\n","4571\n","[1, 8, 'Toxic']\n","[25, 38, 'Toxic']\n","4572\n","[11, 23, 'Toxic']\n","4573\n","[288, 298, 'Toxic']\n","4574\n","[204, 216, 'Toxic']\n","4575\n","[10, 15, 'Toxic']\n","4576\n","[25, 33, 'Toxic']\n","[130, 139, 'Toxic']\n","[256, 261, 'Toxic']\n","[326, 331, 'Toxic']\n","[337, 342, 'Toxic']\n","4577\n","[65, 75, 'Toxic']\n","4578\n","[14, 21, 'Toxic']\n","4579\n","[36, 40, 'Toxic']\n","4580\n","[198, 202, 'Toxic']\n","4581\n","[127, 132, 'Toxic']\n","4582\n","[7, 12, 'Toxic']\n","4583\n","[16, 22, 'Toxic']\n","4584\n","[52, 58, 'Toxic']\n","4585\n","[68, 71, 'Toxic']\n","4586\n","[49, 55, 'Toxic']\n","4587\n","[96, 103, 'Toxic']\n","[173, 180, 'Toxic']\n","[273, 281, 'Toxic']\n","4588\n","[33, 40, 'Toxic']\n","4589\n","[17, 20, 'Toxic']\n","[63, 71, 'Toxic']\n","[73, 76, 'Toxic']\n","4590\n","[11, 21, 'Toxic']\n","[25, 33, 'Toxic']\n","4591\n","[24, 30, 'Toxic']\n","4592\n","[34, 38, 'Toxic']\n","4593\n","[92, 105, 'Toxic']\n","4594\n","[41, 48, 'Toxic']\n","4595\n","[10, 14, 'Toxic']\n","4596\n","[735, 741, 'Toxic']\n","[899, 906, 'Toxic']\n","4597\n","[144, 148, 'Toxic']\n","4598\n","[13, 17, 'Toxic']\n","4599\n","[0, 3, 'Toxic']\n","4600\n","[0, 3, 'Toxic']\n","[9, 16, 'Toxic']\n","4601\n","[18, 23, 'Toxic']\n","4602\n","[74, 83, 'Toxic']\n","[138, 143, 'Toxic']\n","4603\n","[102, 107, 'Toxic']\n","4604\n","[13, 19, 'Toxic']\n","4605\n","[216, 219, 'Toxic']\n","4606\n","[208, 213, 'Toxic']\n","4607\n","[5, 13, 'Toxic']\n","4608\n","[190, 193, 'Toxic']\n","[230, 233, 'Toxic']\n","4609\n","[21, 28, 'Toxic']\n","4610\n","[70, 73, 'Toxic']\n","[160, 164, 'Toxic']\n","4611\n","[154, 160, 'Toxic']\n","4612\n","[46, 51, 'Toxic']\n","4613\n","[89, 96, 'Toxic']\n","[99, 117, 'Toxic']\n","4614\n","[178, 192, 'Toxic']\n","[198, 204, 'Toxic']\n","[222, 229, 'Toxic']\n","4615\n","[10, 18, 'Toxic']\n","4616\n","[5, 13, 'Toxic']\n","4617\n","[128, 134, 'Toxic']\n","[212, 217, 'Toxic']\n","4618\n","[41, 45, 'Toxic']\n","[89, 93, 'Toxic']\n","4619\n","[60, 68, 'Toxic']\n","[71, 74, 'Toxic']\n","4620\n","[72, 77, 'Toxic']\n","[148, 160, 'Toxic']\n","4621\n","[20, 36, 'Toxic']\n","4622\n","[894, 897, 'Toxic']\n","4623\n","[15, 23, 'Toxic']\n","4624\n","[10, 15, 'Toxic']\n","4625\n","[22, 30, 'Toxic']\n","[113, 116, 'Toxic']\n","4626\n","[26, 31, 'Toxic']\n","[107, 112, 'Toxic']\n","4627\n","[31, 36, 'Toxic']\n","4628\n","[20, 23, 'Toxic']\n","4629\n","[29, 39, 'Toxic']\n","[685, 689, 'Toxic']\n","4630\n","[0, 11, 'Toxic']\n","4631\n","[33, 38, 'Toxic']\n","[675, 683, 'Toxic']\n","4632\n","[18, 29, 'Toxic']\n","4633\n","[45, 49, 'Toxic']\n","[90, 98, 'Toxic']\n","4634\n","[206, 214, 'Toxic']\n","4635\n","[390, 393, 'Toxic']\n","4636\n","[99, 104, 'Toxic']\n","4637\n","[97, 102, 'Toxic']\n","4638\n","[13, 19, 'Toxic']\n","4639\n","[22, 35, 'Toxic']\n","4640\n","[9, 25, 'Toxic']\n","4641\n","[37, 42, 'Toxic']\n","[48, 55, 'Toxic']\n","4642\n","[23, 26, 'Toxic']\n","4643\n","[194, 199, 'Toxic']\n","[847, 850, 'Toxic']\n","4644\n","[33, 38, 'Toxic']\n","4645\n","[34, 36, 'Toxic']\n","[73, 78, 'Toxic']\n","4646\n","[464, 468, 'Toxic']\n","[585, 589, 'Toxic']\n","[686, 688, 'Toxic']\n","4647\n","[35, 56, 'Toxic']\n","4648\n","[61, 82, 'Toxic']\n","4649\n","[79, 84, 'Toxic']\n","4650\n","[598, 601, 'Toxic']\n","[613, 649, 'Toxic']\n","4651\n","[9, 13, 'Toxic']\n","4652\n","[15, 20, 'Toxic']\n","4653\n","[4, 8, 'Toxic']\n","4654\n","[0, 15, 'Toxic']\n","4655\n","[20, 22, 'Toxic']\n","4656\n","[452, 456, 'Toxic']\n","[485, 489, 'Toxic']\n","4657\n","[62, 67, 'Toxic']\n","4658\n","[76, 79, 'Toxic']\n","4659\n","[92, 109, 'Toxic']\n","4660\n","[12, 18, 'Toxic']\n","4661\n","[61, 65, 'Toxic']\n","4662\n","[0, 9, 'Toxic']\n","[212, 217, 'Toxic']\n","4663\n","[16, 21, 'Toxic']\n","[40, 44, 'Toxic']\n","4664\n","[75, 83, 'Toxic']\n","[94, 106, 'Toxic']\n","4665\n","[0, 5, 'Toxic']\n","4666\n","[81, 86, 'Toxic']\n","[116, 122, 'Toxic']\n","[151, 154, 'Toxic']\n","4667\n","[87, 92, 'Toxic']\n","4668\n","[99, 108, 'Toxic']\n","4669\n","[154, 189, 'Toxic']\n","4670\n","[54, 61, 'Toxic']\n","4671\n","[4, 11, 'Toxic']\n","4672\n","[40, 44, 'Toxic']\n","4673\n","[554, 561, 'Toxic']\n","4674\n","[128, 133, 'Toxic']\n","4675\n","[90, 98, 'Toxic']\n","4676\n","[782, 785, 'Toxic']\n","[835, 839, 'Toxic']\n","4677\n","[192, 196, 'Toxic']\n","[475, 479, 'Toxic']\n","4678\n","[90, 95, 'Toxic']\n","4679\n","[0, 3, 'Toxic']\n","4680\n","[18, 34, 'Toxic']\n","4681\n","[111, 132, 'Toxic']\n","4682\n","[0, 15, 'Toxic']\n","4683\n","[114, 119, 'Toxic']\n","4684\n","[266, 274, 'Toxic']\n","4685\n","[320, 324, 'Toxic']\n","[350, 352, 'Toxic']\n","[389, 394, 'Toxic']\n","[396, 401, 'Toxic']\n","4686\n","[129, 133, 'Toxic']\n","4687\n","[367, 396, 'Toxic']\n","4688\n","[38, 55, 'Toxic']\n","4689\n","[29, 45, 'Toxic']\n","[51, 61, 'Toxic']\n","[79, 89, 'Toxic']\n","4690\n","[31, 36, 'Toxic']\n","4691\n","[36, 40, 'Toxic']\n","4692\n","[58, 65, 'Toxic']\n","4693\n","[8, 14, 'Toxic']\n","4694\n","[144, 160, 'Toxic']\n","[162, 173, 'Toxic']\n","[302, 309, 'Toxic']\n","4695\n","[16, 24, 'Toxic']\n","[26, 29, 'Toxic']\n","4696\n","[98, 105, 'Toxic']\n","4697\n","[0, 6, 'Toxic']\n","4698\n","[35, 40, 'Toxic']\n","4699\n","[92, 99, 'Toxic']\n","4700\n","[12, 17, 'Toxic']\n","[124, 131, 'Toxic']\n","[140, 145, 'Toxic']\n","4701\n","[8, 12, 'Toxic']\n","4702\n","[41, 45, 'Toxic']\n","4703\n","[30, 34, 'Toxic']\n","4704\n","[23, 28, 'Toxic']\n","[284, 288, 'Toxic']\n","[326, 331, 'Toxic']\n","4705\n","[5, 31, 'Toxic']\n","4706\n","[219, 224, 'Toxic']\n","4707\n","[18, 22, 'Toxic']\n","[30, 37, 'Toxic']\n","4708\n","[14, 19, 'Toxic']\n","4709\n","[43, 48, 'Toxic']\n","4710\n","[31, 37, 'Toxic']\n","4711\n","[191, 196, 'Toxic']\n","4712\n","[37, 41, 'Toxic']\n","4713\n","[31, 34, 'Toxic']\n","4714\n","[10, 15, 'Toxic']\n","4715\n","[30, 33, 'Toxic']\n","4716\n","[0, 7, 'Toxic']\n","[13, 30, 'Toxic']\n","4717\n","[299, 307, 'Toxic']\n","4718\n","[57, 62, 'Toxic']\n","4719\n","[141, 146, 'Toxic']\n","4720\n","[9, 20, 'Toxic']\n","[102, 110, 'Toxic']\n","4721\n","[57, 63, 'Toxic']\n","[87, 90, 'Toxic']\n","4722\n","[31, 38, 'Toxic']\n","[58, 63, 'Toxic']\n","[215, 220, 'Toxic']\n","4723\n","[134, 148, 'Toxic']\n","4724\n","[28, 34, 'Toxic']\n","4725\n","[130, 135, 'Toxic']\n","[170, 175, 'Toxic']\n","[181, 185, 'Toxic']\n","4726\n","[82, 90, 'Toxic']\n","4727\n","[59, 66, 'Toxic']\n","[510, 518, 'Toxic']\n","[627, 635, 'Toxic']\n","4728\n","[276, 280, 'Toxic']\n","4729\n","[102, 109, 'Toxic']\n","4730\n","[7, 11, 'Toxic']\n","4731\n","[27, 33, 'Toxic']\n","4732\n","[31, 46, 'Toxic']\n","4733\n","[516, 521, 'Toxic']\n","4734\n","[184, 199, 'Toxic']\n","[265, 274, 'Toxic']\n","4735\n","[0, 5, 'Toxic']\n","4736\n","[371, 387, 'Toxic']\n","4737\n","[0, 3, 'Toxic']\n","[57, 75, 'Toxic']\n","4738\n","[94, 98, 'Toxic']\n","4739\n","[10, 13, 'Toxic']\n","[22, 29, 'Toxic']\n","[96, 102, 'Toxic']\n","[141, 146, 'Toxic']\n","[257, 265, 'Toxic']\n","4740\n","[9, 25, 'Toxic']\n","4741\n","[8, 11, 'Toxic']\n","[24, 31, 'Toxic']\n","4742\n","[0, 23, 'Toxic']\n","4743\n","[438, 443, 'Toxic']\n","4744\n","[31, 34, 'Toxic']\n","[40, 54, 'Toxic']\n","4745\n","[121, 126, 'Toxic']\n","4746\n","[99, 108, 'Toxic']\n","4747\n","[345, 350, 'Toxic']\n","4748\n","[87, 92, 'Toxic']\n","4749\n","[267, 307, 'Toxic']\n","4750\n","[229, 239, 'Toxic']\n","4751\n","[164, 188, 'Toxic']\n","[380, 384, 'Toxic']\n","[739, 741, 'Toxic']\n","4752\n","[45, 49, 'Toxic']\n","4753\n","[28, 33, 'Toxic']\n","4754\n","[55, 60, 'Toxic']\n","[63, 68, 'Toxic']\n","[71, 79, 'Toxic']\n","4755\n","[0, 3, 'Toxic']\n","4756\n","[17, 25, 'Toxic']\n","4757\n","[231, 235, 'Toxic']\n","4758\n","[48, 64, 'Toxic']\n","4759\n","[138, 147, 'Toxic']\n","4760\n","[70, 75, 'Toxic']\n","4761\n","[4, 11, 'Toxic']\n","4762\n","[35, 42, 'Toxic']\n","4763\n","[201, 205, 'Toxic']\n","[215, 219, 'Toxic']\n","4764\n","[76, 81, 'Toxic']\n","4765\n","[16, 20, 'Toxic']\n","[41, 44, 'Toxic']\n","4766\n","[3, 9, 'Toxic']\n","4767\n","[218, 224, 'Toxic']\n","4768\n","[151, 157, 'Toxic']\n","[160, 170, 'Toxic']\n","[275, 281, 'Toxic']\n","4769\n","[272, 277, 'Toxic']\n","4770\n","[19, 23, 'Toxic']\n","4771\n","[199, 208, 'Toxic']\n","4772\n","[0, 13, 'Toxic']\n","4773\n","[79, 85, 'Toxic']\n","4774\n","[11, 15, 'Toxic']\n","[41, 49, 'Toxic']\n","4775\n","[365, 369, 'Toxic']\n","4776\n","[96, 99, 'Toxic']\n","4777\n","[25, 30, 'Toxic']\n","[84, 101, 'Toxic']\n","4778\n","[31, 36, 'Toxic']\n","4779\n","[14, 18, 'Toxic']\n","[20, 25, 'Toxic']\n","4780\n","[1, 44, 'Toxic']\n","4781\n","[32, 35, 'Toxic']\n","4782\n","[88, 92, 'Toxic']\n","4783\n","[8, 11, 'Toxic']\n","4784\n","[11, 18, 'Toxic']\n","4785\n","[13, 19, 'Toxic']\n","[26, 34, 'Toxic']\n","4786\n","[48, 57, 'Toxic']\n","4787\n","[84, 89, 'Toxic']\n","4788\n","[170, 176, 'Toxic']\n","[191, 199, 'Toxic']\n","4789\n","[19, 21, 'Toxic']\n","[218, 220, 'Toxic']\n","4790\n","[31, 77, 'Toxic']\n","[130, 134, 'Toxic']\n","4791\n","[88, 92, 'Toxic']\n","4792\n","[0, 6, 'Toxic']\n","[34, 41, 'Toxic']\n","4793\n","[18, 27, 'Toxic']\n","[66, 71, 'Toxic']\n","[161, 168, 'Toxic']\n","4794\n","[144, 150, 'Toxic']\n","4795\n","[278, 283, 'Toxic']\n","4796\n","[0, 10, 'Toxic']\n","[105, 110, 'Toxic']\n","4797\n","[90, 96, 'Toxic']\n","4798\n","[341, 354, 'Toxic']\n","4799\n","[19, 25, 'Toxic']\n","4800\n","[43, 52, 'Toxic']\n","[60, 64, 'Toxic']\n","4801\n","[17, 23, 'Toxic']\n","4802\n","[45, 50, 'Toxic']\n","[93, 97, 'Toxic']\n","4803\n","[0, 3, 'Toxic']\n","[80, 111, 'Toxic']\n","4804\n","[19, 22, 'Toxic']\n","4805\n","[48, 53, 'Toxic']\n","[84, 94, 'Toxic']\n","4806\n","[26, 42, 'Toxic']\n","4807\n","[12, 16, 'Toxic']\n","4808\n","[169, 174, 'Toxic']\n","4809\n","[4, 7, 'Toxic']\n","[30, 34, 'Toxic']\n","4810\n","[318, 322, 'Toxic']\n","4811\n","[64, 71, 'Toxic']\n","[77, 82, 'Toxic']\n","4812\n","[55, 67, 'Toxic']\n","4813\n","[42, 50, 'Toxic']\n","4814\n","[7, 25, 'Toxic']\n","[46, 51, 'Toxic']\n","4815\n","[43, 48, 'Toxic']\n","[58, 63, 'Toxic']\n","4816\n","[0, 14, 'Toxic']\n","4817\n","[25, 29, 'Toxic']\n","4818\n","[308, 311, 'Toxic']\n","4819\n","[45, 51, 'Toxic']\n","4820\n","[0, 3, 'Toxic']\n","[28, 32, 'Toxic']\n","4821\n","[9, 13, 'Toxic']\n","4822\n","[20, 24, 'Toxic']\n","4823\n","[101, 109, 'Toxic']\n","[211, 216, 'Toxic']\n","4824\n","[43, 59, 'Toxic']\n","4825\n","[18, 22, 'Toxic']\n","[28, 45, 'Toxic']\n","4826\n","[18, 46, 'Toxic']\n","4827\n","[41, 46, 'Toxic']\n","4828\n","[6, 11, 'Toxic']\n","[176, 181, 'Toxic']\n","4829\n","[10, 15, 'Toxic']\n","4830\n","[790, 793, 'Toxic']\n","[804, 810, 'Toxic']\n","4831\n","[27, 37, 'Toxic']\n","4832\n","[36, 42, 'Toxic']\n","4833\n","[36, 39, 'Toxic']\n","[241, 246, 'Toxic']\n","[401, 406, 'Toxic']\n","4834\n","[34, 52, 'Toxic']\n","4835\n","[57, 63, 'Toxic']\n","4836\n","[8, 11, 'Toxic']\n","[617, 621, 'Toxic']\n","4837\n","[85, 101, 'Toxic']\n","4838\n","[143, 149, 'Toxic']\n","[156, 165, 'Toxic']\n","4839\n","[0, 3, 'Toxic']\n","4840\n","[38, 41, 'Toxic']\n","[228, 236, 'Toxic']\n","4841\n","[10, 16, 'Toxic']\n","4842\n","[25, 29, 'Toxic']\n","[109, 123, 'Toxic']\n","[141, 146, 'Toxic']\n","4843\n","[389, 397, 'Toxic']\n","4844\n","[47, 56, 'Toxic']\n","4845\n","[39, 49, 'Toxic']\n","4846\n","[948, 953, 'Toxic']\n","4847\n","[4, 9, 'Toxic']\n","4848\n","[14, 18, 'Toxic']\n","4849\n","[54, 79, 'Toxic']\n","4850\n","[21, 29, 'Toxic']\n","[76, 82, 'Toxic']\n","[88, 94, 'Toxic']\n","4851\n","[53, 59, 'Toxic']\n","4852\n","[10, 14, 'Toxic']\n","4853\n","[11, 18, 'Toxic']\n","4854\n","[12, 16, 'Toxic']\n","4855\n","[10, 14, 'Toxic']\n","4856\n","[142, 149, 'Toxic']\n","[155, 160, 'Toxic']\n","4857\n","[97, 106, 'Toxic']\n","4858\n","[24, 32, 'Toxic']\n","4859\n","[29, 36, 'Toxic']\n","[331, 339, 'Toxic']\n","4860\n","[16, 21, 'Toxic']\n","4861\n","[65, 71, 'Toxic']\n","[118, 125, 'Toxic']\n","4862\n","[49, 54, 'Toxic']\n","4863\n","[114, 130, 'Toxic']\n","4864\n","[225, 231, 'Toxic']\n","4865\n","[16, 18, 'Toxic']\n","[46, 54, 'Toxic']\n","4866\n","[184, 189, 'Toxic']\n","4867\n","[7, 20, 'Toxic']\n","4868\n","[140, 188, 'Toxic']\n","4869\n","[9, 15, 'Toxic']\n","[226, 231, 'Toxic']\n","4870\n","[18, 24, 'Toxic']\n","[147, 149, 'Toxic']\n","4871\n","[39, 42, 'Toxic']\n","[130, 135, 'Toxic']\n","[388, 390, 'Toxic']\n","[423, 428, 'Toxic']\n","[442, 447, 'Toxic']\n","4872\n","[222, 228, 'Toxic']\n","4873\n","[7, 22, 'Toxic']\n","[33, 38, 'Toxic']\n","4874\n","[110, 125, 'Toxic']\n","4875\n","[46, 51, 'Toxic']\n","4876\n","[207, 216, 'Toxic']\n","[264, 271, 'Toxic']\n","4877\n","[15, 21, 'Toxic']\n","4878\n","[131, 248, 'Toxic']\n","4879\n","[18, 32, 'Toxic']\n","4880\n","[45, 48, 'Toxic']\n","4881\n","[19, 23, 'Toxic']\n","[64, 66, 'Toxic']\n","4882\n","[121, 124, 'Toxic']\n","4883\n","[46, 49, 'Toxic']\n","[65, 69, 'Toxic']\n","4884\n","[4, 11, 'Toxic']\n","4885\n","[10, 16, 'Toxic']\n","[67, 70, 'Toxic']\n","4886\n","[74, 82, 'Toxic']\n","4887\n","[8, 21, 'Toxic']\n","[36, 51, 'Toxic']\n","4888\n","[123, 126, 'Toxic']\n","[297, 304, 'Toxic']\n","[325, 334, 'Toxic']\n","4889\n","[169, 174, 'Toxic']\n","4890\n","[169, 231, 'Toxic']\n","4891\n","[26, 30, 'Toxic']\n","4892\n","[119, 144, 'Toxic']\n","4893\n","[15, 19, 'Toxic']\n","[119, 125, 'Toxic']\n","[179, 186, 'Toxic']\n","[293, 297, 'Toxic']\n","4894\n","[45, 53, 'Toxic']\n","[208, 211, 'Toxic']\n","4895\n","[17, 54, 'Toxic']\n","4896\n","[12, 16, 'Toxic']\n","4897\n","[0, 3, 'Toxic']\n","4898\n","[45, 54, 'Toxic']\n","4899\n","[4, 8, 'Toxic']\n","[107, 113, 'Toxic']\n","[146, 154, 'Toxic']\n","4900\n","[57, 62, 'Toxic']\n","4901\n","[681, 689, 'Toxic']\n","4902\n","[0, 17, 'Toxic']\n","4903\n","[68, 75, 'Toxic']\n","[109, 115, 'Toxic']\n","[117, 120, 'Toxic']\n","4904\n","[684, 689, 'Toxic']\n","[703, 708, 'Toxic']\n","4905\n","[0, 5, 'Toxic']\n","[9, 15, 'Toxic']\n","4906\n","[208, 217, 'Toxic']\n","4907\n","[5, 9, 'Toxic']\n","4908\n","[153, 174, 'Toxic']\n","4909\n","[50, 54, 'Toxic']\n","[104, 108, 'Toxic']\n","[127, 131, 'Toxic']\n","[135, 140, 'Toxic']\n","4910\n","[58, 64, 'Toxic']\n","4911\n","[19, 26, 'Toxic']\n","4912\n","[20, 28, 'Toxic']\n","4913\n","[24, 32, 'Toxic']\n","[54, 64, 'Toxic']\n","4914\n","[22, 30, 'Toxic']\n","[33, 38, 'Toxic']\n","4915\n","[47, 58, 'Toxic']\n","4916\n","[4, 8, 'Toxic']\n","4917\n","[19, 27, 'Toxic']\n","[33, 41, 'Toxic']\n","[86, 90, 'Toxic']\n","4918\n","[13, 17, 'Toxic']\n","[395, 410, 'Toxic']\n","4919\n","[62, 67, 'Toxic']\n","4920\n","[33, 38, 'Toxic']\n","4921\n","[16, 20, 'Toxic']\n","4922\n","[44, 47, 'Toxic']\n","4923\n","[157, 162, 'Toxic']\n","4924\n","[164, 170, 'Toxic']\n","4925\n","[25, 28, 'Toxic']\n","[140, 144, 'Toxic']\n","4926\n","[183, 202, 'Toxic']\n","[319, 328, 'Toxic']\n","4927\n","[3, 6, 'Toxic']\n","[9, 18, 'Toxic']\n","[35, 38, 'Toxic']\n","4928\n","[55, 64, 'Toxic']\n","[68, 71, 'Toxic']\n","[74, 80, 'Toxic']\n","[83, 87, 'Toxic']\n","4929\n","[220, 225, 'Toxic']\n","[434, 439, 'Toxic']\n","4930\n","[21, 26, 'Toxic']\n","[71, 78, 'Toxic']\n","4931\n","[41, 45, 'Toxic']\n","4932\n","[33, 39, 'Toxic']\n","[93, 100, 'Toxic']\n","4933\n","[49, 53, 'Toxic']\n","4934\n","[0, 4, 'Toxic']\n","4935\n","[53, 58, 'Toxic']\n","4936\n","[60, 63, 'Toxic']\n","[139, 146, 'Toxic']\n","4937\n","[10, 15, 'Toxic']\n","4938\n","[41, 44, 'Toxic']\n","4939\n","[21, 27, 'Toxic']\n","[65, 68, 'Toxic']\n","4940\n","[184, 199, 'Toxic']\n","4941\n","[234, 239, 'Toxic']\n","4942\n","[15, 19, 'Toxic']\n","[180, 185, 'Toxic']\n","4943\n","[12, 17, 'Toxic']\n","4944\n","[20, 25, 'Toxic']\n","[31, 34, 'Toxic']\n","4945\n","[41, 45, 'Toxic']\n","[199, 203, 'Toxic']\n","4946\n","[270, 284, 'Toxic']\n","4947\n","[31, 37, 'Toxic']\n","4948\n","[0, 4, 'Toxic']\n","4949\n","[0, 8, 'Toxic']\n","4950\n","[70, 82, 'Toxic']\n","[249, 257, 'Toxic']\n","[541, 545, 'Toxic']\n","4951\n","[20, 27, 'Toxic']\n","4952\n","[34, 38, 'Toxic']\n","4953\n","[10, 19, 'Toxic']\n","[22, 30, 'Toxic']\n","4954\n","[46, 52, 'Toxic']\n","4955\n","[141, 149, 'Toxic']\n","[177, 183, 'Toxic']\n","4956\n","[56, 59, 'Toxic']\n","4957\n","[45, 50, 'Toxic']\n","[100, 105, 'Toxic']\n","[185, 190, 'Toxic']\n","[232, 237, 'Toxic']\n","4958\n","[23, 37, 'Toxic']\n","[82, 85, 'Toxic']\n","4959\n","[8, 22, 'Toxic']\n","4960\n","[75, 82, 'Toxic']\n","4961\n","[6, 9, 'Toxic']\n","4962\n","[25, 33, 'Toxic']\n","4963\n","[20, 27, 'Toxic']\n","[29, 30, 'Toxic']\n","4964\n","[278, 284, 'Toxic']\n","4965\n","[15, 18, 'Toxic']\n","4966\n","[81, 85, 'Toxic']\n","4967\n","[71, 82, 'Toxic']\n","4968\n","[38, 41, 'Toxic']\n","[126, 134, 'Toxic']\n","[216, 219, 'Toxic']\n","4969\n","[46, 50, 'Toxic']\n","4970\n","[11, 25, 'Toxic']\n","[34, 40, 'Toxic']\n","4971\n","[15, 17, 'Toxic']\n","[60, 63, 'Toxic']\n","4972\n","[7, 27, 'Toxic']\n","4973\n","[89, 95, 'Toxic']\n","4974\n","[33, 38, 'Toxic']\n","4975\n","[37, 43, 'Toxic']\n","[115, 125, 'Toxic']\n","4976\n","[276, 281, 'Toxic']\n","4977\n","[18, 21, 'Toxic']\n","4978\n","[114, 119, 'Toxic']\n","4979\n","[30, 34, 'Toxic']\n","4980\n","[73, 77, 'Toxic']\n","4981\n","[0, 8, 'Toxic']\n","4982\n","[11, 18, 'Toxic']\n","4983\n","[31, 35, 'Toxic']\n","4984\n","[105, 117, 'Toxic']\n","4985\n","[83, 86, 'Toxic']\n","4986\n","[31, 36, 'Toxic']\n","4987\n","[83, 94, 'Toxic']\n","[117, 122, 'Toxic']\n","[619, 622, 'Toxic']\n","4988\n","[64, 69, 'Toxic']\n","[584, 589, 'Toxic']\n","[666, 670, 'Toxic']\n","[676, 680, 'Toxic']\n","[817, 822, 'Toxic']\n","4989\n","[28, 34, 'Toxic']\n","[71, 88, 'Toxic']\n","4990\n","[14, 19, 'Toxic']\n","4991\n","[36, 44, 'Toxic']\n","4992\n","[213, 218, 'Toxic']\n","4993\n","[18, 23, 'Toxic']\n","4994\n","[110, 114, 'Toxic']\n","4995\n","[0, 5, 'Toxic']\n","[29, 47, 'Toxic']\n","4996\n","[0, 3, 'Toxic']\n","[7, 11, 'Toxic']\n","[16, 21, 'Toxic']\n","[28, 31, 'Toxic']\n","4997\n","[80, 85, 'Toxic']\n","4998\n","[192, 195, 'Toxic']\n","[279, 281, 'Toxic']\n","[383, 386, 'Toxic']\n","4999\n","[4, 9, 'Toxic']\n","5000\n","[58, 62, 'Toxic']\n","5001\n","[31, 35, 'Toxic']\n","5002\n","[833, 835, 'Toxic']\n","5003\n","[23, 28, 'Toxic']\n","5004\n","[24, 27, 'Toxic']\n","[77, 82, 'Toxic']\n","5005\n","[10, 20, 'Toxic']\n","5006\n","[32, 36, 'Toxic']\n","5007\n","[8, 13, 'Toxic']\n","5008\n","[17, 19, 'Toxic']\n","[26, 30, 'Toxic']\n","[92, 97, 'Toxic']\n","5009\n","[33, 37, 'Toxic']\n","[76, 83, 'Toxic']\n","5010\n","[0, 6, 'Toxic']\n","[8, 11, 'Toxic']\n","5011\n","[39, 44, 'Toxic']\n","5012\n","[22, 24, 'Toxic']\n","5013\n","[7, 12, 'Toxic']\n","5014\n","[549, 554, 'Toxic']\n","[608, 612, 'Toxic']\n","5015\n","[40, 44, 'Toxic']\n","5016\n","[117, 120, 'Toxic']\n","5017\n","[43, 55, 'Toxic']\n","5018\n","[36, 42, 'Toxic']\n","5019\n","[0, 3, 'Toxic']\n","5020\n","[14, 19, 'Toxic']\n","[98, 102, 'Toxic']\n","[196, 206, 'Toxic']\n","[211, 220, 'Toxic']\n","[242, 246, 'Toxic']\n","5021\n","[29, 35, 'Toxic']\n","5022\n","[100, 105, 'Toxic']\n","[113, 119, 'Toxic']\n","5023\n","[28, 34, 'Toxic']\n","5024\n","[53, 61, 'Toxic']\n","5025\n","[718, 722, 'Toxic']\n","5026\n","[12, 15, 'Toxic']\n","5027\n","[221, 225, 'Toxic']\n","[317, 321, 'Toxic']\n","5028\n","[137, 142, 'Toxic']\n","5029\n","[54, 58, 'Toxic']\n","5030\n","[0, 16, 'Toxic']\n","5031\n","[21, 25, 'Toxic']\n","5032\n","[24, 32, 'Toxic']\n","5033\n","[32, 35, 'Toxic']\n","5034\n","[63, 69, 'Toxic']\n","5035\n","[86, 98, 'Toxic']\n","5036\n","[17, 21, 'Toxic']\n","5037\n","[16, 36, 'Toxic']\n","5038\n","[0, 15, 'Toxic']\n","5039\n","[7, 12, 'Toxic']\n","5040\n","[158, 163, 'Toxic']\n","5041\n","[47, 54, 'Toxic']\n","5042\n","[11, 14, 'Toxic']\n","[16, 20, 'Toxic']\n","5043\n","[14, 18, 'Toxic']\n","5044\n","[14, 29, 'Toxic']\n","[36, 39, 'Toxic']\n","5045\n","[0, 15, 'Toxic']\n","[23, 27, 'Toxic']\n","5046\n","[103, 128, 'Toxic']\n","5047\n","[208, 214, 'Toxic']\n","5048\n","[12, 15, 'Toxic']\n","5049\n","[36, 39, 'Toxic']\n","5050\n","[43, 46, 'Toxic']\n","5051\n","[7, 12, 'Toxic']\n","5052\n","[0, 5, 'Toxic']\n","[11, 20, 'Toxic']\n","5053\n","[200, 208, 'Toxic']\n","5054\n","[48, 59, 'Toxic']\n","5055\n","[57, 61, 'Toxic']\n","5056\n","[76, 84, 'Toxic']\n","5057\n","[0, 27, 'Toxic']\n","5058\n","[8, 13, 'Toxic']\n","5059\n","[64, 75, 'Toxic']\n","5060\n","[64, 67, 'Toxic']\n","[80, 83, 'Toxic']\n","5061\n","[40, 50, 'Toxic']\n","5062\n","[35, 41, 'Toxic']\n","5063\n","[0, 8, 'Toxic']\n","5064\n","[475, 480, 'Toxic']\n","5065\n","[44, 50, 'Toxic']\n","[152, 155, 'Toxic']\n","5066\n","[16, 20, 'Toxic']\n","5067\n","[0, 3, 'Toxic']\n","5068\n","[279, 283, 'Toxic']\n","5069\n","[0, 13, 'Toxic']\n","5070\n","[26, 47, 'Toxic']\n","[50, 58, 'Toxic']\n","5071\n","[0, 8, 'Toxic']\n","5072\n","[12, 16, 'Toxic']\n","[81, 86, 'Toxic']\n","5073\n","[36, 39, 'Toxic']\n","5074\n","[16, 21, 'Toxic']\n","5075\n","[16, 19, 'Toxic']\n","5076\n","[71, 78, 'Toxic']\n","[81, 93, 'Toxic']\n","5077\n","[218, 226, 'Toxic']\n","5078\n","[75, 79, 'Toxic']\n","5079\n","[103, 109, 'Toxic']\n","5080\n","[124, 127, 'Toxic']\n","5081\n","[124, 129, 'Toxic']\n","5082\n","[20, 23, 'Toxic']\n","5083\n","[283, 286, 'Toxic']\n","[329, 357, 'Toxic']\n","5084\n","[13, 28, 'Toxic']\n","[166, 170, 'Toxic']\n","5085\n","[310, 318, 'Toxic']\n","5086\n","[32, 35, 'Toxic']\n","5087\n","[10, 14, 'Toxic']\n","5088\n","[79, 87, 'Toxic']\n","[110, 116, 'Toxic']\n","5089\n","[0, 11, 'Toxic']\n","[114, 115, 'Toxic']\n","5090\n","[0, 25, 'Toxic']\n","5091\n","[145, 150, 'Toxic']\n","5092\n","[108, 111, 'Toxic']\n","5093\n","[41, 45, 'Toxic']\n","5094\n","[17, 20, 'Toxic']\n","5095\n","[0, 14, 'Toxic']\n","[51, 66, 'Toxic']\n","[159, 164, 'Toxic']\n","5096\n","[17, 40, 'Toxic']\n","5097\n","[57, 77, 'Toxic']\n","5098\n","[208, 213, 'Toxic']\n","5099\n","[32, 37, 'Toxic']\n","[322, 342, 'Toxic']\n","5100\n","[173, 176, 'Toxic']\n","5101\n","[14, 19, 'Toxic']\n","[56, 60, 'Toxic']\n","5102\n","[9, 18, 'Toxic']\n","[166, 174, 'Toxic']\n","5103\n","[19, 27, 'Toxic']\n","[122, 131, 'Toxic']\n","5104\n","[934, 938, 'Toxic']\n","5105\n","[21, 24, 'Toxic']\n","5106\n","[41, 45, 'Toxic']\n","5107\n","[65, 69, 'Toxic']\n","5108\n","[10, 13, 'Toxic']\n","[25, 28, 'Toxic']\n","5109\n","[14, 21, 'Toxic']\n","5110\n","[26, 29, 'Toxic']\n","5111\n","[31, 38, 'Toxic']\n","5112\n","[17, 45, 'Toxic']\n","5113\n","[99, 121, 'Toxic']\n","5114\n","[12, 16, 'Toxic']\n","5115\n","[0, 3, 'Toxic']\n","5116\n","[17, 28, 'Toxic']\n","[63, 69, 'Toxic']\n","5117\n","[118, 123, 'Toxic']\n","5118\n","[235, 250, 'Toxic']\n","5119\n","[140, 145, 'Toxic']\n","[151, 157, 'Toxic']\n","5120\n","[31, 38, 'Toxic']\n","5121\n","[176, 196, 'Toxic']\n","5122\n","[98, 102, 'Toxic']\n","5123\n","[4, 7, 'Toxic']\n","5124\n","[0, 3, 'Toxic']\n","[9, 14, 'Toxic']\n","5125\n","[31, 36, 'Toxic']\n","5126\n","[28, 33, 'Toxic']\n","5127\n","[259, 267, 'Toxic']\n","[277, 284, 'Toxic']\n","[287, 301, 'Toxic']\n","5128\n","[53, 58, 'Toxic']\n","5129\n","[4, 13, 'Toxic']\n","[15, 19, 'Toxic']\n","5130\n","[48, 63, 'Toxic']\n","5131\n","[71, 76, 'Toxic']\n","5132\n","[17, 21, 'Toxic']\n","5133\n","[16, 29, 'Toxic']\n","5134\n","[27, 30, 'Toxic']\n","5135\n","[244, 250, 'Toxic']\n","5136\n","[41, 47, 'Toxic']\n","5137\n","[38, 49, 'Toxic']\n","5138\n","[15, 23, 'Toxic']\n","[866, 871, 'Toxic']\n","5139\n","[16, 21, 'Toxic']\n","5140\n","[251, 257, 'Toxic']\n","5141\n","[10, 14, 'Toxic']\n","[33, 55, 'Toxic']\n","5142\n","[13, 17, 'Toxic']\n","5143\n","[8, 15, 'Toxic']\n","5144\n","[131, 165, 'Toxic']\n","5145\n","[7, 15, 'Toxic']\n","[155, 162, 'Toxic']\n","[178, 186, 'Toxic']\n","5146\n","[0, 6, 'Toxic']\n","5147\n","[10, 18, 'Toxic']\n","5148\n","[51, 55, 'Toxic']\n","5149\n","[38, 42, 'Toxic']\n","5150\n","[173, 177, 'Toxic']\n","5151\n","[128, 131, 'Toxic']\n","5152\n","[25, 29, 'Toxic']\n","5153\n","[58, 62, 'Toxic']\n","5154\n","[52, 57, 'Toxic']\n","5155\n","[76, 82, 'Toxic']\n","[137, 144, 'Toxic']\n","[202, 213, 'Toxic']\n","5156\n","[0, 23, 'Toxic']\n","5157\n","[27, 30, 'Toxic']\n","5158\n","[51, 53, 'Toxic']\n","5159\n","[72, 85, 'Toxic']\n","[124, 129, 'Toxic']\n","[177, 185, 'Toxic']\n","5160\n","[164, 171, 'Toxic']\n","5161\n","[33, 56, 'Toxic']\n","5162\n","[345, 350, 'Toxic']\n","5163\n","[35, 40, 'Toxic']\n","[66, 72, 'Toxic']\n","5164\n","[13, 30, 'Toxic']\n","5165\n","[464, 472, 'Toxic']\n","[633, 636, 'Toxic']\n","5166\n","[26, 30, 'Toxic']\n","[114, 119, 'Toxic']\n","5167\n","[16, 20, 'Toxic']\n","[65, 70, 'Toxic']\n","[87, 92, 'Toxic']\n","5168\n","[0, 8, 'Toxic']\n","5169\n","[51, 58, 'Toxic']\n","5170\n","[163, 167, 'Toxic']\n","[207, 211, 'Toxic']\n","5171\n","[0, 16, 'Toxic']\n","5172\n","[282, 289, 'Toxic']\n","5173\n","[16, 25, 'Toxic']\n","5174\n","[11, 18, 'Toxic']\n","5175\n","[321, 324, 'Toxic']\n","5176\n","[12, 25, 'Toxic']\n","5177\n","[282, 286, 'Toxic']\n","5178\n","[58, 63, 'Toxic']\n","5179\n","[8, 16, 'Toxic']\n","[172, 189, 'Toxic']\n","5180\n","[35, 62, 'Toxic']\n","5181\n","[37, 42, 'Toxic']\n","5182\n","[9, 18, 'Toxic']\n","[260, 292, 'Toxic']\n","5183\n","[18, 23, 'Toxic']\n","[351, 359, 'Toxic']\n","5184\n","[109, 113, 'Toxic']\n","5185\n","[21, 38, 'Toxic']\n","5186\n","[97, 101, 'Toxic']\n","5187\n","[27, 32, 'Toxic']\n","5188\n","[145, 150, 'Toxic']\n","5189\n","[25, 30, 'Toxic']\n","[418, 434, 'Toxic']\n","[571, 580, 'Toxic']\n","5190\n","[20, 25, 'Toxic']\n","5191\n","[59, 73, 'Toxic']\n","5192\n","[83, 88, 'Toxic']\n","5193\n","[15, 18, 'Toxic']\n","[199, 204, 'Toxic']\n","5194\n","[9, 12, 'Toxic']\n","[17, 24, 'Toxic']\n","[31, 37, 'Toxic']\n","[80, 88, 'Toxic']\n","[143, 150, 'Toxic']\n","5195\n","[13, 16, 'Toxic']\n","5196\n","[63, 65, 'Toxic']\n","5197\n","[0, 13, 'Toxic']\n","5198\n","[216, 222, 'Toxic']\n","5199\n","[12, 16, 'Toxic']\n","5200\n","[35, 42, 'Toxic']\n","5201\n","[0, 31, 'Toxic']\n","[42, 48, 'Toxic']\n","5202\n","[51, 55, 'Toxic']\n","5203\n","[0, 5, 'Toxic']\n","5204\n","[0, 6, 'Toxic']\n","5205\n","[120, 123, 'Toxic']\n","5206\n","[62, 70, 'Toxic']\n","[322, 331, 'Toxic']\n","5207\n","[52, 55, 'Toxic']\n","5208\n","[102, 107, 'Toxic']\n","5209\n","[6, 13, 'Toxic']\n","5210\n","[53, 57, 'Toxic']\n","5211\n","[53, 63, 'Toxic']\n","5212\n","[21, 25, 'Toxic']\n","5213\n","[426, 430, 'Toxic']\n","[435, 440, 'Toxic']\n","5214\n","[44, 48, 'Toxic']\n","5215\n","[62, 67, 'Toxic']\n","5216\n","[22, 27, 'Toxic']\n","[293, 298, 'Toxic']\n","5217\n","[7, 12, 'Toxic']\n","5218\n","[72, 75, 'Toxic']\n","5219\n","[51, 54, 'Toxic']\n","5220\n","[162, 164, 'Toxic']\n","[166, 171, 'Toxic']\n","[173, 177, 'Toxic']\n","5221\n","[70, 77, 'Toxic']\n","5222\n","[41, 46, 'Toxic']\n","[210, 214, 'Toxic']\n","5223\n","[91, 94, 'Toxic']\n","5224\n","[8, 14, 'Toxic']\n","5225\n","[117, 122, 'Toxic']\n","5226\n","[8, 14, 'Toxic']\n","5227\n","[18, 23, 'Toxic']\n","[93, 100, 'Toxic']\n","5228\n","[40, 48, 'Toxic']\n","5229\n","[6, 10, 'Toxic']\n","[76, 92, 'Toxic']\n","5230\n","[115, 119, 'Toxic']\n","5231\n","[146, 155, 'Toxic']\n","5232\n","[66, 71, 'Toxic']\n","5233\n","[40, 45, 'Toxic']\n","[118, 129, 'Toxic']\n","5234\n","[16, 25, 'Toxic']\n","5235\n","[36, 47, 'Toxic']\n","[248, 252, 'Toxic']\n","5236\n","[164, 172, 'Toxic']\n","5237\n","[130, 133, 'Toxic']\n","5238\n","[195, 200, 'Toxic']\n","5239\n","[3, 7, 'Toxic']\n","5240\n","[663, 668, 'Toxic']\n","5241\n","[8, 15, 'Toxic']\n","5242\n","[0, 98, 'Toxic']\n","5243\n","[59, 65, 'Toxic']\n","5244\n","[34, 37, 'Toxic']\n","5245\n","[64, 69, 'Toxic']\n","5246\n","[19, 33, 'Toxic']\n","[73, 79, 'Toxic']\n","5247\n","[22, 30, 'Toxic']\n","[32, 41, 'Toxic']\n","5248\n","[31, 37, 'Toxic']\n","5249\n","[165, 171, 'Toxic']\n","5250\n","[55, 69, 'Toxic']\n","5251\n","[8, 14, 'Toxic']\n","5252\n","[120, 124, 'Toxic']\n","5253\n","[7, 10, 'Toxic']\n","5254\n","[4, 7, 'Toxic']\n","5255\n","[10, 13, 'Toxic']\n","5256\n","[61, 90, 'Toxic']\n","5257\n","[9, 13, 'Toxic']\n","[44, 48, 'Toxic']\n","[56, 88, 'Toxic']\n","5258\n","[0, 5, 'Toxic']\n","[34, 39, 'Toxic']\n","5259\n","[13, 27, 'Toxic']\n","5260\n","[45, 51, 'Toxic']\n","5261\n","[97, 108, 'Toxic']\n","[111, 120, 'Toxic']\n","[122, 129, 'Toxic']\n","5262\n","[122, 127, 'Toxic']\n","5263\n","[9, 14, 'Toxic']\n","5264\n","[0, 43, 'Toxic']\n","5265\n","[27, 33, 'Toxic']\n","[95, 136, 'Toxic']\n","5266\n","[38, 43, 'Toxic']\n","[92, 95, 'Toxic']\n","5267\n","[0, 3, 'Toxic']\n","5268\n","[32, 36, 'Toxic']\n","5269\n","[26, 56, 'Toxic']\n","5270\n","[8, 14, 'Toxic']\n","5271\n","[157, 162, 'Toxic']\n","[274, 279, 'Toxic']\n","[427, 431, 'Toxic']\n","5272\n","[25, 29, 'Toxic']\n","5273\n","[14, 19, 'Toxic']\n","5274\n","[25, 30, 'Toxic']\n","5275\n","[2, 7, 'Toxic']\n","[30, 35, 'Toxic']\n","5276\n","[69, 75, 'Toxic']\n","5277\n","[44, 52, 'Toxic']\n","5278\n","[7, 14, 'Toxic']\n","5279\n","[61, 70, 'Toxic']\n","5280\n","[248, 250, 'Toxic']\n","[252, 257, 'Toxic']\n","5281\n","[24, 29, 'Toxic']\n","[37, 47, 'Toxic']\n","5282\n","[96, 99, 'Toxic']\n","[136, 140, 'Toxic']\n","5283\n","[75, 79, 'Toxic']\n","5284\n","[267, 273, 'Toxic']\n","[920, 925, 'Toxic']\n","[981, 989, 'Toxic']\n","[992, 999, 'Toxic']\n","5285\n","[346, 353, 'Toxic']\n","5286\n","[49, 54, 'Toxic']\n","5287\n","[213, 218, 'Toxic']\n","5288\n","[30, 35, 'Toxic']\n","[41, 48, 'Toxic']\n","5289\n","[0, 5, 'Toxic']\n","[15, 21, 'Toxic']\n","5290\n","[78, 83, 'Toxic']\n","5291\n","[37, 41, 'Toxic']\n","5292\n","[40, 54, 'Toxic']\n","5293\n","[24, 39, 'Toxic']\n","5294\n","[163, 182, 'Toxic']\n","5295\n","[0, 7, 'Toxic']\n","5296\n","[26, 29, 'Toxic']\n","5297\n","[105, 109, 'Toxic']\n","5298\n","[30, 37, 'Toxic']\n","[57, 62, 'Toxic']\n","5299\n","[9, 16, 'Toxic']\n","[43, 45, 'Toxic']\n","5300\n","[0, 9, 'Toxic']\n","5301\n","[12, 19, 'Toxic']\n","[198, 206, 'Toxic']\n","[288, 293, 'Toxic']\n","[296, 303, 'Toxic']\n","[306, 311, 'Toxic']\n","[359, 364, 'Toxic']\n","[388, 393, 'Toxic']\n","[571, 578, 'Toxic']\n","[699, 703, 'Toxic']\n","5302\n","[5, 9, 'Toxic']\n","5303\n","[8, 16, 'Toxic']\n","5304\n","[86, 89, 'Toxic']\n","5305\n","[219, 236, 'Toxic']\n","[245, 251, 'Toxic']\n","5306\n","[23, 29, 'Toxic']\n","5307\n","[10, 18, 'Toxic']\n","5308\n","[233, 241, 'Toxic']\n","5309\n","[24, 33, 'Toxic']\n","5310\n","[47, 61, 'Toxic']\n","5311\n","[937, 942, 'Toxic']\n","5312\n","[0, 4, 'Toxic']\n","5313\n","[321, 325, 'Toxic']\n","5314\n","[34, 37, 'Toxic']\n","5315\n","[134, 143, 'Toxic']\n","5316\n","[16, 20, 'Toxic']\n","5317\n","[21, 24, 'Toxic']\n","5318\n","[119, 122, 'Toxic']\n","5319\n","[37, 40, 'Toxic']\n","5320\n","[10, 16, 'Toxic']\n","5321\n","[20, 27, 'Toxic']\n","[113, 118, 'Toxic']\n","5322\n","[137, 142, 'Toxic']\n","5323\n","[4, 11, 'Toxic']\n","5324\n","[15, 19, 'Toxic']\n","[112, 117, 'Toxic']\n","5325\n","[16, 19, 'Toxic']\n","[269, 273, 'Toxic']\n","[335, 339, 'Toxic']\n","5326\n","[313, 317, 'Toxic']\n","5327\n","[29, 32, 'Toxic']\n","[134, 149, 'Toxic']\n","5328\n","[58, 61, 'Toxic']\n","5329\n","[6, 12, 'Toxic']\n","[251, 257, 'Toxic']\n","5330\n","[373, 384, 'Toxic']\n","5331\n","[181, 186, 'Toxic']\n","5332\n","[52, 68, 'Toxic']\n","5333\n","[91, 96, 'Toxic']\n","[106, 111, 'Toxic']\n","[127, 131, 'Toxic']\n","[259, 264, 'Toxic']\n","5334\n","[15, 20, 'Toxic']\n","5335\n","[30, 35, 'Toxic']\n","5336\n","[0, 5, 'Toxic']\n","5337\n","[105, 111, 'Toxic']\n","5338\n","[30, 34, 'Toxic']\n","5339\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"rlZhb7Ktze_Y"},"source":["words1 = []\n","tags1 = []"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"tG3hJLqFzAMH","executionInfo":{"status":"ok","timestamp":1617297621910,"user_tz":-330,"elapsed":1859,"user":{"displayName":"AMBUJE GUPTA","photoUrl":"","userId":"08374827863947652219"}},"outputId":"9718b5ac-1032-47e0-c5c0-0cfb697d47b9"},"source":["for i in range(len(words)):\n","    if words[i] == '' and tags[i] != '':\n","        print(i)\n","    else:\n","        words1.append(words[i].lower())\n","        tags1.append(tags[i])"],"execution_count":null,"outputs":[{"output_type":"stream","text":["39\n","64\n","83\n","154\n","199\n","210\n","232\n","309\n","335\n","374\n","413\n","431\n","461\n","485\n","524\n","585\n","609\n","672\n","711\n","742\n","761\n","775\n","808\n","878\n","901\n","997\n","1002\n","1018\n","1031\n","1065\n","1126\n","1144\n","1159\n","1191\n","1230\n","1325\n","1342\n","1352\n","1363\n","1371\n","1418\n","1437\n","1475\n","1495\n","1518\n","1536\n","1556\n","1619\n","1646\n","1746\n","1756\n","1821\n","1958\n","1973\n","2033\n","2067\n","2113\n","2152\n","2165\n","2179\n","2186\n","2204\n","2217\n","2241\n","2409\n","2458\n","2462\n","2485\n","2505\n","2514\n","2529\n","2537\n","2546\n","2553\n","2570\n","2610\n","2623\n","2651\n","2670\n","2708\n","2721\n","2744\n","2761\n","2781\n","2827\n","2881\n","2904\n","2928\n","2942\n","3090\n","3153\n","3196\n","3249\n","3254\n","3267\n","3324\n","3339\n","3393\n","3471\n","3495\n","3525\n","3532\n","3660\n","3708\n","3749\n","3862\n","4031\n","4043\n","4053\n","4070\n","4106\n","4234\n","4264\n","4280\n","4332\n","4369\n","4483\n","4515\n","4543\n","4608\n","4620\n","4698\n","4703\n","4727\n","4738\n","4810\n","4870\n","4886\n","4922\n","4934\n","4953\n","4964\n","4978\n","4994\n","5076\n","5129\n","5261\n","5324\n","5413\n","5429\n","5526\n","5605\n","5637\n","5702\n","5731\n","5776\n","5797\n","5879\n","5935\n","5971\n","6031\n","6136\n","6236\n","6279\n","6306\n","6335\n","6344\n","6363\n","6396\n","6432\n","6534\n","6582\n","6624\n","6646\n","6678\n","6694\n","6708\n","6716\n","6748\n","6776\n","6791\n","6837\n","6963\n","6984\n","7187\n","7221\n","7245\n","7272\n","7287\n","7326\n","7346\n","7359\n","7382\n","7472\n","7509\n","7517\n","7558\n","7631\n","7649\n","7665\n","7728\n","7776\n","7824\n","7919\n","7935\n","7982\n","8056\n","8104\n","8154\n","8271\n","8422\n","8530\n","8543\n","8565\n","8577\n","8599\n","8625\n","8698\n","8738\n","8801\n","8828\n","8869\n","8901\n","8914\n","9050\n","9085\n","9144\n","9174\n","9219\n","9230\n","9249\n","9270\n","9312\n","9364\n","9383\n","9386\n","9557\n","9615\n","9669\n","9672\n","9688\n","9718\n","9748\n","9791\n","9794\n","9933\n","10024\n","10060\n","10070\n","10265\n","10286\n","10353\n","10433\n","10609\n","10629\n","10694\n","10730\n","10758\n","10862\n","11073\n","11112\n","11131\n","11141\n","11151\n","11164\n","11173\n","11198\n","11215\n","11292\n","11342\n","11386\n","11398\n","11416\n","11465\n","11498\n","11676\n","11684\n","11788\n","11829\n","11838\n","11864\n","11877\n","11926\n","11940\n","11951\n","11964\n","12001\n","12004\n","12026\n","12202\n","12279\n","12290\n","12310\n","12402\n","12410\n","12415\n","12430\n","12562\n","12583\n","12606\n","12611\n","12696\n","12739\n","12755\n","12813\n","12972\n","12999\n","13032\n","13049\n","13101\n","13109\n","13120\n","13207\n","13224\n","13300\n","13305\n","13333\n","13339\n","13471\n","13490\n","13519\n","13563\n","13599\n","13610\n","13624\n","13630\n","13709\n","13741\n","13809\n","13852\n","13869\n","13980\n","13992\n","14003\n","14111\n","14171\n","14175\n","14206\n","14217\n","14374\n","14415\n","14527\n","14706\n","14837\n","14841\n","14876\n","14943\n","14954\n","14978\n","15215\n","15268\n","15293\n","15337\n","15346\n","15374\n","15394\n","15442\n","15590\n","15607\n","15739\n","15781\n","15787\n","15822\n","15860\n","15868\n","15880\n","15891\n","15932\n","16003\n","16043\n","16082\n","16132\n","16167\n","16220\n","16304\n","16313\n","16340\n","16346\n","16354\n","16385\n","16430\n","16438\n","16510\n","16534\n","16571\n","16649\n","16667\n","16688\n","16704\n","16870\n","16890\n","16958\n","16972\n","16997\n","17040\n","17054\n","17082\n","17128\n","17139\n","17153\n","17165\n","17210\n","17255\n","17373\n","17384\n","17543\n","17731\n","17831\n","17855\n","17864\n","17953\n","17980\n","17999\n","18018\n","18023\n","18079\n","18093\n","18241\n","18306\n","18376\n","18391\n","18419\n","18459\n","18474\n","18499\n","18508\n","18603\n","18613\n","18692\n","18749\n","18789\n","18818\n","18839\n","18851\n","18859\n","18918\n","18934\n","18956\n","19025\n","19113\n","19140\n","19185\n","19192\n","19218\n","19231\n","19253\n","19280\n","19364\n","19384\n","19417\n","19432\n","19541\n","19567\n","19613\n","19714\n","19742\n","19895\n","19944\n","19954\n","19968\n","19986\n","20010\n","20047\n","20075\n","20160\n","20174\n","20267\n","20316\n","20380\n","20411\n","20447\n","20576\n","20618\n","20699\n","20736\n","20790\n","20799\n","20808\n","20852\n","20871\n","20897\n","20986\n","21000\n","21074\n","21085\n","21112\n","21173\n","21228\n","21255\n","21422\n","21503\n","21574\n","21683\n","21691\n","21709\n","21766\n","21774\n","21781\n","21848\n","21897\n","21923\n","21958\n","22002\n","22144\n","22150\n","22173\n","22184\n","22193\n","22218\n","22244\n","22249\n","22289\n","22333\n","22340\n","22361\n","22405\n","22427\n","22500\n","22540\n","22555\n","22596\n","22612\n","22636\n","22690\n","22788\n","22808\n","22956\n","23000\n","23011\n","23046\n","23089\n","23125\n","23222\n","23266\n","23285\n","23422\n","23454\n","23516\n","23527\n","23704\n","23733\n","23753\n","23783\n","23913\n","23935\n","23959\n","24017\n","24033\n","24044\n","24178\n","24185\n","24191\n","24225\n","24232\n","24268\n","24273\n","24303\n","24439\n","24465\n","24510\n","24547\n","24566\n","24613\n","24646\n","24675\n","24707\n","24753\n","24808\n","24826\n","24884\n","25031\n","25055\n","25097\n","25169\n","25224\n","25320\n","25406\n","25461\n","25480\n","25558\n","25584\n","25629\n","25648\n","25736\n","25775\n","25845\n","25913\n","25939\n","25947\n","25959\n","25982\n","26008\n","26021\n","26033\n","26075\n","26119\n","26126\n","26133\n","26288\n","26305\n","26357\n","26416\n","26477\n","26488\n","26500\n","26520\n","26547\n","26561\n","26671\n","26729\n","26756\n","26761\n","26794\n","26814\n","26850\n","26882\n","26901\n","26952\n","26989\n","27049\n","27075\n","27100\n","27111\n","27145\n","27161\n","27171\n","27244\n","27264\n","27286\n","27329\n","27334\n","27408\n","27527\n","27559\n","27582\n","27622\n","27650\n","27673\n","27728\n","27757\n","27767\n","27773\n","27797\n","27822\n","27859\n","27868\n","27890\n","27901\n","27944\n","28064\n","28073\n","28101\n","28119\n","28150\n","28264\n","28318\n","28414\n","28420\n","28563\n","28581\n","28611\n","28636\n","28690\n","28705\n","28793\n","28868\n","28872\n","28894\n","28908\n","29019\n","29036\n","29049\n","29127\n","29168\n","29181\n","29209\n","29231\n","29254\n","29316\n","29350\n","29529\n","29536\n","29563\n","29574\n","29642\n","29680\n","29690\n","29711\n","29744\n","29812\n","29843\n","29860\n","29877\n","29935\n","30036\n","30072\n","30103\n","30182\n","30289\n","30369\n","30382\n","30423\n","30444\n","30486\n","30493\n","30599\n","30645\n","30752\n","30822\n","30872\n","30904\n","30977\n","31071\n","31091\n","31107\n","31287\n","31413\n","31456\n","31476\n","31524\n","31540\n","31564\n","31588\n","31640\n","31705\n","31741\n","31789\n","31821\n","31845\n","31888\n","31924\n","31953\n","31970\n","32026\n","32125\n","32247\n","32293\n","32366\n","32410\n","32438\n","32452\n","32477\n","32537\n","32546\n","32568\n","32586\n","32656\n","32729\n","32767\n","32781\n","32805\n","32817\n","32833\n","32874\n","32924\n","32944\n","32988\n","33153\n","33219\n","33365\n","33409\n","33432\n","33461\n","33539\n","33556\n","33567\n","33593\n","33688\n","33706\n","33726\n","33750\n","33770\n","33795\n","33824\n","33869\n","33881\n","33905\n","34082\n","34102\n","34108\n","34155\n","34343\n","34375\n","34393\n","34499\n","34522\n","34532\n","34610\n","34636\n","34731\n","34738\n","34748\n","34788\n","34958\n","34974\n","34991\n","34999\n","35062\n","35065\n","35112\n","35151\n","35240\n","35270\n","35282\n","35344\n","35356\n","35486\n","35536\n","35557\n","35578\n","35697\n","35735\n","35764\n","35784\n","35811\n","35817\n","35914\n","35988\n","36059\n","36075\n","36149\n","36221\n","36232\n","36299\n","36311\n","36325\n","36389\n","36405\n","36415\n","36462\n","36474\n","36534\n","36559\n","36595\n","36685\n","36715\n","36772\n","36854\n","36858\n","36898\n","36923\n","37002\n","37027\n","37039\n","37056\n","37065\n","37192\n","37208\n","37218\n","37273\n","37323\n","37395\n","37419\n","37525\n","37531\n","37728\n","37750\n","37855\n","37880\n","37888\n","37893\n","37935\n","37959\n","37982\n","38093\n","38121\n","38136\n","38162\n","38176\n","38244\n","38262\n","38284\n","38422\n","38439\n","38445\n","38471\n","38547\n","38565\n","38622\n","38681\n","38734\n","38765\n","38791\n","38826\n","38871\n","38980\n","39010\n","39052\n","39089\n","39106\n","39116\n","39207\n","39227\n","39261\n","39284\n","39327\n","39345\n","39369\n","39378\n","39389\n","39435\n","39448\n","39464\n","39637\n","39701\n","39723\n","39814\n","39855\n","39903\n","39929\n","40030\n","40037\n","40047\n","40111\n","40151\n","40184\n","40191\n","40199\n","40318\n","40398\n","40441\n","40464\n","40473\n","40544\n","40590\n","40608\n","40614\n","40632\n","40674\n","40678\n","40685\n","40765\n","40776\n","40822\n","40917\n","40921\n","40978\n","41128\n","41140\n","41154\n","41176\n","41223\n","41263\n","41274\n","41347\n","41356\n","41430\n","41493\n","41518\n","41524\n","41532\n","41587\n","41617\n","41627\n","41653\n","41696\n","41740\n","41770\n","41822\n","41840\n","41951\n","42000\n","42011\n","42059\n","42082\n","42095\n","42139\n","42145\n","42185\n","42221\n","42234\n","42280\n","42287\n","42357\n","42368\n","42383\n","42394\n","42437\n","42497\n","42555\n","42577\n","42606\n","42619\n","42655\n","42700\n","42727\n","42734\n","42803\n","42876\n","42898\n","42918\n","43012\n","43037\n","43053\n","43226\n","43237\n","43267\n","43389\n","43505\n","43541\n","43645\n","43654\n","43662\n","43729\n","43845\n","43873\n","43941\n","43964\n","44006\n","44070\n","44094\n","44110\n","44287\n","44410\n","44449\n","44511\n","44532\n","44662\n","44668\n","44685\n","44847\n","44908\n","44942\n","45078\n","45104\n","45115\n","45162\n","45207\n","45237\n","45275\n","45286\n","45365\n","45380\n","45427\n","45439\n","45491\n","45541\n","45555\n","45581\n","45586\n","45617\n","45746\n","45785\n","45799\n","45881\n","45900\n","45927\n","46088\n","46131\n","46147\n","46183\n","46207\n","46225\n","46257\n","46420\n","46434\n","46471\n","46580\n","46717\n","46742\n","46794\n","46828\n","46847\n","46883\n","46961\n","47090\n","47099\n","47153\n","47201\n","47232\n","47255\n","47306\n","47325\n","47454\n","47480\n","47499\n","47519\n","47601\n","47623\n","47638\n","47679\n","47708\n","47720\n","47769\n","47793\n","47816\n","47855\n","47868\n","47881\n","47895\n","47941\n","48119\n","48201\n","48215\n","48230\n","48245\n","48308\n","48366\n","48400\n","48428\n","48467\n","48568\n","48599\n","48614\n","48624\n","48740\n","48767\n","48785\n","48803\n","48816\n","48841\n","48845\n","48876\n","48889\n","48933\n","48947\n","49015\n","49131\n","49153\n","49179\n","49188\n","49295\n","49356\n","49383\n","49434\n","49474\n","49528\n","49585\n","49619\n","49659\n","49711\n","49745\n","49829\n","50009\n","50029\n","50060\n","50080\n","50132\n","50144\n","50169\n","50187\n","50222\n","50232\n","50252\n","50270\n","50352\n","50387\n","50411\n","50429\n","50467\n","50480\n","50502\n","50523\n","50643\n","50758\n","50812\n","50908\n","50942\n","50951\n","50960\n","51032\n","51120\n","51279\n","51313\n","51361\n","51403\n","51423\n","51466\n","51499\n","51560\n","51577\n","51601\n","51677\n","51765\n","51771\n","51815\n","51818\n","51824\n","51845\n","51880\n","51965\n","51997\n","52027\n","52113\n","52124\n","52140\n","52245\n","52274\n","52284\n","52288\n","52293\n","52343\n","52349\n","52373\n","52396\n","52535\n","52582\n","52603\n","52651\n","52719\n","52737\n","52801\n","52825\n","52842\n","52860\n","52900\n","52921\n","52952\n","52973\n","53012\n","53097\n","53114\n","53124\n","53219\n","53243\n","53292\n","53326\n","53389\n","53409\n","53499\n","53518\n","53526\n","53589\n","53600\n","53644\n","53720\n","53818\n","53872\n","53924\n","54009\n","54052\n","54088\n","54118\n","54206\n","54221\n","54294\n","54305\n","54324\n","54416\n","54461\n","54464\n","54487\n","54554\n","54568\n","54641\n","54696\n","54722\n","54738\n","54806\n","54813\n","54957\n","55226\n","55243\n","55305\n","55321\n","55345\n","55353\n","55370\n","55406\n","55422\n","55435\n","55475\n","55496\n","55519\n","55557\n","55616\n","55642\n","55721\n","55772\n","55780\n","55787\n","55819\n","55851\n","55861\n","55901\n","55912\n","55960\n","55981\n","56110\n","56161\n","56178\n","56212\n","56224\n","56318\n","56329\n","56345\n","56378\n","56437\n","56500\n","56575\n","56614\n","56674\n","56701\n","56745\n","56769\n","56795\n","56821\n","56989\n","57001\n","57075\n","57212\n","57312\n","57353\n","57400\n","57518\n","57525\n","57549\n","57571\n","57622\n","57643\n","57677\n","57744\n","57791\n","57825\n","57856\n","57924\n","57932\n","57966\n","57989\n","58148\n","58163\n","58181\n","58206\n","58499\n","58524\n","58570\n","58606\n","58672\n","58712\n","58736\n","58830\n","58871\n","58894\n","58978\n","59014\n","59039\n","59100\n","59106\n","59110\n","59117\n","59192\n","59281\n","59297\n","59305\n","59316\n","59323\n","59354\n","59385\n","59463\n","59527\n","59546\n","59587\n","59772\n","59790\n","59801\n","59836\n","59881\n","59902\n","59922\n","59990\n","60103\n","60123\n","60134\n","60266\n","60279\n","60297\n","60386\n","60396\n","60417\n","60461\n","60474\n","60482\n","60524\n","60544\n","60548\n","60559\n","60577\n","60598\n","60635\n","60694\n","60714\n","60724\n","60736\n","60929\n","60935\n","60961\n","60997\n","61013\n","61072\n","61139\n","61158\n","61194\n","61256\n","61277\n","61294\n","61334\n","61361\n","61379\n","61397\n","61448\n","61523\n","61534\n","61549\n","61555\n","61579\n","61595\n","61623\n","61718\n","61724\n","61754\n","61767\n","61791\n","61910\n","61952\n","62042\n","62100\n","62148\n","62180\n","62190\n","62209\n","62217\n","62221\n","62248\n","62310\n","62319\n","62324\n","62345\n","62373\n","62381\n","62394\n","62412\n","62472\n","62503\n","62515\n","62635\n","62644\n","62659\n","62672\n","62738\n","62766\n","62864\n","62900\n","62914\n","62958\n","62984\n","63082\n","63187\n","63208\n","63230\n","63255\n","63288\n","63308\n","63314\n","63340\n","63465\n","63477\n","63484\n","63501\n","63540\n","63567\n","63741\n","63784\n","63802\n","63806\n","63919\n","63924\n","63940\n","63995\n","64016\n","64031\n","64052\n","64064\n","64079\n","64150\n","64159\n","64180\n","64194\n","64249\n","64299\n","64348\n","64398\n","64415\n","64422\n","64489\n","64591\n","64684\n","64711\n","64753\n","64785\n","64808\n","64831\n","64918\n","65017\n","65041\n","65186\n","65251\n","65286\n","65403\n","65419\n","65451\n","65579\n","65589\n","65611\n","65619\n","65643\n","65665\n","65687\n","65789\n","65800\n","65852\n","65863\n","65885\n","65893\n","65940\n","65996\n","66044\n","66157\n","66163\n","66180\n","66218\n","66247\n","66276\n","66340\n","66370\n","66402\n","66422\n","66447\n","66554\n","66576\n","66614\n","66624\n","66636\n","66678\n","66716\n","66722\n","66750\n","66761\n","66809\n","66848\n","66854\n","66916\n","66927\n","66950\n","66984\n","67005\n","67072\n","67163\n","67247\n","67258\n","67273\n","67417\n","67521\n","67544\n","67607\n","67700\n","67791\n","67871\n","67894\n","67949\n","67981\n","67998\n","68035\n","68063\n","68221\n","68248\n","68297\n","68328\n","68338\n","68352\n","68358\n","68432\n","68445\n","68486\n","68527\n","68559\n","68576\n","68595\n","68636\n","68734\n","68749\n","68901\n","68939\n","68965\n","68993\n","69020\n","69077\n","69187\n","69222\n","69337\n","69373\n","69390\n","69401\n","69417\n","69450\n","69613\n","69628\n","69667\n","69681\n","69726\n","69736\n","69749\n","69783\n","69800\n","69842\n","69877\n","69901\n","69935\n","70008\n","70037\n","70057\n","70067\n","70088\n","70118\n","70206\n","70209\n","70273\n","70289\n","70317\n","70338\n","70434\n","70462\n","70473\n","70499\n","70522\n","70573\n","70583\n","70677\n","70774\n","70797\n","70823\n","70865\n","70908\n","71012\n","71033\n","71043\n","71155\n","71320\n","71411\n","71481\n","71499\n","71517\n","71569\n","71608\n","71788\n","71799\n","71824\n","71842\n","71909\n","72008\n","72017\n","72093\n","72161\n","72177\n","72226\n","72240\n","72302\n","72394\n","72428\n","72595\n","72641\n","72701\n","72704\n","72721\n","72760\n","72775\n","72824\n","72840\n","72861\n","72979\n","73071\n","73125\n","73172\n","73184\n","73216\n","73230\n","73248\n","73283\n","73329\n","73334\n","73419\n","73490\n","73506\n","73586\n","73593\n","73733\n","73783\n","73798\n","73840\n","73863\n","73874\n","73926\n","73946\n","74063\n","74076\n","74120\n","74212\n","74222\n","74258\n","74289\n","74339\n","74354\n","74378\n","74415\n","74530\n","74564\n","74602\n","74632\n","74665\n","74712\n","74741\n","74792\n","74816\n","74946\n","74964\n","75124\n","75137\n","75162\n","75203\n","75232\n","75314\n","75352\n","75522\n","75558\n","75590\n","75609\n","75666\n","75679\n","75701\n","75721\n","75727\n","75750\n","75807\n","75830\n","75845\n","75902\n","75959\n","76041\n","76058\n","76073\n","76156\n","76181\n","76220\n","76280\n","76392\n","76449\n","76461\n","76476\n","76484\n","76500\n","76536\n","76550\n","76565\n","76614\n","76645\n","76671\n","76701\n","76711\n","76730\n","76752\n","76873\n","76908\n","76971\n","77003\n","77042\n","77076\n","77105\n","77148\n","77162\n","77196\n","77213\n","77250\n","77276\n","77319\n","77424\n","77443\n","77475\n","77497\n","77533\n","77587\n","77692\n","77706\n","77736\n","77754\n","77772\n","77781\n","77817\n","77843\n","77921\n","77983\n","78042\n","78062\n","78072\n","78091\n","78182\n","78309\n","78337\n","78358\n","78455\n","78472\n","78482\n","78517\n","78535\n","78694\n","78710\n","78737\n","78755\n","78824\n","78898\n","78955\n","78981\n","78998\n","79010\n","79033\n","79053\n","79123\n","79130\n","79158\n","79203\n","79216\n","79246\n","79423\n","79498\n","79536\n","79548\n","79573\n","79628\n","79646\n","79682\n","79723\n","79913\n","79936\n","79953\n","80009\n","80034\n","80067\n","80227\n","80285\n","80307\n","80466\n","80521\n","80565\n","80614\n","80635\n","80660\n","80682\n","80752\n","80780\n","80945\n","80990\n","81088\n","81095\n","81129\n","81269\n","81285\n","81496\n","81536\n","81703\n","81742\n","81788\n","81816\n","81857\n","81886\n","81941\n","81970\n","81973\n","81985\n","82024\n","82111\n","82188\n","82220\n","82236\n","82286\n","82293\n","82314\n","82366\n","82372\n","82415\n","82452\n","82534\n","82563\n","82611\n","82617\n","82685\n","82705\n","82720\n","82725\n","82735\n","82809\n","82820\n","82878\n","82938\n","83018\n","83030\n","83084\n","83116\n","83132\n","83210\n","83237\n","83253\n","83283\n","83341\n","83403\n","83507\n","83522\n","83589\n","83692\n","83711\n","83841\n","83858\n","83881\n","83941\n","83969\n","84140\n","84160\n","84172\n","84183\n","84194\n","84221\n","84268\n","84302\n","84311\n","84337\n","84351\n","84380\n","84400\n","84468\n","84522\n","84529\n","84543\n","84567\n","84624\n","84770\n","84792\n","84811\n","84846\n","84867\n","85112\n","85143\n","85321\n","85399\n","85408\n","85453\n","85467\n","85549\n","85585\n","85618\n","85638\n","85679\n","85696\n","85736\n","85757\n","85825\n","85859\n","85897\n","85951\n","85959\n","85974\n","85990\n","86002\n","86077\n","86090\n","86123\n","86167\n","86196\n","86205\n","86236\n","86269\n","86395\n","86404\n","86445\n","86466\n","86536\n","86575\n","86593\n","86609\n","86631\n","86661\n","86711\n","86730\n","86796\n","86840\n","86881\n","86946\n","86993\n","87031\n","87071\n","87097\n","87102\n","87155\n","87214\n","87290\n","87370\n","87373\n","87383\n","87410\n","87506\n","87550\n","87600\n","87652\n","87681\n","87814\n","87853\n","87865\n","87878\n","87881\n","87902\n","87921\n","87948\n","87964\n","87981\n","87988\n","88027\n","88033\n","88038\n","88084\n","88099\n","88210\n","88235\n","88244\n","88255\n","88333\n","88381\n","88403\n","88444\n","88544\n","88613\n","88759\n","88844\n","88869\n","88909\n","89023\n","89118\n","89146\n","89261\n","89287\n","89338\n","89420\n","89472\n","89574\n","89739\n","89828\n","89863\n","89883\n","89983\n","90092\n","90208\n","90244\n","90360\n","90385\n","90432\n","90491\n","90511\n","90529\n","90559\n","90582\n","90597\n","90605\n","90614\n","90725\n","90743\n","90806\n","90823\n","90970\n","91013\n","91028\n","91041\n","91105\n","91169\n","91254\n","91276\n","91302\n","91331\n","91365\n","91376\n","91457\n","91501\n","91522\n","91573\n","91579\n","91603\n","91673\n","91685\n","91731\n","91740\n","91841\n","91891\n","91905\n","92041\n","92057\n","92073\n","92087\n","92122\n","92138\n","92186\n","92253\n","92290\n","92303\n","92327\n","92338\n","92376\n","92475\n","92526\n","92545\n","92552\n","92567\n","92600\n","92621\n","92853\n","92884\n","92923\n","93038\n","93060\n","93095\n","93121\n","93130\n","93169\n","93344\n","93368\n","93378\n","93393\n","93398\n","93465\n","93507\n","93555\n","93586\n","93660\n","93681\n","93720\n","93747\n","93806\n","93875\n","93894\n","93899\n","93915\n","93924\n","93954\n","93987\n","94050\n","94096\n","94173\n","94199\n","94206\n","94277\n","94293\n","94397\n","94413\n","94513\n","94534\n","94570\n","94592\n","94613\n","94697\n","94724\n","94746\n","94776\n","94968\n","94981\n","95010\n","95058\n","95076\n","95121\n","95265\n","95287\n","95319\n","95351\n","95399\n","95448\n","95465\n","95473\n","95489\n","95502\n","95518\n","95540\n","95598\n","95617\n","95639\n","95651\n","95759\n","95791\n","95827\n","95842\n","95861\n","95923\n","96009\n","96058\n","96114\n","96274\n","96319\n","96354\n","96417\n","96441\n","96468\n","96482\n","96499\n","96598\n","96609\n","96651\n","96661\n","96683\n","96751\n","96770\n","96784\n","96815\n","96872\n","96916\n","96946\n","97068\n","97107\n","97121\n","97175\n","97186\n","97296\n","97311\n","97340\n","97368\n","97386\n","97402\n","97419\n","97507\n","97570\n","97634\n","97711\n","97762\n","97782\n","97790\n","97947\n","97971\n","97976\n","98059\n","98096\n","98179\n","98196\n","98244\n","98252\n","98337\n","98361\n","98431\n","98557\n","98587\n","98603\n","98623\n","98780\n","98892\n","99029\n","99136\n","99178\n","99263\n","99327\n","99423\n","99456\n","99529\n","99570\n","99583\n","99639\n","99668\n","99755\n","99791\n","99822\n","99840\n","99863\n","99910\n","99959\n","99968\n","100096\n","100115\n","100169\n","100355\n","100367\n","100379\n","100465\n","100574\n","100645\n","100651\n","100671\n","100696\n","100738\n","100759\n","100786\n","100819\n","100828\n","100852\n","100896\n","100929\n","100940\n","100962\n","100978\n","101074\n","101169\n","101208\n","101398\n","101415\n","101511\n","101609\n","101639\n","101683\n","101695\n","101776\n","101794\n","101823\n","101862\n","101886\n","101909\n","101947\n","102083\n","102159\n","102189\n","102199\n","102221\n","102238\n","102256\n","102371\n","102393\n","102436\n","102449\n","102458\n","102591\n","102765\n","102790\n","102797\n","102848\n","102903\n","102930\n","102965\n","102975\n","102994\n","103038\n","103048\n","103098\n","103231\n","103256\n","103333\n","103365\n","103377\n","103468\n","103481\n","103512\n","103541\n","103598\n","103611\n","103738\n","103825\n","103866\n","103879\n","103940\n","103967\n","104020\n","104048\n","104090\n","104110\n","104161\n","104220\n","104224\n","104231\n","104290\n","104298\n","104316\n","104370\n","104378\n","104461\n","104529\n","104560\n","104571\n","104662\n","104751\n","104773\n","104780\n","104953\n","104992\n","105015\n","105044\n","105168\n","105193\n","105218\n","105290\n","105301\n","105304\n","105362\n","105425\n","105464\n","105514\n","105559\n","105585\n","105604\n","105621\n","105649\n","105693\n","105712\n","105770\n","105822\n","105896\n","105986\n","106026\n","106034\n","106065\n","106072\n","106091\n","106116\n","106161\n","106172\n","106202\n","106227\n","106234\n","106265\n","106284\n","106315\n","106320\n","106349\n","106359\n","106495\n","106531\n","106582\n","106657\n","106674\n","106709\n","106737\n","106754\n","106787\n","106834\n","106891\n","106999\n","107040\n","107057\n","107136\n","107220\n","107247\n","107271\n","107304\n","107469\n","107583\n","107679\n","107818\n","107836\n","108005\n","108033\n","108070\n","108125\n","108153\n","108160\n","108234\n","108405\n","108431\n","108481\n","108493\n","108506\n","108525\n","108541\n","108560\n","108576\n","108649\n","108662\n","108681\n","108704\n","108722\n","108742\n","108801\n","108827\n","108861\n","108873\n","108934\n","108944\n","108964\n","109022\n","109034\n","109042\n","109078\n","109089\n","109151\n","109192\n","109229\n","109260\n","109276\n","109348\n","109411\n","109425\n","109444\n","109451\n","109483\n","109498\n","109532\n","109594\n","109650\n","109662\n","109720\n","109761\n","109822\n","109894\n","109905\n","109913\n","109939\n","109992\n","110016\n","110042\n","110057\n","110077\n","110088\n","110145\n","110190\n","110230\n","110244\n","110261\n","110321\n","110327\n","110338\n","110374\n","110391\n","110443\n","110531\n","110544\n","110591\n","110620\n","110686\n","110855\n","110929\n","111005\n","111030\n","111037\n","111048\n","111065\n","111089\n","111195\n","111326\n","111343\n","111350\n","111357\n","111367\n","111571\n","111644\n","111675\n","111680\n","111816\n","111821\n","111830\n","111862\n","111903\n","111967\n","111991\n","112027\n","112067\n","112095\n","112139\n","112205\n","112217\n","112272\n","112456\n","112464\n","112471\n","112505\n","112543\n","112565\n","112580\n","112606\n","112624\n","112643\n","112691\n","112699\n","112740\n","112765\n","112838\n","112844\n","112912\n","112949\n","113011\n","113035\n","113059\n","113108\n","113124\n","113170\n","113243\n","113360\n","113414\n","113558\n","113608\n","113643\n","113752\n","113833\n","113945\n","113951\n","113958\n","114004\n","114016\n","114076\n","114110\n","114115\n","114143\n","114171\n","114269\n","114298\n","114351\n","114373\n","114400\n","114429\n","114481\n","114712\n","114774\n","114806\n","114955\n","114987\n","115034\n","115072\n","115182\n","115210\n","115217\n","115225\n","115342\n","115396\n","115406\n","115569\n","115594\n","115629\n","115648\n","115753\n","115799\n","115845\n","115935\n","115948\n","115993\n","116019\n","116047\n","116072\n","116084\n","116215\n","116234\n","116279\n","116298\n","116327\n","116351\n","116454\n","116494\n","116517\n","116529\n","116572\n","116630\n","116652\n","116674\n","116708\n","116736\n","116756\n","116863\n","116992\n","117061\n","117119\n","117138\n","117214\n","117224\n","117256\n","117279\n","117307\n","117347\n","117357\n","117372\n","117382\n","117392\n","117410\n","117448\n","117542\n","117558\n","117631\n","117714\n","117722\n","117746\n","117771\n","117785\n","117866\n","117876\n","117938\n","117958\n","117966\n","118013\n","118045\n","118143\n","118159\n","118170\n","118186\n","118271\n","118291\n","118346\n","118363\n","118423\n","118443\n","118449\n","118469\n","118504\n","118532\n","118561\n","118606\n","118641\n","118748\n","118772\n","118843\n","118872\n","118946\n","118966\n","119151\n","119167\n","119352\n","119396\n","119436\n","119458\n","119474\n","119497\n","119512\n","119541\n","119612\n","119630\n","119654\n","119661\n","119691\n","119713\n","119727\n","119767\n","119936\n","119967\n","120022\n","120062\n","120085\n","120103\n","120176\n","120224\n","120250\n","120389\n","120396\n","120595\n","120634\n","120684\n","120695\n","120725\n","120817\n","120847\n","120878\n","120892\n","120937\n","120963\n","121035\n","121093\n","121100\n","121134\n","121156\n","121182\n","121264\n","121285\n","121324\n","121372\n","121389\n","121437\n","121616\n","121636\n","121684\n","121859\n","121864\n","121884\n","121929\n","121996\n","122025\n","122033\n","122066\n","122077\n","122087\n","122186\n","122248\n","122293\n","122382\n","122395\n","122590\n","122762\n","122795\n","122808\n","122824\n","122907\n","122919\n","123002\n","123067\n","123070\n","123184\n","123262\n","123270\n","123366\n","123417\n","123424\n","123452\n","123483\n","123599\n","123617\n","123674\n","123684\n","123722\n","123736\n","123783\n","123867\n","123880\n","123949\n","123996\n","124021\n","124030\n","124036\n","124123\n","124154\n","124250\n","124336\n","124372\n","124494\n","124540\n","124568\n","124593\n","124615\n","124648\n","124660\n","124673\n","124777\n","124798\n","124905\n","124988\n","125075\n","125260\n","125278\n","125318\n","125334\n","125348\n","125391\n","125566\n","125584\n","125610\n","125645\n","125669\n","125702\n","125730\n","125736\n","125920\n","125966\n","126004\n","126036\n","126088\n","126110\n","126157\n","126216\n","126229\n","126249\n","126307\n","126337\n","126353\n","126362\n","126373\n","126399\n","126475\n","126510\n","126532\n","126556\n","126569\n","126605\n","126611\n","126780\n","126798\n","126817\n","126887\n","126900\n","126917\n","126937\n","126954\n","126959\n","126979\n","127002\n","127042\n","127056\n","127068\n","127164\n","127207\n","127241\n","127272\n","127290\n","127306\n","127378\n","127422\n","127453\n","127498\n","127582\n","127591\n","127606\n","127627\n","127644\n","127709\n","127739\n","127749\n","127777\n","127794\n","127881\n","127933\n","127947\n","128011\n","128022\n","128035\n","128040\n","128053\n","128076\n","128106\n","128194\n","128396\n","128454\n","128467\n","128473\n","128572\n","128598\n","128621\n","128657\n","128698\n","128730\n","128751\n","128759\n","128808\n","128918\n","128963\n","129116\n","129133\n","129188\n","129195\n","129207\n","129269\n","129286\n","129351\n","129388\n","129453\n","129479\n","129553\n","129558\n","129571\n","129581\n","129592\n","129632\n","129666\n","129689\n","129724\n","129753\n","129931\n","129987\n","130002\n","130018\n","130057\n","130092\n","130109\n","130164\n","130252\n","130318\n","130324\n","130383\n","130426\n","130439\n","130527\n","130538\n","130597\n","130620\n","130649\n","130657\n","130686\n","130734\n","130823\n","130934\n","130941\n","130962\n","130969\n","130979\n","131023\n","131051\n","131166\n","131235\n","131267\n","131285\n","131410\n","131429\n","131436\n","131456\n","131525\n","131553\n","131612\n","131788\n","131825\n","131843\n","131926\n","131937\n","131976\n","131999\n","132089\n","132118\n","132136\n","132191\n","132198\n","132243\n","132265\n","132294\n","132326\n","132349\n","132448\n","132480\n","132491\n","132545\n","132561\n","132567\n","132582\n","132613\n","132620\n","132640\n","132686\n","132704\n","132780\n","132816\n","132838\n","132948\n","132963\n","133002\n","133016\n","133078\n","133166\n","133183\n","133192\n","133226\n","133260\n","133313\n","133326\n","133489\n","133500\n","133549\n","133559\n","133575\n","133612\n","133627\n","133679\n","133701\n","133767\n","133770\n","133778\n","133797\n","133840\n","133901\n","133910\n","133932\n","133949\n","133958\n","134053\n","134092\n","134154\n","134199\n","134239\n","134270\n","134316\n","134360\n","134367\n","134380\n","134384\n","134404\n","134407\n","134416\n","134454\n","134468\n","134498\n","134512\n","134529\n","134554\n","134586\n","134611\n","134668\n","134712\n","134726\n","134794\n","134973\n","134997\n","135035\n","135134\n","135171\n","135191\n","135200\n","135255\n","135322\n","135382\n","135394\n","135518\n","135528\n","135581\n","135592\n","135608\n","135626\n","135672\n","135810\n","135902\n","135915\n","135923\n","135959\n","136014\n","136055\n","136126\n","136132\n","136148\n","136162\n","136178\n","136219\n","136252\n","136281\n","136428\n","136474\n","136484\n","136505\n","136518\n","136552\n","136564\n","136577\n","136593\n","136639\n","136706\n","136745\n","136772\n","136897\n","137006\n","137025\n","137040\n","137167\n","137185\n","137348\n","137365\n","137480\n","137512\n","137552\n","137566\n","137610\n","137665\n","137684\n","137712\n","137722\n","137727\n","137749\n","137836\n","137859\n","137870\n","137890\n","137918\n","137937\n","137986\n","138007\n","138032\n","138183\n","138243\n","138280\n","138295\n","138300\n","138308\n","138384\n","138476\n","138495\n","138559\n","138579\n","138611\n","138627\n","138784\n","138813\n","138856\n","138874\n","138913\n","138941\n","138965\n","139038\n","139139\n","139149\n","139174\n","139201\n","139220\n","139258\n","139278\n","139297\n","139390\n","139453\n","139501\n","139520\n","139559\n","139594\n","139638\n","139680\n","139737\n","139818\n","139845\n","139854\n","139875\n","139879\n","139903\n","139909\n","139921\n","139957\n","139996\n","140037\n","140054\n","140124\n","140165\n","140202\n","140217\n","140259\n","140311\n","140349\n","140496\n","140503\n","140575\n","140650\n","140800\n","140816\n","140970\n","141008\n","141148\n","141160\n","141171\n","141252\n","141285\n","141315\n","141462\n","141480\n","141490\n","141516\n","141565\n","141579\n","141648\n","141667\n","141725\n","141740\n","141763\n","141926\n","142035\n","142069\n","142129\n","142256\n","142261\n","142318\n","142332\n","142385\n","142425\n","142444\n","142473\n","142479\n","142539\n","142564\n","142582\n","142590\n","142611\n","142649\n","142759\n","142857\n","142881\n","143118\n","143192\n","143214\n","143242\n","143246\n","143258\n","143309\n","143333\n","143358\n","143419\n","143445\n","143484\n","143503\n","143511\n","143570\n","143586\n","143600\n","143675\n","143682\n","143718\n","143734\n","143751\n","143762\n","143777\n","143806\n","143851\n","143864\n","143881\n","144063\n","144078\n","144090\n","144149\n","144227\n","144264\n","144289\n","144299\n","144315\n","144339\n","144353\n","144379\n","144454\n","144487\n","144547\n","144569\n","144583\n","144643\n","144658\n","144686\n","144698\n","144703\n","144785\n","144918\n","144935\n","144965\n","144978\n","145029\n","145056\n","145066\n","145079\n","145112\n","145117\n","145167\n","145175\n","145246\n","145254\n","145267\n","145353\n","145388\n","145421\n","145521\n","145554\n","145575\n","145596\n","145617\n","145644\n","145663\n","145684\n","145727\n","145752\n","145883\n","145902\n","145924\n","145954\n","145971\n","146007\n","146062\n","146120\n","146134\n","146149\n","146167\n","146193\n","146236\n","146287\n","146332\n","146366\n","146392\n","146436\n","146468\n","146478\n","146521\n","146547\n","146590\n","146662\n","146724\n","146828\n","146850\n","146882\n","146893\n","146899\n","146919\n","146961\n","146973\n","146981\n","147000\n","147043\n","147072\n","147120\n","147143\n","147215\n","147222\n","147235\n","147282\n","147302\n","147351\n","147406\n","147481\n","147575\n","147604\n","147625\n","147668\n","147700\n","147775\n","147825\n","147858\n","147861\n","147867\n","147986\n","148011\n","148127\n","148143\n","148168\n","148181\n","148215\n","148259\n","148282\n","148338\n","148356\n","148384\n","148401\n","148414\n","148458\n","148526\n","148593\n","148601\n","148644\n","148817\n","148895\n","148924\n","148998\n","149018\n","149028\n","149114\n","149134\n","149149\n","149170\n","149232\n","149256\n","149276\n","149289\n","149300\n","149319\n","149355\n","149376\n","149409\n","149440\n","149464\n","149507\n","149528\n","149547\n","149579\n","149603\n","149619\n","149642\n","149734\n","149750\n","149766\n","149943\n","150133\n","150156\n","150176\n","150359\n","150397\n","150414\n","150454\n","150482\n","150538\n","150593\n","150613\n","150641\n","150673\n","150699\n","150753\n","150776\n","150873\n","150903\n","151007\n","151061\n","151082\n","151112\n","151125\n","151174\n","151188\n","151196\n","151239\n","151271\n","151294\n","151352\n","151398\n","151421\n","151426\n","151439\n","151465\n","151493\n","151527\n","151591\n","151605\n","151637\n","151818\n","151971\n","152019\n","152032\n","152050\n","152156\n","152162\n","152205\n","152226\n","152245\n","152287\n","152300\n","152378\n","152442\n","152458\n","152482\n","152495\n","152512\n","152528\n","152572\n","152646\n","152651\n","152658\n","152683\n","152702\n","152756\n","152777\n","152801\n","152809\n","152903\n","152940\n","152954\n","153017\n","153094\n","153114\n","153125\n","153143\n","153183\n","153281\n","153307\n","153376\n","153405\n","153436\n","153512\n","153538\n","153568\n","153596\n","153600\n","153630\n","153637\n","153675\n","153730\n","153744\n","153787\n","153801\n","153837\n","153843\n","153924\n","153935\n","153967\n","153986\n","154081\n","154093\n","154106\n","154154\n","154166\n","154219\n","154291\n","154322\n","154393\n","154412\n","154423\n","154445\n","154505\n","154520\n","154539\n","154661\n","154676\n","154680\n","154713\n","154757\n","154767\n","154801\n","154825\n","154837\n","154890\n","154967\n","155007\n","155043\n","155067\n","155097\n","155108\n","155172\n","155197\n","155230\n","155282\n","155296\n","155423\n","155449\n","155492\n","155524\n","155586\n","155631\n","155652\n","155655\n","155713\n","155769\n","155810\n","155847\n","155915\n","155930\n","155990\n","156111\n","156125\n","156130\n","156179\n","156271\n","156304\n","156406\n","156485\n","156524\n","156558\n","156613\n","156652\n","156673\n","156716\n","156733\n","156754\n","156767\n","156790\n","156806\n","156836\n","156851\n","156928\n","156963\n","156995\n","157008\n","157025\n","157058\n","157072\n","157087\n","157213\n","157229\n","157285\n","157303\n","157310\n","157341\n","157360\n","157375\n","157386\n","157408\n","157444\n","157449\n","157474\n","157536\n","157548\n","157615\n","157665\n","157697\n","157716\n","157728\n","157821\n","157875\n","157954\n","157965\n","158057\n","158145\n","158155\n","158183\n","158236\n","158288\n","158439\n","158445\n","158469\n","158514\n","158525\n","158542\n","158565\n","158595\n","158611\n","158622\n","158664\n","158670\n","158701\n","158799\n","158811\n","158915\n","159018\n","159228\n","159247\n","159300\n","159332\n","159386\n","159407\n","159497\n","159517\n","159538\n","159720\n","159762\n","159774\n","159813\n","159824\n","159835\n","159878\n","159903\n","159928\n","159933\n","159956\n","160034\n","160079\n","160130\n","160156\n","160190\n","160241\n","160293\n","160299\n","160355\n","160374\n","160422\n","160442\n","160475\n","160491\n","160511\n","160546\n","160615\n","160640\n","160661\n","160674\n","160738\n","160778\n","160797\n","160819\n","160833\n","160842\n","160855\n","160865\n","160903\n","160916\n","160923\n","160979\n","161012\n","161088\n","161114\n","161120\n","161147\n","161193\n","161283\n","161301\n","161353\n","161391\n","161416\n","161433\n","161466\n","161473\n","161477\n","161522\n","161568\n","161641\n","161659\n","161720\n","161731\n","161773\n","161798\n","161825\n","161889\n","161919\n","161929\n","162008\n","162039\n","162067\n","162093\n","162107\n","162190\n","162243\n","162247\n","162263\n","162355\n","162384\n","162476\n","162481\n","162495\n","162502\n","162523\n","162540\n","162545\n","162616\n","162626\n","162672\n","162684\n","162713\n","162732\n","162778\n","162802\n","162864\n","162871\n","162923\n","162927\n","162962\n","162974\n","163015\n","163024\n","163056\n","163067\n","163237\n","163293\n","163299\n","163379\n","163387\n","163404\n","163429\n","163444\n","163536\n","163575\n","163598\n","163619\n","163677\n","163822\n","163846\n","163874\n","163934\n","163947\n","163961\n","164059\n","164118\n","164156\n","164180\n","164246\n","164255\n","164273\n","164277\n","164284\n","164325\n","164514\n","164536\n","164619\n","164644\n","164662\n","164688\n","164709\n","164743\n","164772\n","164784\n","164806\n","164839\n","164871\n","164903\n","164918\n","164942\n","164959\n","165150\n","165285\n","165331\n","165370\n","165385\n","165434\n","165479\n","165496\n","165558\n","165662\n","165719\n","165725\n","165759\n","165849\n","165881\n","165894\n","165933\n","165952\n","165979\n","165982\n","166014\n","166199\n","166248\n","166326\n","166361\n","166388\n","166399\n","166524\n","166557\n","166594\n","166668\n","166683\n","166789\n","166818\n","166884\n","167030\n","167037\n","167169\n","167286\n","167342\n","167355\n","167371\n","167383\n","167416\n","167422\n","167449\n","167511\n","167659\n","167727\n","167765\n","167792\n","167808\n","167837\n","167898\n","167911\n","167955\n","167961\n","167978\n","168001\n","168014\n","168090\n","168099\n","168162\n","168205\n","168211\n","168245\n","168265\n","168289\n","168302\n","168335\n","168366\n","168450\n","168550\n","168572\n","168754\n","168811\n","169019\n","169048\n","169055\n","169080\n","169202\n","169277\n","169286\n","169297\n","169301\n","169322\n","169349\n","169358\n","169392\n","169409\n","169426\n","169550\n","169584\n","169630\n","169640\n","169716\n","169723\n","169726\n","169753\n","169759\n","169768\n","169796\n","169808\n","169814\n","169823\n","169848\n","169859\n","169876\n","169896\n","169932\n","169937\n","169954\n","169962\n","169966\n","170034\n","170045\n","170059\n","170116\n","170164\n","170201\n","170257\n","170303\n","170386\n","170439\n","170511\n","170529\n","170544\n","170555\n","170585\n","170720\n","170836\n","170851\n","170890\n","170927\n","170939\n","170959\n","170971\n","171128\n","171137\n","171146\n","171211\n","171245\n","171270\n","171286\n","171374\n","171414\n","171436\n","171492\n","171513\n","171519\n","171611\n","171687\n","171763\n","171779\n","171797\n","171812\n","171827\n","171832\n","171868\n","171881\n","171904\n","171981\n","171994\n","172008\n","172030\n","172107\n","172136\n","172152\n","172160\n","172249\n","172261\n","172297\n","172321\n","172340\n","172353\n","172387\n","172405\n","172447\n","172571\n","172580\n","172691\n","172706\n","172755\n","172784\n","172798\n","172861\n","172873\n","172929\n","172989\n","172998\n","173128\n","173146\n","173154\n","173163\n","173225\n","173267\n","173275\n","173300\n","173316\n","173372\n","173423\n","173474\n","173499\n","173520\n","173534\n","173542\n","173551\n","173573\n","173585\n","173600\n","173759\n","173823\n","173833\n","173860\n","173904\n","173932\n","173955\n","173967\n","174011\n","174057\n","174192\n","174215\n","174252\n","174290\n","174301\n","174323\n","174371\n","174442\n","174521\n","174545\n","174567\n","174598\n","174617\n","174774\n","174780\n","174789\n","174851\n","174870\n","174897\n","175072\n","175206\n","175228\n","175247\n","175383\n","175407\n","175451\n","175620\n","175635\n","175674\n","175682\n","175858\n","175889\n","175905\n","176034\n","176054\n","176088\n","176209\n","176224\n","176254\n","176264\n","176294\n","176388\n","176432\n","176450\n","176483\n","176494\n","176516\n","176559\n","176571\n","176595\n","176630\n","176653\n","176673\n","176706\n","176742\n","176787\n","176905\n","176949\n","176984\n","177126\n","177212\n","177297\n","177313\n","177334\n","177360\n","177369\n","177404\n","177478\n","177556\n","177581\n","177681\n","177707\n","177722\n","177745\n","177775\n","177798\n","177806\n","177873\n","177920\n","177926\n","178037\n","178060\n","178084\n","178143\n","178164\n","178250\n","178305\n","178316\n","178401\n","178424\n","178460\n","178496\n","178522\n","178555\n","178612\n","178642\n","178672\n","178707\n","178728\n","178770\n","178807\n","178883\n","178926\n","179102\n","179136\n","179142\n","179232\n","179241\n","179391\n","179462\n","179535\n","179550\n","179576\n","179671\n","179679\n","179769\n","179811\n","179835\n","179907\n","179972\n","180028\n","180149\n","180283\n","180296\n","180309\n","180327\n","180343\n","180361\n","180406\n","180438\n","180482\n","180532\n","180598\n","180637\n","180649\n","180661\n","180714\n","180760\n","180814\n","180821\n","180859\n","180881\n","180893\n","180988\n","181014\n","181044\n","181055\n","181079\n","181142\n","181168\n","181218\n","181225\n","181263\n","181312\n","181329\n","181364\n","181413\n","181445\n","181545\n","181574\n","181632\n","181701\n","181729\n","181803\n","181820\n","181836\n","181847\n","181869\n","181933\n","181954\n","181973\n","182012\n","182050\n","182069\n","182157\n","182251\n","182255\n","182335\n","182393\n","182406\n","182438\n","182452\n","182504\n","182517\n","182591\n","182600\n","182611\n","182726\n","182737\n","182893\n","182900\n","182942\n","183038\n","183058\n","183088\n","183198\n","183220\n","183250\n","183278\n","183326\n","183345\n","183464\n","183477\n","183655\n","183669\n","183688\n","183705\n","183723\n","183766\n","183778\n","183789\n","183944\n","183985\n","184154\n","184193\n","184266\n","184280\n","184306\n","184384\n","184431\n","184500\n","184577\n","184634\n","184724\n","184769\n","184779\n","184802\n","184870\n","184877\n","184925\n","184942\n","184953\n","185003\n","185022\n","185049\n","185065\n","185081\n","185099\n","185165\n","185205\n","185248\n","185282\n","185321\n","185439\n","185473\n","185476\n","185489\n","185517\n","185532\n","185674\n","185683\n","185706\n","185843\n","185852\n","185910\n","185939\n","185976\n","186021\n","186048\n","186056\n","186076\n","186089\n","186107\n","186203\n","186221\n","186298\n","186340\n","186402\n","186455\n","186485\n","186553\n","186580\n","186599\n","186701\n","186718\n","186733\n","186763\n","186781\n","186815\n","186829\n","186878\n","186891\n","186920\n","186936\n","186988\n","187029\n","187081\n","187103\n","187120\n","187181\n","187237\n","187261\n","187269\n","187278\n","187396\n","187406\n","187414\n","187425\n","187463\n","187478\n","187528\n","187546\n","187563\n","187580\n","187598\n","187703\n","187709\n","187763\n","187833\n","187851\n","187869\n","187922\n","187971\n","187981\n","188024\n","188047\n","188090\n","188127\n","188188\n","188203\n","188222\n","188235\n","188252\n","188260\n","188301\n","188323\n","188367\n","188491\n","188667\n","188686\n","188693\n","188795\n","188812\n","188867\n","188877\n","188885\n","188909\n","189025\n","189047\n","189054\n","189212\n","189222\n","189241\n","189248\n","189303\n","189336\n","189344\n","189356\n","189363\n","189485\n","189495\n","189526\n","189572\n","189581\n","189588\n","189746\n","189808\n","189824\n","189963\n","189984\n","190067\n","190093\n","190125\n","190131\n","190244\n","190293\n","190310\n","190327\n","190345\n","190365\n","190378\n","190502\n","190523\n","190555\n","190573\n","190580\n","190616\n","190655\n","190698\n","190745\n","190780\n","190812\n","190824\n","190834\n","190878\n","190891\n","190906\n","190926\n","190934\n","190939\n","190957\n","190978\n","190989\n","191000\n","191007\n","191118\n","191163\n","191186\n","191251\n","191289\n","191300\n","191315\n","191411\n","191606\n","191636\n","191656\n","191716\n","191749\n","191801\n","191839\n","191846\n","191941\n","191974\n","192029\n","192051\n","192079\n","192152\n","192159\n","192187\n","192213\n","192246\n","192252\n","192282\n","192293\n","192322\n","192363\n","192461\n","192488\n","192526\n","192572\n","192748\n","192809\n","192839\n","192862\n","192882\n","193046\n","193069\n","193079\n","193092\n","193155\n","193158\n","193176\n","193202\n","193282\n","193311\n","193390\n","193394\n","193399\n","193418\n","193427\n","193481\n","193498\n","193523\n","193540\n","193659\n","193703\n","193729\n","193739\n","193796\n","193831\n","193997\n","194008\n","194087\n","194134\n","194154\n","194223\n","194231\n","194266\n","194462\n","194476\n","194490\n","194538\n","194552\n","194564\n","194595\n","194632\n","194646\n","194718\n","194737\n","194767\n","194910\n","194933\n","194969\n","194980\n","195091\n","195105\n","195170\n","195201\n","195211\n","195303\n","195358\n","195386\n","195463\n","195571\n","195636\n","195785\n","195812\n","195838\n","195860\n","195901\n","195932\n","196026\n","196038\n","196059\n","196082\n","196129\n","196156\n","196165\n","196185\n","196190\n","196231\n","196257\n","196280\n","196295\n","196310\n","196338\n","196408\n","196425\n","196449\n","196460\n","196475\n","196533\n","196611\n","196625\n","196640\n","196696\n","196727\n","196745\n","196758\n","196836\n","196855\n","196935\n","196957\n","196964\n","196991\n","196998\n","197022\n","197059\n","197089\n","197121\n","197144\n","197179\n","197187\n","197379\n","197432\n","197497\n","197516\n","197698\n","197718\n","197738\n","197756\n","197792\n","197811\n","197846\n","197860\n","197870\n","197925\n","197939\n","197966\n","197998\n","198009\n","198013\n","198036\n","198056\n","198097\n","198112\n","198143\n","198196\n","198215\n","198226\n","198255\n","198274\n","198285\n","198395\n","198478\n","198578\n","198596\n","198606\n","198641\n","198652\n","198674\n","198758\n","198792\n","198813\n","199134\n","199149\n","199193\n","199203\n","199226\n","199247\n","199264\n","199282\n","199332\n","199342\n","199384\n","199432\n","199458\n","199466\n","199586\n","199630\n","199661\n","199708\n","199730\n","199747\n","199790\n","199798\n","199817\n","199992\n","200066\n","200079\n","200109\n","200149\n","200188\n","200213\n","200228\n","200339\n","200384\n","200398\n","200431\n","200497\n","200563\n","200597\n","200613\n","200659\n","200725\n","200786\n","200891\n","200910\n","200921\n","200962\n","200972\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"AtQNOeRH8Mv8"},"source":["df1 = pd.DataFrame(list(zip(words1, tags1)))"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"bMyklXVL8Mn8","colab":{"base_uri":"https://localhost:8080/","height":402},"executionInfo":{"status":"ok","timestamp":1617297633948,"user_tz":-330,"elapsed":807,"user":{"displayName":"AMBUJE GUPTA","photoUrl":"","userId":"08374827863947652219"}},"outputId":"4dc04357-da4e-4935-8552-c0f4ac1ad50e"},"source":["df1"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>0</th>\n","      <th>1</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>intrepid</td>\n","      <td>O</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>it</td>\n","      <td>O</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>will</td>\n","      <td>O</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>actually</td>\n","      <td>O</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>be</td>\n","      <td>O</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>196314</th>\n","      <td>communist</td>\n","      <td>O</td>\n","    </tr>\n","    <tr>\n","      <th>196315</th>\n","      <td>china</td>\n","      <td>O</td>\n","    </tr>\n","    <tr>\n","      <th>196316</th>\n","      <td>troll</td>\n","      <td>B-Toxic</td>\n","    </tr>\n","    <tr>\n","      <th>196317</th>\n","      <td>guantanamo</td>\n","      <td>O</td>\n","    </tr>\n","    <tr>\n","      <th>196318</th>\n","      <td></td>\n","      <td></td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>196319 rows × 2 columns</p>\n","</div>"],"text/plain":["                 0        1\n","0         intrepid        O\n","1               it        O\n","2             will        O\n","3         actually        O\n","4               be        O\n","...            ...      ...\n","196314   communist        O\n","196315       china        O\n","196316       troll  B-Toxic\n","196317  guantanamo        O\n","196318                     \n","\n","[196319 rows x 2 columns]"]},"metadata":{"tags":[]},"execution_count":78}]},{"cell_type":"code","metadata":{"id":"7b2Q0GFK8rt8"},"source":["df1.to_csv('/content/drive/MyDrive/Toxic Span Detection - Semeval 2021/1-4-2021/train.txt',header=False, sep='\\t', index=False)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"qemCkzi8w7WG"},"source":[""],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"_UPEseEK1h8k"},"source":["#Flair model"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"-SwoTp4hcWFt","executionInfo":{"status":"ok","timestamp":1610561418553,"user_tz":-330,"elapsed":3167,"user":{"displayName":"Harsh Kataria","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GimH0VsMEaiEzaEeo5nJzMe1WuJRQ2b1DK9fb3S=s64","userId":"07300304294680146354"}},"outputId":"2881b33d-ebfb-4a85-de5c-b9fd0aef4021"},"source":["!pip install --upgrade flair"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Requirement already up-to-date: flair in /usr/local/lib/python3.6/dist-packages (0.7)\n","Requirement already satisfied, skipping upgrade: mpld3==0.3 in /usr/local/lib/python3.6/dist-packages (from flair) (0.3)\n","Requirement already satisfied, skipping upgrade: deprecated>=1.2.4 in /usr/local/lib/python3.6/dist-packages (from flair) (1.2.10)\n","Requirement already satisfied, skipping upgrade: bpemb>=0.3.2 in /usr/local/lib/python3.6/dist-packages (from flair) (0.3.2)\n","Requirement already satisfied, skipping upgrade: gdown in /usr/local/lib/python3.6/dist-packages (from flair) (3.6.4)\n","Requirement already satisfied, skipping upgrade: konoha<5.0.0,>=4.0.0 in /usr/local/lib/python3.6/dist-packages (from flair) (4.6.2)\n","Requirement already satisfied, skipping upgrade: regex in /usr/local/lib/python3.6/dist-packages (from flair) (2019.12.20)\n","Requirement already satisfied, skipping upgrade: gensim<=3.8.3,>=3.4.0 in /usr/local/lib/python3.6/dist-packages (from flair) (3.6.0)\n","Requirement already satisfied, skipping upgrade: janome in /usr/local/lib/python3.6/dist-packages (from flair) (0.4.1)\n","Requirement already satisfied, skipping upgrade: ftfy in /usr/local/lib/python3.6/dist-packages (from flair) (5.8)\n","Requirement already satisfied, skipping upgrade: transformers<=3.5.1,>=3.5.0 in /usr/local/lib/python3.6/dist-packages (from flair) (3.5.1)\n","Requirement already satisfied, skipping upgrade: tabulate in /usr/local/lib/python3.6/dist-packages (from flair) (0.8.7)\n","Requirement already satisfied, skipping upgrade: tqdm>=4.26.0 in /usr/local/lib/python3.6/dist-packages (from flair) (4.41.1)\n","Requirement already satisfied, skipping upgrade: sqlitedict>=1.6.0 in /usr/local/lib/python3.6/dist-packages (from flair) (1.7.0)\n","Requirement already satisfied, skipping upgrade: lxml in /usr/local/lib/python3.6/dist-packages (from flair) (4.2.6)\n","Requirement already satisfied, skipping upgrade: matplotlib>=2.2.3 in /usr/local/lib/python3.6/dist-packages (from flair) (3.2.2)\n","Requirement already satisfied, skipping upgrade: hyperopt>=0.1.1 in /usr/local/lib/python3.6/dist-packages (from flair) (0.1.2)\n","Requirement already satisfied, skipping upgrade: scikit-learn>=0.21.3 in /usr/local/lib/python3.6/dist-packages (from flair) (0.22.2.post1)\n","Requirement already satisfied, skipping upgrade: torch>=1.1.0 in /usr/local/lib/python3.6/dist-packages (from flair) (1.7.0+cu101)\n","Requirement already satisfied, skipping upgrade: sentencepiece<=0.1.91 in /usr/local/lib/python3.6/dist-packages (from flair) (0.1.91)\n","Requirement already satisfied, skipping upgrade: langdetect in /usr/local/lib/python3.6/dist-packages (from flair) (1.0.8)\n","Requirement already satisfied, skipping upgrade: python-dateutil>=2.6.1 in /usr/local/lib/python3.6/dist-packages (from flair) (2.8.1)\n","Requirement already satisfied, skipping upgrade: segtok>=1.5.7 in /usr/local/lib/python3.6/dist-packages (from flair) (1.5.10)\n","Requirement already satisfied, skipping upgrade: wrapt<2,>=1.10 in /usr/local/lib/python3.6/dist-packages (from deprecated>=1.2.4->flair) (1.12.1)\n","Requirement already satisfied, skipping upgrade: requests in /usr/local/lib/python3.6/dist-packages (from bpemb>=0.3.2->flair) (2.23.0)\n","Requirement already satisfied, skipping upgrade: numpy in /usr/local/lib/python3.6/dist-packages (from bpemb>=0.3.2->flair) (1.19.5)\n","Requirement already satisfied, skipping upgrade: six in /usr/local/lib/python3.6/dist-packages (from gdown->flair) (1.15.0)\n","Requirement already satisfied, skipping upgrade: overrides==3.0.0 in /usr/local/lib/python3.6/dist-packages (from konoha<5.0.0,>=4.0.0->flair) (3.0.0)\n","Requirement already satisfied, skipping upgrade: scipy>=0.18.1 in /usr/local/lib/python3.6/dist-packages (from gensim<=3.8.3,>=3.4.0->flair) (1.4.1)\n","Requirement already satisfied, skipping upgrade: smart-open>=1.2.1 in /usr/local/lib/python3.6/dist-packages (from gensim<=3.8.3,>=3.4.0->flair) (4.1.0)\n","Requirement already satisfied, skipping upgrade: wcwidth in /usr/local/lib/python3.6/dist-packages (from ftfy->flair) (0.2.5)\n","Requirement already satisfied, skipping upgrade: dataclasses; python_version < \"3.7\" in /usr/local/lib/python3.6/dist-packages (from transformers<=3.5.1,>=3.5.0->flair) (0.8)\n","Requirement already satisfied, skipping upgrade: protobuf in /usr/local/lib/python3.6/dist-packages (from transformers<=3.5.1,>=3.5.0->flair) (3.12.4)\n","Requirement already satisfied, skipping upgrade: tokenizers==0.9.3 in /usr/local/lib/python3.6/dist-packages (from transformers<=3.5.1,>=3.5.0->flair) (0.9.3)\n","Requirement already satisfied, skipping upgrade: sacremoses in /usr/local/lib/python3.6/dist-packages (from transformers<=3.5.1,>=3.5.0->flair) (0.0.43)\n","Requirement already satisfied, skipping upgrade: packaging in /usr/local/lib/python3.6/dist-packages (from transformers<=3.5.1,>=3.5.0->flair) (20.8)\n","Requirement already satisfied, skipping upgrade: filelock in /usr/local/lib/python3.6/dist-packages (from transformers<=3.5.1,>=3.5.0->flair) (3.0.12)\n","Requirement already satisfied, skipping upgrade: pyparsing!=2.0.4,!=2.1.2,!=2.1.6,>=2.0.1 in /usr/local/lib/python3.6/dist-packages (from matplotlib>=2.2.3->flair) (2.4.7)\n","Requirement already satisfied, skipping upgrade: kiwisolver>=1.0.1 in /usr/local/lib/python3.6/dist-packages (from matplotlib>=2.2.3->flair) (1.3.1)\n","Requirement already satisfied, skipping upgrade: cycler>=0.10 in /usr/local/lib/python3.6/dist-packages (from matplotlib>=2.2.3->flair) (0.10.0)\n","Requirement already satisfied, skipping upgrade: networkx in /usr/local/lib/python3.6/dist-packages (from hyperopt>=0.1.1->flair) (2.5)\n","Requirement already satisfied, skipping upgrade: future in /usr/local/lib/python3.6/dist-packages (from hyperopt>=0.1.1->flair) (0.16.0)\n","Requirement already satisfied, skipping upgrade: pymongo in /usr/local/lib/python3.6/dist-packages (from hyperopt>=0.1.1->flair) (3.11.2)\n","Requirement already satisfied, skipping upgrade: joblib>=0.11 in /usr/local/lib/python3.6/dist-packages (from scikit-learn>=0.21.3->flair) (1.0.0)\n","Requirement already satisfied, skipping upgrade: typing-extensions in /usr/local/lib/python3.6/dist-packages (from torch>=1.1.0->flair) (3.7.4.3)\n","Requirement already satisfied, skipping upgrade: chardet<4,>=3.0.2 in /usr/local/lib/python3.6/dist-packages (from requests->bpemb>=0.3.2->flair) (3.0.4)\n","Requirement already satisfied, skipping upgrade: idna<3,>=2.5 in /usr/local/lib/python3.6/dist-packages (from requests->bpemb>=0.3.2->flair) (2.10)\n","Requirement already satisfied, skipping upgrade: certifi>=2017.4.17 in /usr/local/lib/python3.6/dist-packages (from requests->bpemb>=0.3.2->flair) (2020.12.5)\n","Requirement already satisfied, skipping upgrade: urllib3!=1.25.0,!=1.25.1,<1.26,>=1.21.1 in /usr/local/lib/python3.6/dist-packages (from requests->bpemb>=0.3.2->flair) (1.24.3)\n","Requirement already satisfied, skipping upgrade: setuptools in /usr/local/lib/python3.6/dist-packages (from protobuf->transformers<=3.5.1,>=3.5.0->flair) (51.1.1)\n","Requirement already satisfied, skipping upgrade: click in /usr/local/lib/python3.6/dist-packages (from sacremoses->transformers<=3.5.1,>=3.5.0->flair) (7.1.2)\n","Requirement already satisfied, skipping upgrade: decorator>=4.3.0 in /usr/local/lib/python3.6/dist-packages (from networkx->hyperopt>=0.1.1->flair) (4.4.2)\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":363},"id":"WhAtQm7NWDAu","executionInfo":{"status":"error","timestamp":1610804313400,"user_tz":-330,"elapsed":956,"user":{"displayName":"AMBUJE GUPTA","photoUrl":"","userId":"08374827863947652219"}},"outputId":"ad2d216d-42c3-43a0-9008-6bc0c6f485b8"},"source":["from flair.data import Corpus\n","from flair.datasets import ColumnCorpus\n","columns = {0 : 'text', 1 : 'ner'}\n","# directory where the data resides\n","data_folder = '/content/drive/MyDrive/Toxic Span Detection - Semeval 2021/data_pre-process-Ambuje'\n","# initializing the corpus\n","corpus: Corpus = ColumnCorpus(data_folder, columns,\n","=                              train_file = 'train.txt',\n","                            #   test_file = 'test.txt',\n","                              dev_file = 'val.txt')"],"execution_count":null,"outputs":[{"output_type":"error","ename":"ModuleNotFoundError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mModuleNotFoundError\u001b[0m                       Traceback (most recent call last)","\u001b[0;32m<ipython-input-4-259028c51058>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0;32mfrom\u001b[0m \u001b[0mflair\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdata\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mCorpus\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      2\u001b[0m \u001b[0;32mfrom\u001b[0m \u001b[0mflair\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdatasets\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mColumnCorpus\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      3\u001b[0m \u001b[0mcolumns\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m{\u001b[0m\u001b[0;36m0\u001b[0m \u001b[0;34m:\u001b[0m \u001b[0;34m'text'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;36m1\u001b[0m \u001b[0;34m:\u001b[0m \u001b[0;34m'ner'\u001b[0m\u001b[0;34m}\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      4\u001b[0m \u001b[0;31m# directory where the data resides\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      5\u001b[0m \u001b[0mdata_folder\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m'/content/drive/MyDrive/Toxic Span Detection - Semeval 2021/data_pre-process-Ambuje'\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mModuleNotFoundError\u001b[0m: No module named 'flair'","","\u001b[0;31m---------------------------------------------------------------------------\u001b[0;32m\nNOTE: If your import is failing due to a missing package, you can\nmanually install dependencies using either !pip or !apt.\n\nTo view examples of installing some common dependencies, click the\n\"Open Examples\" button below.\n\u001b[0;31m---------------------------------------------------------------------------\u001b[0m\n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"U-vsJAsmBhNk","executionInfo":{"status":"ok","timestamp":1613498872060,"user_tz":-330,"elapsed":1987,"user":{"displayName":"AMBUJE GUPTA","photoUrl":"","userId":"08374827863947652219"}},"outputId":"22f3d9f8-2fb9-4b7c-916e-dd26db6b20f4"},"source":["s=''\n","print(s+'a')"],"execution_count":null,"outputs":[{"output_type":"stream","text":["a\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"ZXS5hjRRB-6T"},"source":["z=[[0,1],[9,10,11,12,13,14]]"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"8gdQN8VZB-8u"},"source":["s='My name is ambuje'"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"gqEfTgTrB_AM"},"source":[""],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"OZv0iAQwB_Dy"},"source":[""],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"zh8Cy6y8b1uv","colab":{"base_uri":"https://localhost:8080/","height":195},"executionInfo":{"status":"error","timestamp":1610804299266,"user_tz":-330,"elapsed":821,"user":{"displayName":"AMBUJE GUPTA","photoUrl":"","userId":"08374827863947652219"}},"outputId":"75500c64-b034-4b74-a324-8dc35508179d"},"source":["# tag to predict\n","tag_type = 'ner'\n","# make tag dictionary from the corpus\n","tag_dictionary = corpus.make_tag_dictionary(tag_type=tag_type)"],"execution_count":null,"outputs":[{"output_type":"error","ename":"NameError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m<ipython-input-3-827ff065dbcf>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      2\u001b[0m \u001b[0mtag_type\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m'ner'\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      3\u001b[0m \u001b[0;31m# make tag dictionary from the corpus\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 4\u001b[0;31m \u001b[0mtag_dictionary\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mcorpus\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mmake_tag_dictionary\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mtag_type\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mtag_type\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;31mNameError\u001b[0m: name 'corpus' is not defined"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"BsIpgpos8xeC","executionInfo":{"status":"ok","timestamp":1610561643640,"user_tz":-330,"elapsed":21275,"user":{"displayName":"Harsh Kataria","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GimH0VsMEaiEzaEeo5nJzMe1WuJRQ2b1DK9fb3S=s64","userId":"07300304294680146354"}},"outputId":"c1cc0535-c81c-42c7-cde2-47ad733403f2"},"source":["from flair.embeddings import TokenEmbeddings, WordEmbeddings, StackedEmbeddings, FlairEmbeddings\n","# 4. initialize embeddings\n","embedding_types = [\n","\n","    WordEmbeddings('glove'),\n","\n","    # comment in this line to use character embeddings\n","    # CharacterEmbeddings(),\n","\n","    # comment in these lines to use flair embeddings\n","    FlairEmbeddings('news-forward'),\n","    FlairEmbeddings('news-backward'),\n","]\n","\n","embeddings: StackedEmbeddings = StackedEmbeddings(embeddings=embedding_types)\n"],"execution_count":null,"outputs":[{"output_type":"stream","text":["2021-01-13 18:13:41,149 https://flair.informatik.hu-berlin.de/resources/embeddings/token/glove.gensim.vectors.npy not found in cache, downloading to /tmp/tmpelta_f9u\n"],"name":"stdout"},{"output_type":"stream","text":["100%|██████████| 160000128/160000128 [00:06<00:00, 26162961.70B/s]"],"name":"stderr"},{"output_type":"stream","text":["2021-01-13 18:13:47,580 copying /tmp/tmpelta_f9u to cache at /root/.flair/embeddings/glove.gensim.vectors.npy\n"],"name":"stdout"},{"output_type":"stream","text":["\n"],"name":"stderr"},{"output_type":"stream","text":["2021-01-13 18:13:47,789 removing temp file /tmp/tmpelta_f9u\n","2021-01-13 18:13:48,331 https://flair.informatik.hu-berlin.de/resources/embeddings/token/glove.gensim not found in cache, downloading to /tmp/tmpqlwkcmpw\n"],"name":"stdout"},{"output_type":"stream","text":["100%|██████████| 21494764/21494764 [00:01<00:00, 15138887.92B/s]"],"name":"stderr"},{"output_type":"stream","text":["2021-01-13 18:13:50,072 copying /tmp/tmpqlwkcmpw to cache at /root/.flair/embeddings/glove.gensim\n","2021-01-13 18:13:50,095 removing temp file /tmp/tmpqlwkcmpw\n"],"name":"stdout"},{"output_type":"stream","text":["\n"],"name":"stderr"},{"output_type":"stream","text":["2021-01-13 18:13:51,538 https://flair.informatik.hu-berlin.de/resources/embeddings/flair/news-forward-0.4.1.pt not found in cache, downloading to /tmp/tmpwdh9du2d\n"],"name":"stdout"},{"output_type":"stream","text":["100%|██████████| 73034624/73034624 [00:03<00:00, 22808903.69B/s]"],"name":"stderr"},{"output_type":"stream","text":["2021-01-13 18:13:55,058 copying /tmp/tmpwdh9du2d to cache at /root/.flair/embeddings/news-forward-0.4.1.pt\n"],"name":"stdout"},{"output_type":"stream","text":["\n"],"name":"stderr"},{"output_type":"stream","text":["2021-01-13 18:13:55,143 removing temp file /tmp/tmpwdh9du2d\n","2021-01-13 18:13:57,258 https://flair.informatik.hu-berlin.de/resources/embeddings/flair/news-backward-0.4.1.pt not found in cache, downloading to /tmp/tmprsj7zr7n\n"],"name":"stdout"},{"output_type":"stream","text":["100%|██████████| 73034575/73034575 [00:03<00:00, 21751210.19B/s]"],"name":"stderr"},{"output_type":"stream","text":["2021-01-13 18:14:00,940 copying /tmp/tmprsj7zr7n to cache at /root/.flair/embeddings/news-backward-0.4.1.pt\n"],"name":"stdout"},{"output_type":"stream","text":["\n"],"name":"stderr"},{"output_type":"stream","text":["2021-01-13 18:14:01,014 removing temp file /tmp/tmprsj7zr7n\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"ce-JzNmN30_P"},"source":["from flair.embeddings import FlairEmbeddings, TransformerWordEmbeddings\n","\n","# init Flair embeddings\n","flair_forward_embedding = FlairEmbeddings('multi-forward')\n","flair_backward_embedding = FlairEmbeddings('multi-backward')\n","\n","# init multilingual BERT\n","bert_embedding = TransformerWordEmbeddings('bert-base-cased', layers='-1,-2,-3,-4')"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"ioLAf2UY31rw"},"source":["from flair.embeddings import StackedEmbeddings\n","\n","# now create the StackedEmbedding object that combines all embeddings\n","embeddings: stacked_embeddings = StackedEmbeddings(\n","    embeddings=[flair_forward_embedding, flair_backward_embedding, bert_embedding])"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"BcpPba5ucndA"},"source":["# from flair.embeddings import WordEmbeddings, StackedEmbeddings,TokenEmbeddings\n","# from typing import List\n","# embedding_types : List[TokenEmbeddings] = [\n","#         WordEmbeddings('glove'),\n","#         ## other embeddings\n","#         ]\n","# embeddings : StackedEmbeddings = StackedEmbeddings(\n","#                                  embeddings=embedding_types)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"EPd6SJIncrTy","executionInfo":{"status":"ok","timestamp":1610561665303,"user_tz":-330,"elapsed":992,"user":{"displayName":"Harsh Kataria","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GimH0VsMEaiEzaEeo5nJzMe1WuJRQ2b1DK9fb3S=s64","userId":"07300304294680146354"}},"outputId":"44bcdea9-1254-4f73-b14c-1ac612ef561e"},"source":["from flair.models import SequenceTagger\n","tagger : SequenceTagger = SequenceTagger(hidden_size=256,\n","                                       embeddings=embeddings,\n","                                       tag_dictionary=tag_dictionary,\n","                                       tag_type=tag_type,\n","                                       use_crf=True)\n","print(tagger)"],"execution_count":null,"outputs":[{"output_type":"stream","text":["SequenceTagger(\n","  (embeddings): StackedEmbeddings(\n","    (list_embedding_0): WordEmbeddings('glove')\n","    (list_embedding_1): FlairEmbeddings(\n","      (lm): LanguageModel(\n","        (drop): Dropout(p=0.05, inplace=False)\n","        (encoder): Embedding(300, 100)\n","        (rnn): LSTM(100, 2048)\n","        (decoder): Linear(in_features=2048, out_features=300, bias=True)\n","      )\n","    )\n","    (list_embedding_2): FlairEmbeddings(\n","      (lm): LanguageModel(\n","        (drop): Dropout(p=0.05, inplace=False)\n","        (encoder): Embedding(300, 100)\n","        (rnn): LSTM(100, 2048)\n","        (decoder): Linear(in_features=2048, out_features=300, bias=True)\n","      )\n","    )\n","  )\n","  (word_dropout): WordDropout(p=0.05)\n","  (locked_dropout): LockedDropout(p=0.5)\n","  (embedding2nn): Linear(in_features=4196, out_features=4196, bias=True)\n","  (rnn): LSTM(4196, 256, batch_first=True, bidirectional=True)\n","  (linear): Linear(in_features=512, out_features=7, bias=True)\n","  (beta): 1.0\n","  (weights): None\n","  (weight_tensor) None\n",")\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"eFRNdlFQc_wy","executionInfo":{"status":"error","timestamp":1610561668925,"user_tz":-330,"elapsed":748,"user":{"displayName":"Harsh Kataria","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GimH0VsMEaiEzaEeo5nJzMe1WuJRQ2b1DK9fb3S=s64","userId":"07300304294680146354"}},"outputId":"bc162b71-d323-4950-fe65-295c67f62f92"},"source":["from flair.trainers import ModelTrainer\n","\n","trainer: ModelTrainer = ModelTrainer(corpus, tagger)\n","\n","# 7. start training\n","trainer.train('resources/taggers/example-ner',\n","              learning_rate=0.1,\n","              mini_batch_size=32,\n","              max_epochs=150,\n","              embeddings_storage_mode='gpu')\n"],"execution_count":null,"outputs":[{"output_type":"stream","text":["2021-01-13 18:14:26,463 ----------------------------------------------------------------------------------------------------\n","2021-01-13 18:14:26,464 Model: \"Corpus: 5590 train + 1118 dev + 746 test sentences\"\n","2021-01-13 18:14:26,465 ----------------------------------------------------------------------------------------------------\n","2021-01-13 18:14:26,467 Corpus: \"SequenceTagger(\n","  (embeddings): StackedEmbeddings(\n","    (list_embedding_0): WordEmbeddings('glove')\n","    (list_embedding_1): FlairEmbeddings(\n","      (lm): LanguageModel(\n","        (drop): Dropout(p=0.05, inplace=False)\n","        (encoder): Embedding(300, 100)\n","        (rnn): LSTM(100, 2048)\n","        (decoder): Linear(in_features=2048, out_features=300, bias=True)\n","      )\n","    )\n","    (list_embedding_2): FlairEmbeddings(\n","      (lm): LanguageModel(\n","        (drop): Dropout(p=0.05, inplace=False)\n","        (encoder): Embedding(300, 100)\n","        (rnn): LSTM(100, 2048)\n","        (decoder): Linear(in_features=2048, out_features=300, bias=True)\n","      )\n","    )\n","  )\n","  (word_dropout): WordDropout(p=0.05)\n","  (locked_dropout): LockedDropout(p=0.5)\n","  (embedding2nn): Linear(in_features=4196, out_features=4196, bias=True)\n","  (rnn): LSTM(4196, 256, batch_first=True, bidirectional=True)\n","  (linear): Linear(in_features=512, out_features=7, bias=True)\n","  (beta): 1.0\n","  (weights): None\n","  (weight_tensor) None\n",")\"\n","2021-01-13 18:14:26,468 ----------------------------------------------------------------------------------------------------\n","2021-01-13 18:14:26,469 Parameters:\n","2021-01-13 18:14:26,471  - learning_rate: \"0.1\"\n","2021-01-13 18:14:26,472  - mini_batch_size: \"32\"\n","2021-01-13 18:14:26,473  - patience: \"3\"\n","2021-01-13 18:14:26,474  - anneal_factor: \"0.5\"\n","2021-01-13 18:14:26,478  - max_epochs: \"150\"\n","2021-01-13 18:14:26,480  - shuffle: \"True\"\n","2021-01-13 18:14:26,481  - train_with_dev: \"False\"\n","2021-01-13 18:14:26,482  - batch_growth_annealing: \"False\"\n","2021-01-13 18:14:26,484 ----------------------------------------------------------------------------------------------------\n","2021-01-13 18:14:26,486 Model training base path: \"resources/taggers/example-ner\"\n","2021-01-13 18:14:26,487 ----------------------------------------------------------------------------------------------------\n","2021-01-13 18:14:26,488 Device: cuda:0\n","2021-01-13 18:14:26,490 ----------------------------------------------------------------------------------------------------\n","2021-01-13 18:14:26,491 Embeddings storage mode: gpu\n"],"name":"stdout"},{"output_type":"error","ename":"ModuleAttributeError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mModuleAttributeError\u001b[0m                      Traceback (most recent call last)","\u001b[0;32m<ipython-input-188-dbbd3d2a8a83>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      8\u001b[0m               \u001b[0mmini_batch_size\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m32\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      9\u001b[0m               \u001b[0mmax_epochs\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m150\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 10\u001b[0;31m               embeddings_storage_mode='gpu')\n\u001b[0m","\u001b[0;32m/usr/local/lib/python3.6/dist-packages/flair/trainers/trainer.py\u001b[0m in \u001b[0;36mtrain\u001b[0;34m(self, base_path, learning_rate, mini_batch_size, mini_batch_chunk_size, max_epochs, scheduler, cycle_momentum, anneal_factor, patience, initial_extra_patience, min_learning_rate, train_with_dev, monitor_train, monitor_test, embeddings_storage_mode, checkpoint, save_final_model, anneal_with_restarts, anneal_with_prestarts, batch_growth_annealing, shuffle, param_selection_mode, write_weights, num_workers, sampler, use_amp, amp_opt_level, eval_on_train_fraction, eval_on_train_shuffle, save_model_at_each_epoch, **kwargs)\u001b[0m\n\u001b[1;32m    195\u001b[0m         log_test = (\n\u001b[1;32m    196\u001b[0m             \u001b[0;32mTrue\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 197\u001b[0;31m             \u001b[0;32mif\u001b[0m \u001b[0;34m(\u001b[0m\u001b[0;32mnot\u001b[0m \u001b[0mparam_selection_mode\u001b[0m \u001b[0;32mand\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcorpus\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mtest\u001b[0m \u001b[0;32mand\u001b[0m \u001b[0mmonitor_test\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    198\u001b[0m             \u001b[0;32melse\u001b[0m \u001b[0;32mFalse\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    199\u001b[0m         )\n","\u001b[0;32m/usr/local/lib/python3.6/dist-packages/torch/nn/modules/module.py\u001b[0m in \u001b[0;36m__getattr__\u001b[0;34m(self, name)\u001b[0m\n\u001b[1;32m    777\u001b[0m                 \u001b[0;32mreturn\u001b[0m \u001b[0mmodules\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mname\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    778\u001b[0m         raise ModuleAttributeError(\"'{}' object has no attribute '{}'\".format(\n\u001b[0;32m--> 779\u001b[0;31m             type(self).__name__, name))\n\u001b[0m\u001b[1;32m    780\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    781\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0m__setattr__\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mname\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0mstr\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mvalue\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0mUnion\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mTensor\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m'Module'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;34m->\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mModuleAttributeError\u001b[0m: 'SequenceTagger' object has no attribute 'test'"]}]},{"cell_type":"code","metadata":{"id":"OQPTus-A6wN1"},"source":[""],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"q8WcUb61AE_O"},"source":[""],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"OGmdaQMgAE8S"},"source":[""],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"34K-txG4AE5Y"},"source":[""],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"U2ru9KYDAE20"},"source":[""],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"qPzK7lGiAE0S"},"source":[""],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"JMSEFW8VAExa"},"source":[""],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"wDelS8z3Y9bK","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1617701371220,"user_tz":-330,"elapsed":197443,"user":{"displayName":"Harsh Kataria","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GimH0VsMEaiEzaEeo5nJzMe1WuJRQ2b1DK9fb3S=s64","userId":"07300304294680146354"}},"outputId":"5cea454a-e84c-4807-f7d9-5893f047b473"},"source":["!pip install flair"],"execution_count":1,"outputs":[{"output_type":"stream","text":["Collecting flair\n","\u001b[?25l  Downloading https://files.pythonhosted.org/packages/f0/3a/1b46a0220d6176b22bcb9336619d1731301bc2c75fa926a9ef953e6e4d58/flair-0.8.0.post1-py3-none-any.whl (284kB)\n","\r\u001b[K     |█▏                              | 10kB 14.7MB/s eta 0:00:01\r\u001b[K     |██▎                             | 20kB 20.4MB/s eta 0:00:01\r\u001b[K     |███▌                            | 30kB 23.5MB/s eta 0:00:01\r\u001b[K     |████▋                           | 40kB 17.1MB/s eta 0:00:01\r\u001b[K     |█████▊                          | 51kB 11.6MB/s eta 0:00:01\r\u001b[K     |███████                         | 61kB 13.1MB/s eta 0:00:01\r\u001b[K     |████████                        | 71kB 10.0MB/s eta 0:00:01\r\u001b[K     |█████████▏                      | 81kB 10.7MB/s eta 0:00:01\r\u001b[K     |██████████▍                     | 92kB 10.9MB/s eta 0:00:01\r\u001b[K     |███████████▌                    | 102kB 10.6MB/s eta 0:00:01\r\u001b[K     |████████████▋                   | 112kB 10.6MB/s eta 0:00:01\r\u001b[K     |█████████████▉                  | 122kB 10.6MB/s eta 0:00:01\r\u001b[K     |███████████████                 | 133kB 10.6MB/s eta 0:00:01\r\u001b[K     |████████████████                | 143kB 10.6MB/s eta 0:00:01\r\u001b[K     |█████████████████▎              | 153kB 10.6MB/s eta 0:00:01\r\u001b[K     |██████████████████▍             | 163kB 10.6MB/s eta 0:00:01\r\u001b[K     |███████████████████▋            | 174kB 10.6MB/s eta 0:00:01\r\u001b[K     |████████████████████▊           | 184kB 10.6MB/s eta 0:00:01\r\u001b[K     |█████████████████████▉          | 194kB 10.6MB/s eta 0:00:01\r\u001b[K     |███████████████████████         | 204kB 10.6MB/s eta 0:00:01\r\u001b[K     |████████████████████████▏       | 215kB 10.6MB/s eta 0:00:01\r\u001b[K     |█████████████████████████▎      | 225kB 10.6MB/s eta 0:00:01\r\u001b[K     |██████████████████████████▌     | 235kB 10.6MB/s eta 0:00:01\r\u001b[K     |███████████████████████████▋    | 245kB 10.6MB/s eta 0:00:01\r\u001b[K     |████████████████████████████▊   | 256kB 10.6MB/s eta 0:00:01\r\u001b[K     |██████████████████████████████  | 266kB 10.6MB/s eta 0:00:01\r\u001b[K     |███████████████████████████████ | 276kB 10.6MB/s eta 0:00:01\r\u001b[K     |████████████████████████████████| 286kB 10.6MB/s \n","\u001b[?25hCollecting konoha<5.0.0,>=4.0.0\n","  Downloading https://files.pythonhosted.org/packages/02/be/4dd30d56a0a19619deb9bf41ba8202709fa83b1b301b876572cd6dc38117/konoha-4.6.4-py3-none-any.whl\n","Collecting sentencepiece==0.1.95\n","\u001b[?25l  Downloading https://files.pythonhosted.org/packages/f5/99/e0808cb947ba10f575839c43e8fafc9cc44e4a7a2c8f79c60db48220a577/sentencepiece-0.1.95-cp37-cp37m-manylinux2014_x86_64.whl (1.2MB)\n","\u001b[K     |████████████████████████████████| 1.2MB 22.4MB/s \n","\u001b[?25hRequirement already satisfied: tqdm>=4.26.0 in /usr/local/lib/python3.7/dist-packages (from flair) (4.41.1)\n","Requirement already satisfied: regex in /usr/local/lib/python3.7/dist-packages (from flair) (2019.12.20)\n","Collecting mpld3==0.3\n","\u001b[?25l  Downloading https://files.pythonhosted.org/packages/91/95/a52d3a83d0a29ba0d6898f6727e9858fe7a43f6c2ce81a5fe7e05f0f4912/mpld3-0.3.tar.gz (788kB)\n","\u001b[K     |████████████████████████████████| 798kB 39.2MB/s \n","\u001b[?25hRequirement already satisfied: hyperopt>=0.1.1 in /usr/local/lib/python3.7/dist-packages (from flair) (0.1.2)\n","Collecting segtok>=1.5.7\n","  Downloading https://files.pythonhosted.org/packages/41/08/582dab5f4b1d5ca23bc6927b4bb977c8ff7f3a87a3b98844ef833e2f5623/segtok-1.5.10.tar.gz\n","Collecting langdetect\n","\u001b[?25l  Downloading https://files.pythonhosted.org/packages/56/a3/8407c1e62d5980188b4acc45ef3d94b933d14a2ebc9ef3505f22cf772570/langdetect-1.0.8.tar.gz (981kB)\n","\u001b[K     |████████████████████████████████| 983kB 38.6MB/s \n","\u001b[?25hCollecting torch<=1.7.1,>=1.5.0\n","\u001b[?25l  Downloading https://files.pythonhosted.org/packages/90/5d/095ddddc91c8a769a68c791c019c5793f9c4456a688ddd235d6670924ecb/torch-1.7.1-cp37-cp37m-manylinux1_x86_64.whl (776.8MB)\n","\u001b[K     |████████████████████████████████| 776.8MB 24kB/s \n","\u001b[?25hRequirement already satisfied: scikit-learn>=0.21.3 in /usr/local/lib/python3.7/dist-packages (from flair) (0.22.2.post1)\n","Collecting sqlitedict>=1.6.0\n","  Downloading https://files.pythonhosted.org/packages/5c/2d/b1d99e9ad157dd7de9cd0d36a8a5876b13b55e4b75f7498bc96035fb4e96/sqlitedict-1.7.0.tar.gz\n","Requirement already satisfied: python-dateutil>=2.6.1 in /usr/local/lib/python3.7/dist-packages (from flair) (2.8.1)\n","Collecting deprecated>=1.2.4\n","  Downloading https://files.pythonhosted.org/packages/fb/73/994edfcba74443146c84b91921fcc269374354118d4f452fb0c54c1cbb12/Deprecated-1.2.12-py2.py3-none-any.whl\n","Requirement already satisfied: matplotlib>=2.2.3 in /usr/local/lib/python3.7/dist-packages (from flair) (3.2.2)\n","Requirement already satisfied: lxml in /usr/local/lib/python3.7/dist-packages (from flair) (4.2.6)\n","Requirement already satisfied: tabulate in /usr/local/lib/python3.7/dist-packages (from flair) (0.8.9)\n","Collecting transformers>=4.0.0\n","\u001b[?25l  Downloading https://files.pythonhosted.org/packages/ed/d5/f4157a376b8a79489a76ce6cfe147f4f3be1e029b7144fa7b8432e8acb26/transformers-4.4.2-py3-none-any.whl (2.0MB)\n","\u001b[K     |████████████████████████████████| 2.0MB 36.4MB/s \n","\u001b[?25hRequirement already satisfied: gensim<=3.8.3,>=3.4.0 in /usr/local/lib/python3.7/dist-packages (from flair) (3.6.0)\n","Collecting huggingface-hub\n","  Downloading https://files.pythonhosted.org/packages/af/07/bf95f398e6598202d878332280f36e589512174882536eb20d792532a57d/huggingface_hub-0.0.7-py3-none-any.whl\n","Collecting janome\n","\u001b[?25l  Downloading https://files.pythonhosted.org/packages/a8/63/98858cbead27df7536c7e300c169da0999e9704d02220dc6700b804eeff0/Janome-0.4.1-py2.py3-none-any.whl (19.7MB)\n","\u001b[K     |████████████████████████████████| 19.7MB 1.3MB/s \n","\u001b[?25hCollecting bpemb>=0.3.2\n","  Downloading https://files.pythonhosted.org/packages/91/77/3f0f53856e86af32b1d3c86652815277f7b5f880002584eb30db115b6df5/bpemb-0.3.2-py3-none-any.whl\n","Collecting gdown==3.12.2\n","  Downloading https://files.pythonhosted.org/packages/50/21/92c3cfe56f5c0647145c4b0083d0733dd4890a057eb100a8eeddf949ffe9/gdown-3.12.2.tar.gz\n","  Installing build dependencies ... \u001b[?25l\u001b[?25hdone\n","  Getting requirements to build wheel ... \u001b[?25l\u001b[?25hdone\n","    Preparing wheel metadata ... \u001b[?25l\u001b[?25hdone\n","Collecting ftfy\n","\u001b[?25l  Downloading https://files.pythonhosted.org/packages/04/06/e5c80e2e0f979628d47345efba51f7ba386fe95963b11c594209085f5a9b/ftfy-5.9.tar.gz (66kB)\n","\u001b[K     |████████████████████████████████| 71kB 7.7MB/s \n","\u001b[?25hRequirement already satisfied: numpy<1.20.0 in /usr/local/lib/python3.7/dist-packages (from flair) (1.19.5)\n","Collecting overrides<4.0.0,>=3.0.0\n","  Downloading https://files.pythonhosted.org/packages/ff/b1/10f69c00947518e6676bbd43e739733048de64b8dd998e9c2d5a71f44c5d/overrides-3.1.0.tar.gz\n","Collecting requests<3.0.0,>=2.25.1\n","\u001b[?25l  Downloading https://files.pythonhosted.org/packages/29/c1/24814557f1d22c56d50280771a17307e6bf87b70727d975fd6b2ce6b014a/requests-2.25.1-py2.py3-none-any.whl (61kB)\n","\u001b[K     |████████████████████████████████| 61kB 6.5MB/s \n","\u001b[?25hRequirement already satisfied: importlib-metadata<4.0.0,>=3.7.0 in /usr/local/lib/python3.7/dist-packages (from konoha<5.0.0,>=4.0.0->flair) (3.8.1)\n","Requirement already satisfied: scipy in /usr/local/lib/python3.7/dist-packages (from hyperopt>=0.1.1->flair) (1.4.1)\n","Requirement already satisfied: networkx in /usr/local/lib/python3.7/dist-packages (from hyperopt>=0.1.1->flair) (2.5)\n","Requirement already satisfied: pymongo in /usr/local/lib/python3.7/dist-packages (from hyperopt>=0.1.1->flair) (3.11.3)\n","Requirement already satisfied: six in /usr/local/lib/python3.7/dist-packages (from hyperopt>=0.1.1->flair) (1.15.0)\n","Requirement already satisfied: future in /usr/local/lib/python3.7/dist-packages (from hyperopt>=0.1.1->flair) (0.16.0)\n","Requirement already satisfied: typing-extensions in /usr/local/lib/python3.7/dist-packages (from torch<=1.7.1,>=1.5.0->flair) (3.7.4.3)\n","Requirement already satisfied: joblib>=0.11 in /usr/local/lib/python3.7/dist-packages (from scikit-learn>=0.21.3->flair) (1.0.1)\n","Requirement already satisfied: wrapt<2,>=1.10 in /usr/local/lib/python3.7/dist-packages (from deprecated>=1.2.4->flair) (1.12.1)\n","Requirement already satisfied: pyparsing!=2.0.4,!=2.1.2,!=2.1.6,>=2.0.1 in /usr/local/lib/python3.7/dist-packages (from matplotlib>=2.2.3->flair) (2.4.7)\n","Requirement already satisfied: kiwisolver>=1.0.1 in /usr/local/lib/python3.7/dist-packages (from matplotlib>=2.2.3->flair) (1.3.1)\n","Requirement already satisfied: cycler>=0.10 in /usr/local/lib/python3.7/dist-packages (from matplotlib>=2.2.3->flair) (0.10.0)\n","Requirement already satisfied: packaging in /usr/local/lib/python3.7/dist-packages (from transformers>=4.0.0->flair) (20.9)\n","Collecting tokenizers<0.11,>=0.10.1\n","\u001b[?25l  Downloading https://files.pythonhosted.org/packages/ae/04/5b870f26a858552025a62f1649c20d29d2672c02ff3c3fb4c688ca46467a/tokenizers-0.10.2-cp37-cp37m-manylinux2010_x86_64.whl (3.3MB)\n","\u001b[K     |████████████████████████████████| 3.3MB 33.1MB/s \n","\u001b[?25hRequirement already satisfied: filelock in /usr/local/lib/python3.7/dist-packages (from transformers>=4.0.0->flair) (3.0.12)\n","Collecting sacremoses\n","\u001b[?25l  Downloading https://files.pythonhosted.org/packages/08/cd/342e584ee544d044fb573ae697404ce22ede086c9e87ce5960772084cad0/sacremoses-0.0.44.tar.gz (862kB)\n","\u001b[K     |████████████████████████████████| 870kB 43.4MB/s \n","\u001b[?25hRequirement already satisfied: smart-open>=1.2.1 in /usr/local/lib/python3.7/dist-packages (from gensim<=3.8.3,>=3.4.0->flair) (4.2.0)\n","Requirement already satisfied: wcwidth in /usr/local/lib/python3.7/dist-packages (from ftfy->flair) (0.2.5)\n","Requirement already satisfied: urllib3<1.27,>=1.21.1 in /usr/local/lib/python3.7/dist-packages (from requests<3.0.0,>=2.25.1->konoha<5.0.0,>=4.0.0->flair) (1.24.3)\n","Requirement already satisfied: idna<3,>=2.5 in /usr/local/lib/python3.7/dist-packages (from requests<3.0.0,>=2.25.1->konoha<5.0.0,>=4.0.0->flair) (2.10)\n","Requirement already satisfied: chardet<5,>=3.0.2 in /usr/local/lib/python3.7/dist-packages (from requests<3.0.0,>=2.25.1->konoha<5.0.0,>=4.0.0->flair) (3.0.4)\n","Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.7/dist-packages (from requests<3.0.0,>=2.25.1->konoha<5.0.0,>=4.0.0->flair) (2020.12.5)\n","Requirement already satisfied: zipp>=0.5 in /usr/local/lib/python3.7/dist-packages (from importlib-metadata<4.0.0,>=3.7.0->konoha<5.0.0,>=4.0.0->flair) (3.4.1)\n","Requirement already satisfied: decorator>=4.3.0 in /usr/local/lib/python3.7/dist-packages (from networkx->hyperopt>=0.1.1->flair) (4.4.2)\n","Requirement already satisfied: click in /usr/local/lib/python3.7/dist-packages (from sacremoses->transformers>=4.0.0->flair) (7.1.2)\n","Building wheels for collected packages: gdown\n","  Building wheel for gdown (PEP 517) ... \u001b[?25l\u001b[?25hdone\n","  Created wheel for gdown: filename=gdown-3.12.2-cp37-none-any.whl size=9693 sha256=58e5ad070c08a090c3d57eba1f825c45141457dc6acb012f6699ac1fe352f2df\n","  Stored in directory: /root/.cache/pip/wheels/81/d0/d7/d9983facc6f2775411803e0e2d30ebf98efbf2fc6e57701e09\n","Successfully built gdown\n","Building wheels for collected packages: mpld3, segtok, langdetect, sqlitedict, ftfy, overrides, sacremoses\n","  Building wheel for mpld3 (setup.py) ... \u001b[?25l\u001b[?25hdone\n","  Created wheel for mpld3: filename=mpld3-0.3-cp37-none-any.whl size=116679 sha256=fdd4092da8ffbfce0ea14d2260d8a3fded71951b2709dfd0cba481bf9be88085\n","  Stored in directory: /root/.cache/pip/wheels/c0/47/fb/8a64f89aecfe0059830479308ad42d62e898a3e3cefdf6ba28\n","  Building wheel for segtok (setup.py) ... \u001b[?25l\u001b[?25hdone\n","  Created wheel for segtok: filename=segtok-1.5.10-cp37-none-any.whl size=25019 sha256=6861bee675c3a9783e9da8bdb739df8aa38a495ec6370792aaaff2598cd0e76d\n","  Stored in directory: /root/.cache/pip/wheels/b4/39/f6/9ca1c5cabde964d728023b5751c3a206a5c8cc40252321fb6b\n","  Building wheel for langdetect (setup.py) ... \u001b[?25l\u001b[?25hdone\n","  Created wheel for langdetect: filename=langdetect-1.0.8-cp37-none-any.whl size=993193 sha256=ff2e1f8256ef456a43c30b0a4f269add1ebf405075dd1cb5ba1939458808dffb\n","  Stored in directory: /root/.cache/pip/wheels/8d/b3/aa/6d99de9f3841d7d3d40a60ea06e6d669e8e5012e6c8b947a57\n","  Building wheel for sqlitedict (setup.py) ... \u001b[?25l\u001b[?25hdone\n","  Created wheel for sqlitedict: filename=sqlitedict-1.7.0-cp37-none-any.whl size=14376 sha256=b64daf29f06084c2afe371ebcad6e0ec14182188363aaa00780421800af381e4\n","  Stored in directory: /root/.cache/pip/wheels/cf/c6/4f/2c64a43f041415eb8b8740bd80e15e92f0d46c5e464d8e4b9b\n","  Building wheel for ftfy (setup.py) ... \u001b[?25l\u001b[?25hdone\n","  Created wheel for ftfy: filename=ftfy-5.9-cp37-none-any.whl size=46451 sha256=e785cbc7f02f582580cfb2144e4d37235edf2b85bc32635bbd6be714bfdd8ea0\n","  Stored in directory: /root/.cache/pip/wheels/5e/2e/f0/b07196e8c929114998f0316894a61c752b63bfa3fdd50d2fc3\n","  Building wheel for overrides (setup.py) ... \u001b[?25l\u001b[?25hdone\n","  Created wheel for overrides: filename=overrides-3.1.0-cp37-none-any.whl size=10174 sha256=df7fa76873a34b5bacc82836ce08b2726adf544fcfba03368ce89d1f2aa9ad30\n","  Stored in directory: /root/.cache/pip/wheels/5c/24/13/6ef8600e6f147c95e595f1289a86a3cc82ed65df57582c65a9\n","  Building wheel for sacremoses (setup.py) ... \u001b[?25l\u001b[?25hdone\n","  Created wheel for sacremoses: filename=sacremoses-0.0.44-cp37-none-any.whl size=886084 sha256=fb574ee431cb70a52d0844d442755cff65dfcecaa04402b4d92d2e8250d01e6c\n","  Stored in directory: /root/.cache/pip/wheels/3e/fb/c0/13ab4d63d537658f448366744654323077c4d90069b6512f3c\n","Successfully built mpld3 segtok langdetect sqlitedict ftfy overrides sacremoses\n","\u001b[31mERROR: torchvision 0.9.1+cu101 has requirement torch==1.8.1, but you'll have torch 1.7.1 which is incompatible.\u001b[0m\n","\u001b[31mERROR: torchtext 0.9.1 has requirement torch==1.8.1, but you'll have torch 1.7.1 which is incompatible.\u001b[0m\n","\u001b[31mERROR: google-colab 1.0.0 has requirement requests~=2.23.0, but you'll have requests 2.25.1 which is incompatible.\u001b[0m\n","\u001b[31mERROR: datascience 0.10.6 has requirement folium==0.2.1, but you'll have folium 0.8.3 which is incompatible.\u001b[0m\n","Installing collected packages: overrides, requests, konoha, sentencepiece, mpld3, segtok, langdetect, torch, sqlitedict, deprecated, tokenizers, sacremoses, transformers, huggingface-hub, janome, bpemb, gdown, ftfy, flair\n","  Found existing installation: requests 2.23.0\n","    Uninstalling requests-2.23.0:\n","      Successfully uninstalled requests-2.23.0\n","  Found existing installation: torch 1.8.1+cu101\n","    Uninstalling torch-1.8.1+cu101:\n","      Successfully uninstalled torch-1.8.1+cu101\n","  Found existing installation: gdown 3.6.4\n","    Uninstalling gdown-3.6.4:\n","      Successfully uninstalled gdown-3.6.4\n","Successfully installed bpemb-0.3.2 deprecated-1.2.12 flair-0.8.0.post1 ftfy-5.9 gdown-3.12.2 huggingface-hub-0.0.7 janome-0.4.1 konoha-4.6.4 langdetect-1.0.8 mpld3-0.3 overrides-3.1.0 requests-2.25.1 sacremoses-0.0.44 segtok-1.5.10 sentencepiece-0.1.95 sqlitedict-1.7.0 tokenizers-0.10.2 torch-1.7.1 transformers-4.4.2\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"0pmqxf1r1aLg","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1617387308917,"user_tz":-330,"elapsed":9667,"user":{"displayName":"AMBUJE GUPTA","photoUrl":"","userId":"08374827863947652219"}},"outputId":"d97019f8-2843-42ce-a3e7-ac55a88b35b3"},"source":["from flair.data import Corpus\n","from flair.datasets import ColumnCorpus\n","\n","# define columns\n","columns = {0: 'text', 1: 'ner'}\n","\n","# this is the folder in which train, test and dev files reside\n","data_folder = '/content/drive/MyDrive/Toxic Span Detection - Semeval 2021/data_pre-process-Ambuje/uncased'#'/content/drive/My Drive/Projects/Legal.AI/Dataset/hk45anno'\n","\n","# init a corpus using column format, data folder and the names of the train, dev and test files\n","corpus: Corpus = ColumnCorpus(data_folder, columns,\n","                              train_file='/content/drive/MyDrive/Toxic Span Detection - Semeval 2021/1-4-2021/train.txt',\n","                            #   test_file='test.txt',\n","                              dev_file='val.txt')"],"execution_count":null,"outputs":[{"output_type":"stream","text":["2021-04-02 18:14:55,801 Reading data from /content/drive/MyDrive/Toxic Span Detection - Semeval 2021/data_pre-process-Ambuje/uncased\n","2021-04-02 18:14:55,802 Train: /content/drive/MyDrive/Toxic Span Detection - Semeval 2021/1-4-2021/train.txt\n","2021-04-02 18:14:55,809 Dev: /content/drive/MyDrive/Toxic Span Detection - Semeval 2021/data_pre-process-Ambuje/uncased/val.txt\n","2021-04-02 18:14:55,810 Test: None\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"26p5k2inSqCa","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1617387308920,"user_tz":-330,"elapsed":7511,"user":{"displayName":"AMBUJE GUPTA","photoUrl":"","userId":"08374827863947652219"}},"outputId":"f452340f-aa1c-4653-e7a7-9a7b25cd603b"},"source":["print(corpus.train[0].to_tagged_string('ner'))"],"execution_count":null,"outputs":[{"output_type":"stream","text":["intrepid it will actually be real news if and when trump does or says anything not stupid <B-Toxic> or idiotic <B-Toxic> so far 97 days in all he does and says are stupid things and thus that is what gets reported\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"VjaT1vt7SsOL","colab":{"base_uri":"https://localhost:8080/","height":1000,"referenced_widgets":["8c071706041e4e20b231ecc46bfa31cd","ef4b7c054b5747fdb83cfd5ff7356444","bd5f2ddf533a403cac455758e53623bc","9c0aafe9ce194c468cc5de18089bcee0","94f6031989a747b4bf2d3fdf3ae529b1","0a3ec455541c4acc9caa3b838a8fd942","85258fddc2ef4eb79284097eec05b004","e1e626430c504aecabb5705091467803","73e38564694043679343dc0a7619cdb8","45b4649476d442629444c94eed994895","d1ebc416b92349b88ae9eb835a61dcc7","b25d132fb94d4d7fb14bb41c816358b4","28b1979667a04f9e903041a26e1e768f","3cb2db92f10344af8cc91f92bbe59284","b5e1a3ec61504d5d8bfd28b6505f4f3a","15dc922d7b44494a84584d010aea3c8c","4e511478791c4564ba4835a8fc587e41","a6befa7072d04c09bfdac3054e39fa2d","6e7f7839edd9437a9478cfc70f720456","a0eb86a6c7504ea5bbca61365e9e8f77","56cbb3828d9747c49e6039affd3efc45","aee2b2c128f14f6e8cd4b11f1f322038","1fff1683756c447ab43dc4a2cb294f3e","f0941c6a15a449759f78977161db4c57","d58c9e4bfae341f4a7a027dd1c1d8632","f5b97522574f44f0af1e89e22b22a5a9","38298765dfa848b491f20889cffc5d74","94f88af192934d54a34c03c42f71e3b2","f974066b9bbc47ab9ae36762fe69c659","cc2ca899f06e403293c856a4380bc299","7519843f1451436281820e30a2b3cd35","0019926329a14584bc193c7753972e7d","63811e0a5582489e8520b2090fe762e9","96172604a79844f98dab21920a5823fb","39c8ee42565a40d0831f1b8ee36775c9","fb0cd47dff1d4ebdb7022e6e6300fc9e","b2107b09e7a9496b8cf0f61814ae5fe0","7486527d0bfb4f879d883b0f21ed4773","732ed96a3f3e482d8edd2b66a15baf8a","c6f55ed9d690470f8a7905494638101c"]},"executionInfo":{"status":"ok","timestamp":1617417128490,"user_tz":-330,"elapsed":29826407,"user":{"displayName":"AMBUJE GUPTA","photoUrl":"","userId":"08374827863947652219"}},"outputId":"aba252fd-cdaa-47d1-9c8e-b2fef3b6d9ba"},"source":["from flair.embeddings import TokenEmbeddings, WordEmbeddings, StackedEmbeddings,CharacterEmbeddings, FlairEmbeddings, TransformerWordEmbeddings, ELMoEmbeddings, BytePairEmbeddings, FastTextEmbeddings\n","\n","# 2. what tag do we want to predict?\n","tag_type = 'ner'\n","\n","# 3. make the tag dictionary from the corpus\n","tag_dictionary = corpus.make_tag_dictionary(tag_type=tag_type)\n","print(tag_dictionary)\n","\n","# 4. initialize embeddings\n","embedding_types = [\n","\n","    WordEmbeddings('glove'),\n","\n","    # comment in this line to use character embeddings\n","    CharacterEmbeddings(),\n","    # ELMoEmbeddings(),\n","\n","    # comment in these lines to use flair embeddings\n","    FlairEmbeddings('multi-forward'),\n","    FlairEmbeddings('multi-backward'),\n","    TransformerWordEmbeddings('bert-large-uncased', layers='-1,-2,-3,-4',fine_tune=True)\n","]\n","\n","embeddings: StackedEmbeddings = StackedEmbeddings(embeddings=embedding_types)\n","\n","# 5. initialize sequence tagger\n","from flair.models import SequenceTagger\n","\n","tagger: SequenceTagger = SequenceTagger(hidden_size=64,\n","                                        embeddings=embeddings,\n","                                        tag_dictionary=tag_dictionary,\n","                                        tag_type=tag_type,\n","                                        use_crf=True)\n","\n","# 6. initialize trainer\n","from flair.trainers import ModelTrainer\n","\n","trainer: ModelTrainer = ModelTrainer(tagger, corpus)\n","\n","# 7. start training\n","trainer.train('/content/drive/MyDrive/Toxic Span Detection - Semeval 2021/1-4-2021/bert-large-glove/resources/taggers/example-ner',\n","              learning_rate=0.001,\n","              mini_batch_size=8,\n","              max_epochs=200,\n","              embeddings_storage_mode='gpu',)"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Dictionary with 6 tags: <unk>, O, B-Toxic, I-Toxic, <START>, <STOP>\n","2021-04-02 18:15:01,397 https://flair.informatik.hu-berlin.de/resources/embeddings/token/glove.gensim.vectors.npy not found in cache, downloading to /tmp/tmpxmuzzh4b\n"],"name":"stdout"},{"output_type":"stream","text":["100%|██████████| 160000128/160000128 [00:06<00:00, 25331741.39B/s]"],"name":"stderr"},{"output_type":"stream","text":["2021-04-02 18:15:08,059 copying /tmp/tmpxmuzzh4b to cache at /root/.flair/embeddings/glove.gensim.vectors.npy\n"],"name":"stdout"},{"output_type":"stream","text":["\n"],"name":"stderr"},{"output_type":"stream","text":["2021-04-02 18:15:08,324 removing temp file /tmp/tmpxmuzzh4b\n","2021-04-02 18:15:09,435 https://flair.informatik.hu-berlin.de/resources/embeddings/token/glove.gensim not found in cache, downloading to /tmp/tmph51i3u52\n"],"name":"stdout"},{"output_type":"stream","text":["100%|██████████| 21494764/21494764 [00:01<00:00, 14863005.79B/s]"],"name":"stderr"},{"output_type":"stream","text":["2021-04-02 18:15:11,197 copying /tmp/tmph51i3u52 to cache at /root/.flair/embeddings/glove.gensim\n","2021-04-02 18:15:11,220 removing temp file /tmp/tmph51i3u52\n"],"name":"stdout"},{"output_type":"stream","text":["\n"],"name":"stderr"},{"output_type":"stream","text":["2021-04-02 18:15:13,237 https://flair.informatik.hu-berlin.de/resources/characters/common_characters not found in cache, downloading to /tmp/tmpvruitjjy\n"],"name":"stdout"},{"output_type":"stream","text":["100%|██████████| 2887/2887 [00:00<00:00, 973310.48B/s]"],"name":"stderr"},{"output_type":"stream","text":["2021-04-02 18:15:13,557 copying /tmp/tmpvruitjjy to cache at /root/.flair/datasets/common_characters\n","2021-04-02 18:15:13,558 removing temp file /tmp/tmpvruitjjy\n"],"name":"stdout"},{"output_type":"stream","text":["\n"],"name":"stderr"},{"output_type":"stream","text":["2021-04-02 18:15:16,838 https://flair.informatik.hu-berlin.de/resources/embeddings/flair/lm-jw300-forward-v0.1.pt not found in cache, downloading to /tmp/tmpy4hdwt4n\n"],"name":"stdout"},{"output_type":"stream","text":["100%|██████████| 172513724/172513724 [00:06<00:00, 26210747.73B/s]"],"name":"stderr"},{"output_type":"stream","text":["2021-04-02 18:15:23,738 copying /tmp/tmpy4hdwt4n to cache at /root/.flair/embeddings/lm-jw300-forward-v0.1.pt\n"],"name":"stdout"},{"output_type":"stream","text":["\n"],"name":"stderr"},{"output_type":"stream","text":["2021-04-02 18:15:24,019 removing temp file /tmp/tmpy4hdwt4n\n","2021-04-02 18:15:25,572 https://flair.informatik.hu-berlin.de/resources/embeddings/flair/lm-jw300-backward-v0.1.pt not found in cache, downloading to /tmp/tmpxrdcm7kl\n"],"name":"stdout"},{"output_type":"stream","text":["100%|██████████| 172513724/172513724 [00:06<00:00, 26273652.69B/s]"],"name":"stderr"},{"output_type":"stream","text":["2021-04-02 18:15:32,473 copying /tmp/tmpxrdcm7kl to cache at /root/.flair/embeddings/lm-jw300-backward-v0.1.pt\n"],"name":"stdout"},{"output_type":"stream","text":["\n"],"name":"stderr"},{"output_type":"stream","text":["2021-04-02 18:15:32,811 removing temp file /tmp/tmpxrdcm7kl\n"],"name":"stdout"},{"output_type":"display_data","data":{"application/vnd.jupyter.widget-view+json":{"model_id":"8c071706041e4e20b231ecc46bfa31cd","version_minor":0,"version_major":2},"text/plain":["HBox(children=(FloatProgress(value=0.0, description='Downloading', max=434.0, style=ProgressStyle(description_…"]},"metadata":{"tags":[]}},{"output_type":"stream","text":["\n"],"name":"stdout"},{"output_type":"display_data","data":{"application/vnd.jupyter.widget-view+json":{"model_id":"73e38564694043679343dc0a7619cdb8","version_minor":0,"version_major":2},"text/plain":["HBox(children=(FloatProgress(value=0.0, description='Downloading', max=231508.0, style=ProgressStyle(descripti…"]},"metadata":{"tags":[]}},{"output_type":"stream","text":["\n"],"name":"stdout"},{"output_type":"display_data","data":{"application/vnd.jupyter.widget-view+json":{"model_id":"4e511478791c4564ba4835a8fc587e41","version_minor":0,"version_major":2},"text/plain":["HBox(children=(FloatProgress(value=0.0, description='Downloading', max=466062.0, style=ProgressStyle(descripti…"]},"metadata":{"tags":[]}},{"output_type":"stream","text":["\n"],"name":"stdout"},{"output_type":"display_data","data":{"application/vnd.jupyter.widget-view+json":{"model_id":"d58c9e4bfae341f4a7a027dd1c1d8632","version_minor":0,"version_major":2},"text/plain":["HBox(children=(FloatProgress(value=0.0, description='Downloading', max=28.0, style=ProgressStyle(description_w…"]},"metadata":{"tags":[]}},{"output_type":"stream","text":["\n"],"name":"stdout"},{"output_type":"display_data","data":{"application/vnd.jupyter.widget-view+json":{"model_id":"63811e0a5582489e8520b2090fe762e9","version_minor":0,"version_major":2},"text/plain":["HBox(children=(FloatProgress(value=0.0, description='Downloading', max=1344997306.0, style=ProgressStyle(descr…"]},"metadata":{"tags":[]}},{"output_type":"stream","text":["\n","2021-04-02 18:16:21,090 ----------------------------------------------------------------------------------------------------\n","2021-04-02 18:16:21,099 Model: \"SequenceTagger(\n","  (embeddings): StackedEmbeddings(\n","    (list_embedding_0): WordEmbeddings('glove')\n","    (list_embedding_1): CharacterEmbeddings(\n","      (char_embedding): Embedding(275, 25)\n","      (char_rnn): LSTM(25, 25, bidirectional=True)\n","    )\n","    (list_embedding_2): FlairEmbeddings(\n","      (lm): LanguageModel(\n","        (drop): Dropout(p=0.1, inplace=False)\n","        (encoder): Embedding(11854, 100)\n","        (rnn): LSTM(100, 2048)\n","        (decoder): Linear(in_features=2048, out_features=11854, bias=True)\n","      )\n","    )\n","    (list_embedding_3): FlairEmbeddings(\n","      (lm): LanguageModel(\n","        (drop): Dropout(p=0.1, inplace=False)\n","        (encoder): Embedding(11854, 100)\n","        (rnn): LSTM(100, 2048)\n","        (decoder): Linear(in_features=2048, out_features=11854, bias=True)\n","      )\n","    )\n","    (list_embedding_4): TransformerWordEmbeddings(\n","      (model): BertModel(\n","        (embeddings): BertEmbeddings(\n","          (word_embeddings): Embedding(30522, 1024, padding_idx=0)\n","          (position_embeddings): Embedding(512, 1024)\n","          (token_type_embeddings): Embedding(2, 1024)\n","          (LayerNorm): LayerNorm((1024,), eps=1e-12, elementwise_affine=True)\n","          (dropout): Dropout(p=0.1, inplace=False)\n","        )\n","        (encoder): BertEncoder(\n","          (layer): ModuleList(\n","            (0): BertLayer(\n","              (attention): BertAttention(\n","                (self): BertSelfAttention(\n","                  (query): Linear(in_features=1024, out_features=1024, bias=True)\n","                  (key): Linear(in_features=1024, out_features=1024, bias=True)\n","                  (value): Linear(in_features=1024, out_features=1024, bias=True)\n","                  (dropout): Dropout(p=0.1, inplace=False)\n","                )\n","                (output): BertSelfOutput(\n","                  (dense): Linear(in_features=1024, out_features=1024, bias=True)\n","                  (LayerNorm): LayerNorm((1024,), eps=1e-12, elementwise_affine=True)\n","                  (dropout): Dropout(p=0.1, inplace=False)\n","                )\n","              )\n","              (intermediate): BertIntermediate(\n","                (dense): Linear(in_features=1024, out_features=4096, bias=True)\n","              )\n","              (output): BertOutput(\n","                (dense): Linear(in_features=4096, out_features=1024, bias=True)\n","                (LayerNorm): LayerNorm((1024,), eps=1e-12, elementwise_affine=True)\n","                (dropout): Dropout(p=0.1, inplace=False)\n","              )\n","            )\n","            (1): BertLayer(\n","              (attention): BertAttention(\n","                (self): BertSelfAttention(\n","                  (query): Linear(in_features=1024, out_features=1024, bias=True)\n","                  (key): Linear(in_features=1024, out_features=1024, bias=True)\n","                  (value): Linear(in_features=1024, out_features=1024, bias=True)\n","                  (dropout): Dropout(p=0.1, inplace=False)\n","                )\n","                (output): BertSelfOutput(\n","                  (dense): Linear(in_features=1024, out_features=1024, bias=True)\n","                  (LayerNorm): LayerNorm((1024,), eps=1e-12, elementwise_affine=True)\n","                  (dropout): Dropout(p=0.1, inplace=False)\n","                )\n","              )\n","              (intermediate): BertIntermediate(\n","                (dense): Linear(in_features=1024, out_features=4096, bias=True)\n","              )\n","              (output): BertOutput(\n","                (dense): Linear(in_features=4096, out_features=1024, bias=True)\n","                (LayerNorm): LayerNorm((1024,), eps=1e-12, elementwise_affine=True)\n","                (dropout): Dropout(p=0.1, inplace=False)\n","              )\n","            )\n","            (2): BertLayer(\n","              (attention): BertAttention(\n","                (self): BertSelfAttention(\n","                  (query): Linear(in_features=1024, out_features=1024, bias=True)\n","                  (key): Linear(in_features=1024, out_features=1024, bias=True)\n","                  (value): Linear(in_features=1024, out_features=1024, bias=True)\n","                  (dropout): Dropout(p=0.1, inplace=False)\n","                )\n","                (output): BertSelfOutput(\n","                  (dense): Linear(in_features=1024, out_features=1024, bias=True)\n","                  (LayerNorm): LayerNorm((1024,), eps=1e-12, elementwise_affine=True)\n","                  (dropout): Dropout(p=0.1, inplace=False)\n","                )\n","              )\n","              (intermediate): BertIntermediate(\n","                (dense): Linear(in_features=1024, out_features=4096, bias=True)\n","              )\n","              (output): BertOutput(\n","                (dense): Linear(in_features=4096, out_features=1024, bias=True)\n","                (LayerNorm): LayerNorm((1024,), eps=1e-12, elementwise_affine=True)\n","                (dropout): Dropout(p=0.1, inplace=False)\n","              )\n","            )\n","            (3): BertLayer(\n","              (attention): BertAttention(\n","                (self): BertSelfAttention(\n","                  (query): Linear(in_features=1024, out_features=1024, bias=True)\n","                  (key): Linear(in_features=1024, out_features=1024, bias=True)\n","                  (value): Linear(in_features=1024, out_features=1024, bias=True)\n","                  (dropout): Dropout(p=0.1, inplace=False)\n","                )\n","                (output): BertSelfOutput(\n","                  (dense): Linear(in_features=1024, out_features=1024, bias=True)\n","                  (LayerNorm): LayerNorm((1024,), eps=1e-12, elementwise_affine=True)\n","                  (dropout): Dropout(p=0.1, inplace=False)\n","                )\n","              )\n","              (intermediate): BertIntermediate(\n","                (dense): Linear(in_features=1024, out_features=4096, bias=True)\n","              )\n","              (output): BertOutput(\n","                (dense): Linear(in_features=4096, out_features=1024, bias=True)\n","                (LayerNorm): LayerNorm((1024,), eps=1e-12, elementwise_affine=True)\n","                (dropout): Dropout(p=0.1, inplace=False)\n","              )\n","            )\n","            (4): BertLayer(\n","              (attention): BertAttention(\n","                (self): BertSelfAttention(\n","                  (query): Linear(in_features=1024, out_features=1024, bias=True)\n","                  (key): Linear(in_features=1024, out_features=1024, bias=True)\n","                  (value): Linear(in_features=1024, out_features=1024, bias=True)\n","                  (dropout): Dropout(p=0.1, inplace=False)\n","                )\n","                (output): BertSelfOutput(\n","                  (dense): Linear(in_features=1024, out_features=1024, bias=True)\n","                  (LayerNorm): LayerNorm((1024,), eps=1e-12, elementwise_affine=True)\n","                  (dropout): Dropout(p=0.1, inplace=False)\n","                )\n","              )\n","              (intermediate): BertIntermediate(\n","                (dense): Linear(in_features=1024, out_features=4096, bias=True)\n","              )\n","              (output): BertOutput(\n","                (dense): Linear(in_features=4096, out_features=1024, bias=True)\n","                (LayerNorm): LayerNorm((1024,), eps=1e-12, elementwise_affine=True)\n","                (dropout): Dropout(p=0.1, inplace=False)\n","              )\n","            )\n","            (5): BertLayer(\n","              (attention): BertAttention(\n","                (self): BertSelfAttention(\n","                  (query): Linear(in_features=1024, out_features=1024, bias=True)\n","                  (key): Linear(in_features=1024, out_features=1024, bias=True)\n","                  (value): Linear(in_features=1024, out_features=1024, bias=True)\n","                  (dropout): Dropout(p=0.1, inplace=False)\n","                )\n","                (output): BertSelfOutput(\n","                  (dense): Linear(in_features=1024, out_features=1024, bias=True)\n","                  (LayerNorm): LayerNorm((1024,), eps=1e-12, elementwise_affine=True)\n","                  (dropout): Dropout(p=0.1, inplace=False)\n","                )\n","              )\n","              (intermediate): BertIntermediate(\n","                (dense): Linear(in_features=1024, out_features=4096, bias=True)\n","              )\n","              (output): BertOutput(\n","                (dense): Linear(in_features=4096, out_features=1024, bias=True)\n","                (LayerNorm): LayerNorm((1024,), eps=1e-12, elementwise_affine=True)\n","                (dropout): Dropout(p=0.1, inplace=False)\n","              )\n","            )\n","            (6): BertLayer(\n","              (attention): BertAttention(\n","                (self): BertSelfAttention(\n","                  (query): Linear(in_features=1024, out_features=1024, bias=True)\n","                  (key): Linear(in_features=1024, out_features=1024, bias=True)\n","                  (value): Linear(in_features=1024, out_features=1024, bias=True)\n","                  (dropout): Dropout(p=0.1, inplace=False)\n","                )\n","                (output): BertSelfOutput(\n","                  (dense): Linear(in_features=1024, out_features=1024, bias=True)\n","                  (LayerNorm): LayerNorm((1024,), eps=1e-12, elementwise_affine=True)\n","                  (dropout): Dropout(p=0.1, inplace=False)\n","                )\n","              )\n","              (intermediate): BertIntermediate(\n","                (dense): Linear(in_features=1024, out_features=4096, bias=True)\n","              )\n","              (output): BertOutput(\n","                (dense): Linear(in_features=4096, out_features=1024, bias=True)\n","                (LayerNorm): LayerNorm((1024,), eps=1e-12, elementwise_affine=True)\n","                (dropout): Dropout(p=0.1, inplace=False)\n","              )\n","            )\n","            (7): BertLayer(\n","              (attention): BertAttention(\n","                (self): BertSelfAttention(\n","                  (query): Linear(in_features=1024, out_features=1024, bias=True)\n","                  (key): Linear(in_features=1024, out_features=1024, bias=True)\n","                  (value): Linear(in_features=1024, out_features=1024, bias=True)\n","                  (dropout): Dropout(p=0.1, inplace=False)\n","                )\n","                (output): BertSelfOutput(\n","                  (dense): Linear(in_features=1024, out_features=1024, bias=True)\n","                  (LayerNorm): LayerNorm((1024,), eps=1e-12, elementwise_affine=True)\n","                  (dropout): Dropout(p=0.1, inplace=False)\n","                )\n","              )\n","              (intermediate): BertIntermediate(\n","                (dense): Linear(in_features=1024, out_features=4096, bias=True)\n","              )\n","              (output): BertOutput(\n","                (dense): Linear(in_features=4096, out_features=1024, bias=True)\n","                (LayerNorm): LayerNorm((1024,), eps=1e-12, elementwise_affine=True)\n","                (dropout): Dropout(p=0.1, inplace=False)\n","              )\n","            )\n","            (8): BertLayer(\n","              (attention): BertAttention(\n","                (self): BertSelfAttention(\n","                  (query): Linear(in_features=1024, out_features=1024, bias=True)\n","                  (key): Linear(in_features=1024, out_features=1024, bias=True)\n","                  (value): Linear(in_features=1024, out_features=1024, bias=True)\n","                  (dropout): Dropout(p=0.1, inplace=False)\n","                )\n","                (output): BertSelfOutput(\n","                  (dense): Linear(in_features=1024, out_features=1024, bias=True)\n","                  (LayerNorm): LayerNorm((1024,), eps=1e-12, elementwise_affine=True)\n","                  (dropout): Dropout(p=0.1, inplace=False)\n","                )\n","              )\n","              (intermediate): BertIntermediate(\n","                (dense): Linear(in_features=1024, out_features=4096, bias=True)\n","              )\n","              (output): BertOutput(\n","                (dense): Linear(in_features=4096, out_features=1024, bias=True)\n","                (LayerNorm): LayerNorm((1024,), eps=1e-12, elementwise_affine=True)\n","                (dropout): Dropout(p=0.1, inplace=False)\n","              )\n","            )\n","            (9): BertLayer(\n","              (attention): BertAttention(\n","                (self): BertSelfAttention(\n","                  (query): Linear(in_features=1024, out_features=1024, bias=True)\n","                  (key): Linear(in_features=1024, out_features=1024, bias=True)\n","                  (value): Linear(in_features=1024, out_features=1024, bias=True)\n","                  (dropout): Dropout(p=0.1, inplace=False)\n","                )\n","                (output): BertSelfOutput(\n","                  (dense): Linear(in_features=1024, out_features=1024, bias=True)\n","                  (LayerNorm): LayerNorm((1024,), eps=1e-12, elementwise_affine=True)\n","                  (dropout): Dropout(p=0.1, inplace=False)\n","                )\n","              )\n","              (intermediate): BertIntermediate(\n","                (dense): Linear(in_features=1024, out_features=4096, bias=True)\n","              )\n","              (output): BertOutput(\n","                (dense): Linear(in_features=4096, out_features=1024, bias=True)\n","                (LayerNorm): LayerNorm((1024,), eps=1e-12, elementwise_affine=True)\n","                (dropout): Dropout(p=0.1, inplace=False)\n","              )\n","            )\n","            (10): BertLayer(\n","              (attention): BertAttention(\n","                (self): BertSelfAttention(\n","                  (query): Linear(in_features=1024, out_features=1024, bias=True)\n","                  (key): Linear(in_features=1024, out_features=1024, bias=True)\n","                  (value): Linear(in_features=1024, out_features=1024, bias=True)\n","                  (dropout): Dropout(p=0.1, inplace=False)\n","                )\n","                (output): BertSelfOutput(\n","                  (dense): Linear(in_features=1024, out_features=1024, bias=True)\n","                  (LayerNorm): LayerNorm((1024,), eps=1e-12, elementwise_affine=True)\n","                  (dropout): Dropout(p=0.1, inplace=False)\n","                )\n","              )\n","              (intermediate): BertIntermediate(\n","                (dense): Linear(in_features=1024, out_features=4096, bias=True)\n","              )\n","              (output): BertOutput(\n","                (dense): Linear(in_features=4096, out_features=1024, bias=True)\n","                (LayerNorm): LayerNorm((1024,), eps=1e-12, elementwise_affine=True)\n","                (dropout): Dropout(p=0.1, inplace=False)\n","              )\n","            )\n","            (11): BertLayer(\n","              (attention): BertAttention(\n","                (self): BertSelfAttention(\n","                  (query): Linear(in_features=1024, out_features=1024, bias=True)\n","                  (key): Linear(in_features=1024, out_features=1024, bias=True)\n","                  (value): Linear(in_features=1024, out_features=1024, bias=True)\n","                  (dropout): Dropout(p=0.1, inplace=False)\n","                )\n","                (output): BertSelfOutput(\n","                  (dense): Linear(in_features=1024, out_features=1024, bias=True)\n","                  (LayerNorm): LayerNorm((1024,), eps=1e-12, elementwise_affine=True)\n","                  (dropout): Dropout(p=0.1, inplace=False)\n","                )\n","              )\n","              (intermediate): BertIntermediate(\n","                (dense): Linear(in_features=1024, out_features=4096, bias=True)\n","              )\n","              (output): BertOutput(\n","                (dense): Linear(in_features=4096, out_features=1024, bias=True)\n","                (LayerNorm): LayerNorm((1024,), eps=1e-12, elementwise_affine=True)\n","                (dropout): Dropout(p=0.1, inplace=False)\n","              )\n","            )\n","            (12): BertLayer(\n","              (attention): BertAttention(\n","                (self): BertSelfAttention(\n","                  (query): Linear(in_features=1024, out_features=1024, bias=True)\n","                  (key): Linear(in_features=1024, out_features=1024, bias=True)\n","                  (value): Linear(in_features=1024, out_features=1024, bias=True)\n","                  (dropout): Dropout(p=0.1, inplace=False)\n","                )\n","                (output): BertSelfOutput(\n","                  (dense): Linear(in_features=1024, out_features=1024, bias=True)\n","                  (LayerNorm): LayerNorm((1024,), eps=1e-12, elementwise_affine=True)\n","                  (dropout): Dropout(p=0.1, inplace=False)\n","                )\n","              )\n","              (intermediate): BertIntermediate(\n","                (dense): Linear(in_features=1024, out_features=4096, bias=True)\n","              )\n","              (output): BertOutput(\n","                (dense): Linear(in_features=4096, out_features=1024, bias=True)\n","                (LayerNorm): LayerNorm((1024,), eps=1e-12, elementwise_affine=True)\n","                (dropout): Dropout(p=0.1, inplace=False)\n","              )\n","            )\n","            (13): BertLayer(\n","              (attention): BertAttention(\n","                (self): BertSelfAttention(\n","                  (query): Linear(in_features=1024, out_features=1024, bias=True)\n","                  (key): Linear(in_features=1024, out_features=1024, bias=True)\n","                  (value): Linear(in_features=1024, out_features=1024, bias=True)\n","                  (dropout): Dropout(p=0.1, inplace=False)\n","                )\n","                (output): BertSelfOutput(\n","                  (dense): Linear(in_features=1024, out_features=1024, bias=True)\n","                  (LayerNorm): LayerNorm((1024,), eps=1e-12, elementwise_affine=True)\n","                  (dropout): Dropout(p=0.1, inplace=False)\n","                )\n","              )\n","              (intermediate): BertIntermediate(\n","                (dense): Linear(in_features=1024, out_features=4096, bias=True)\n","              )\n","              (output): BertOutput(\n","                (dense): Linear(in_features=4096, out_features=1024, bias=True)\n","                (LayerNorm): LayerNorm((1024,), eps=1e-12, elementwise_affine=True)\n","                (dropout): Dropout(p=0.1, inplace=False)\n","              )\n","            )\n","            (14): BertLayer(\n","              (attention): BertAttention(\n","                (self): BertSelfAttention(\n","                  (query): Linear(in_features=1024, out_features=1024, bias=True)\n","                  (key): Linear(in_features=1024, out_features=1024, bias=True)\n","                  (value): Linear(in_features=1024, out_features=1024, bias=True)\n","                  (dropout): Dropout(p=0.1, inplace=False)\n","                )\n","                (output): BertSelfOutput(\n","                  (dense): Linear(in_features=1024, out_features=1024, bias=True)\n","                  (LayerNorm): LayerNorm((1024,), eps=1e-12, elementwise_affine=True)\n","                  (dropout): Dropout(p=0.1, inplace=False)\n","                )\n","              )\n","              (intermediate): BertIntermediate(\n","                (dense): Linear(in_features=1024, out_features=4096, bias=True)\n","              )\n","              (output): BertOutput(\n","                (dense): Linear(in_features=4096, out_features=1024, bias=True)\n","                (LayerNorm): LayerNorm((1024,), eps=1e-12, elementwise_affine=True)\n","                (dropout): Dropout(p=0.1, inplace=False)\n","              )\n","            )\n","            (15): BertLayer(\n","              (attention): BertAttention(\n","                (self): BertSelfAttention(\n","                  (query): Linear(in_features=1024, out_features=1024, bias=True)\n","                  (key): Linear(in_features=1024, out_features=1024, bias=True)\n","                  (value): Linear(in_features=1024, out_features=1024, bias=True)\n","                  (dropout): Dropout(p=0.1, inplace=False)\n","                )\n","                (output): BertSelfOutput(\n","                  (dense): Linear(in_features=1024, out_features=1024, bias=True)\n","                  (LayerNorm): LayerNorm((1024,), eps=1e-12, elementwise_affine=True)\n","                  (dropout): Dropout(p=0.1, inplace=False)\n","                )\n","              )\n","              (intermediate): BertIntermediate(\n","                (dense): Linear(in_features=1024, out_features=4096, bias=True)\n","              )\n","              (output): BertOutput(\n","                (dense): Linear(in_features=4096, out_features=1024, bias=True)\n","                (LayerNorm): LayerNorm((1024,), eps=1e-12, elementwise_affine=True)\n","                (dropout): Dropout(p=0.1, inplace=False)\n","              )\n","            )\n","            (16): BertLayer(\n","              (attention): BertAttention(\n","                (self): BertSelfAttention(\n","                  (query): Linear(in_features=1024, out_features=1024, bias=True)\n","                  (key): Linear(in_features=1024, out_features=1024, bias=True)\n","                  (value): Linear(in_features=1024, out_features=1024, bias=True)\n","                  (dropout): Dropout(p=0.1, inplace=False)\n","                )\n","                (output): BertSelfOutput(\n","                  (dense): Linear(in_features=1024, out_features=1024, bias=True)\n","                  (LayerNorm): LayerNorm((1024,), eps=1e-12, elementwise_affine=True)\n","                  (dropout): Dropout(p=0.1, inplace=False)\n","                )\n","              )\n","              (intermediate): BertIntermediate(\n","                (dense): Linear(in_features=1024, out_features=4096, bias=True)\n","              )\n","              (output): BertOutput(\n","                (dense): Linear(in_features=4096, out_features=1024, bias=True)\n","                (LayerNorm): LayerNorm((1024,), eps=1e-12, elementwise_affine=True)\n","                (dropout): Dropout(p=0.1, inplace=False)\n","              )\n","            )\n","            (17): BertLayer(\n","              (attention): BertAttention(\n","                (self): BertSelfAttention(\n","                  (query): Linear(in_features=1024, out_features=1024, bias=True)\n","                  (key): Linear(in_features=1024, out_features=1024, bias=True)\n","                  (value): Linear(in_features=1024, out_features=1024, bias=True)\n","                  (dropout): Dropout(p=0.1, inplace=False)\n","                )\n","                (output): BertSelfOutput(\n","                  (dense): Linear(in_features=1024, out_features=1024, bias=True)\n","                  (LayerNorm): LayerNorm((1024,), eps=1e-12, elementwise_affine=True)\n","                  (dropout): Dropout(p=0.1, inplace=False)\n","                )\n","              )\n","              (intermediate): BertIntermediate(\n","                (dense): Linear(in_features=1024, out_features=4096, bias=True)\n","              )\n","              (output): BertOutput(\n","                (dense): Linear(in_features=4096, out_features=1024, bias=True)\n","                (LayerNorm): LayerNorm((1024,), eps=1e-12, elementwise_affine=True)\n","                (dropout): Dropout(p=0.1, inplace=False)\n","              )\n","            )\n","            (18): BertLayer(\n","              (attention): BertAttention(\n","                (self): BertSelfAttention(\n","                  (query): Linear(in_features=1024, out_features=1024, bias=True)\n","                  (key): Linear(in_features=1024, out_features=1024, bias=True)\n","                  (value): Linear(in_features=1024, out_features=1024, bias=True)\n","                  (dropout): Dropout(p=0.1, inplace=False)\n","                )\n","                (output): BertSelfOutput(\n","                  (dense): Linear(in_features=1024, out_features=1024, bias=True)\n","                  (LayerNorm): LayerNorm((1024,), eps=1e-12, elementwise_affine=True)\n","                  (dropout): Dropout(p=0.1, inplace=False)\n","                )\n","              )\n","              (intermediate): BertIntermediate(\n","                (dense): Linear(in_features=1024, out_features=4096, bias=True)\n","              )\n","              (output): BertOutput(\n","                (dense): Linear(in_features=4096, out_features=1024, bias=True)\n","                (LayerNorm): LayerNorm((1024,), eps=1e-12, elementwise_affine=True)\n","                (dropout): Dropout(p=0.1, inplace=False)\n","              )\n","            )\n","            (19): BertLayer(\n","              (attention): BertAttention(\n","                (self): BertSelfAttention(\n","                  (query): Linear(in_features=1024, out_features=1024, bias=True)\n","                  (key): Linear(in_features=1024, out_features=1024, bias=True)\n","                  (value): Linear(in_features=1024, out_features=1024, bias=True)\n","                  (dropout): Dropout(p=0.1, inplace=False)\n","                )\n","                (output): BertSelfOutput(\n","                  (dense): Linear(in_features=1024, out_features=1024, bias=True)\n","                  (LayerNorm): LayerNorm((1024,), eps=1e-12, elementwise_affine=True)\n","                  (dropout): Dropout(p=0.1, inplace=False)\n","                )\n","              )\n","              (intermediate): BertIntermediate(\n","                (dense): Linear(in_features=1024, out_features=4096, bias=True)\n","              )\n","              (output): BertOutput(\n","                (dense): Linear(in_features=4096, out_features=1024, bias=True)\n","                (LayerNorm): LayerNorm((1024,), eps=1e-12, elementwise_affine=True)\n","                (dropout): Dropout(p=0.1, inplace=False)\n","              )\n","            )\n","            (20): BertLayer(\n","              (attention): BertAttention(\n","                (self): BertSelfAttention(\n","                  (query): Linear(in_features=1024, out_features=1024, bias=True)\n","                  (key): Linear(in_features=1024, out_features=1024, bias=True)\n","                  (value): Linear(in_features=1024, out_features=1024, bias=True)\n","                  (dropout): Dropout(p=0.1, inplace=False)\n","                )\n","                (output): BertSelfOutput(\n","                  (dense): Linear(in_features=1024, out_features=1024, bias=True)\n","                  (LayerNorm): LayerNorm((1024,), eps=1e-12, elementwise_affine=True)\n","                  (dropout): Dropout(p=0.1, inplace=False)\n","                )\n","              )\n","              (intermediate): BertIntermediate(\n","                (dense): Linear(in_features=1024, out_features=4096, bias=True)\n","              )\n","              (output): BertOutput(\n","                (dense): Linear(in_features=4096, out_features=1024, bias=True)\n","                (LayerNorm): LayerNorm((1024,), eps=1e-12, elementwise_affine=True)\n","                (dropout): Dropout(p=0.1, inplace=False)\n","              )\n","            )\n","            (21): BertLayer(\n","              (attention): BertAttention(\n","                (self): BertSelfAttention(\n","                  (query): Linear(in_features=1024, out_features=1024, bias=True)\n","                  (key): Linear(in_features=1024, out_features=1024, bias=True)\n","                  (value): Linear(in_features=1024, out_features=1024, bias=True)\n","                  (dropout): Dropout(p=0.1, inplace=False)\n","                )\n","                (output): BertSelfOutput(\n","                  (dense): Linear(in_features=1024, out_features=1024, bias=True)\n","                  (LayerNorm): LayerNorm((1024,), eps=1e-12, elementwise_affine=True)\n","                  (dropout): Dropout(p=0.1, inplace=False)\n","                )\n","              )\n","              (intermediate): BertIntermediate(\n","                (dense): Linear(in_features=1024, out_features=4096, bias=True)\n","              )\n","              (output): BertOutput(\n","                (dense): Linear(in_features=4096, out_features=1024, bias=True)\n","                (LayerNorm): LayerNorm((1024,), eps=1e-12, elementwise_affine=True)\n","                (dropout): Dropout(p=0.1, inplace=False)\n","              )\n","            )\n","            (22): BertLayer(\n","              (attention): BertAttention(\n","                (self): BertSelfAttention(\n","                  (query): Linear(in_features=1024, out_features=1024, bias=True)\n","                  (key): Linear(in_features=1024, out_features=1024, bias=True)\n","                  (value): Linear(in_features=1024, out_features=1024, bias=True)\n","                  (dropout): Dropout(p=0.1, inplace=False)\n","                )\n","                (output): BertSelfOutput(\n","                  (dense): Linear(in_features=1024, out_features=1024, bias=True)\n","                  (LayerNorm): LayerNorm((1024,), eps=1e-12, elementwise_affine=True)\n","                  (dropout): Dropout(p=0.1, inplace=False)\n","                )\n","              )\n","              (intermediate): BertIntermediate(\n","                (dense): Linear(in_features=1024, out_features=4096, bias=True)\n","              )\n","              (output): BertOutput(\n","                (dense): Linear(in_features=4096, out_features=1024, bias=True)\n","                (LayerNorm): LayerNorm((1024,), eps=1e-12, elementwise_affine=True)\n","                (dropout): Dropout(p=0.1, inplace=False)\n","              )\n","            )\n","            (23): BertLayer(\n","              (attention): BertAttention(\n","                (self): BertSelfAttention(\n","                  (query): Linear(in_features=1024, out_features=1024, bias=True)\n","                  (key): Linear(in_features=1024, out_features=1024, bias=True)\n","                  (value): Linear(in_features=1024, out_features=1024, bias=True)\n","                  (dropout): Dropout(p=0.1, inplace=False)\n","                )\n","                (output): BertSelfOutput(\n","                  (dense): Linear(in_features=1024, out_features=1024, bias=True)\n","                  (LayerNorm): LayerNorm((1024,), eps=1e-12, elementwise_affine=True)\n","                  (dropout): Dropout(p=0.1, inplace=False)\n","                )\n","              )\n","              (intermediate): BertIntermediate(\n","                (dense): Linear(in_features=1024, out_features=4096, bias=True)\n","              )\n","              (output): BertOutput(\n","                (dense): Linear(in_features=4096, out_features=1024, bias=True)\n","                (LayerNorm): LayerNorm((1024,), eps=1e-12, elementwise_affine=True)\n","                (dropout): Dropout(p=0.1, inplace=False)\n","              )\n","            )\n","          )\n","        )\n","        (pooler): BertPooler(\n","          (dense): Linear(in_features=1024, out_features=1024, bias=True)\n","          (activation): Tanh()\n","        )\n","      )\n","    )\n","  )\n","  (word_dropout): WordDropout(p=0.05)\n","  (locked_dropout): LockedDropout(p=0.5)\n","  (embedding2nn): Linear(in_features=5270, out_features=5270, bias=True)\n","  (rnn): LSTM(5270, 64, batch_first=True, bidirectional=True)\n","  (linear): Linear(in_features=128, out_features=6, bias=True)\n","  (beta): 1.0\n","  (weights): None\n","  (weight_tensor) None\n",")\"\n","2021-04-02 18:16:21,110 ----------------------------------------------------------------------------------------------------\n","2021-04-02 18:16:21,116 Corpus: \"Corpus: 4806 train + 1042 dev + 534 test sentences\"\n","2021-04-02 18:16:21,120 ----------------------------------------------------------------------------------------------------\n","2021-04-02 18:16:21,121 Parameters:\n","2021-04-02 18:16:21,128  - learning_rate: \"0.001\"\n","2021-04-02 18:16:21,132  - mini_batch_size: \"8\"\n","2021-04-02 18:16:21,135  - patience: \"3\"\n","2021-04-02 18:16:21,136  - anneal_factor: \"0.5\"\n","2021-04-02 18:16:21,138  - max_epochs: \"200\"\n","2021-04-02 18:16:21,140  - shuffle: \"True\"\n","2021-04-02 18:16:21,141  - train_with_dev: \"False\"\n","2021-04-02 18:16:21,143  - batch_growth_annealing: \"False\"\n","2021-04-02 18:16:21,144 ----------------------------------------------------------------------------------------------------\n","2021-04-02 18:16:21,146 Model training base path: \"/content/drive/MyDrive/Toxic Span Detection - Semeval 2021/1-4-2021/bert-large-glove/resources/taggers/example-ner\"\n","2021-04-02 18:16:21,152 ----------------------------------------------------------------------------------------------------\n","2021-04-02 18:16:21,156 Device: cuda:0\n","2021-04-02 18:16:21,157 ----------------------------------------------------------------------------------------------------\n","2021-04-02 18:16:21,158 Embeddings storage mode: gpu\n","2021-04-02 18:16:21,402 ----------------------------------------------------------------------------------------------------\n","2021-04-02 18:18:00,920 epoch 1 - iter 60/601 - loss 11.70135368 - samples/sec: 4.82 - lr: 0.001000\n","2021-04-02 18:19:37,478 epoch 1 - iter 120/601 - loss 10.44203703 - samples/sec: 4.97 - lr: 0.001000\n","2021-04-02 18:21:19,583 epoch 1 - iter 180/601 - loss 10.29564863 - samples/sec: 4.70 - lr: 0.001000\n","2021-04-02 18:23:02,400 epoch 1 - iter 240/601 - loss 9.76712064 - samples/sec: 4.67 - lr: 0.001000\n","2021-04-02 18:24:41,928 epoch 1 - iter 300/601 - loss 9.35842747 - samples/sec: 4.82 - lr: 0.001000\n","2021-04-02 18:26:21,734 epoch 1 - iter 360/601 - loss 9.07665312 - samples/sec: 4.81 - lr: 0.001000\n","2021-04-02 18:28:01,909 epoch 1 - iter 420/601 - loss 8.76680089 - samples/sec: 4.79 - lr: 0.001000\n","2021-04-02 18:29:34,323 epoch 1 - iter 480/601 - loss 8.55709322 - samples/sec: 5.19 - lr: 0.001000\n","2021-04-02 18:31:14,659 epoch 1 - iter 540/601 - loss 8.33965929 - samples/sec: 4.78 - lr: 0.001000\n","2021-04-02 18:32:49,409 epoch 1 - iter 600/601 - loss 8.21448740 - samples/sec: 5.07 - lr: 0.001000\n","2021-04-02 18:32:50,670 ----------------------------------------------------------------------------------------------------\n","2021-04-02 18:32:50,674 EPOCH 1 done: loss 8.2110 - lr 0.0010000\n","2021-04-02 18:34:37,774 DEV : loss 5.624788761138916 - score 0.2633\n","2021-04-02 18:34:37,800 BAD EPOCHS (no improvement): 0\n","saving best model\n","2021-04-02 18:35:46,366 ----------------------------------------------------------------------------------------------------\n","2021-04-02 18:36:59,223 epoch 2 - iter 60/601 - loss 5.97111235 - samples/sec: 6.59 - lr: 0.001000\n","2021-04-02 18:38:09,541 epoch 2 - iter 120/601 - loss 6.27282777 - samples/sec: 6.83 - lr: 0.001000\n","2021-04-02 18:39:17,914 epoch 2 - iter 180/601 - loss 6.08418493 - samples/sec: 7.02 - lr: 0.001000\n","2021-04-02 18:40:28,029 epoch 2 - iter 240/601 - loss 6.33485044 - samples/sec: 6.85 - lr: 0.001000\n","2021-04-02 18:41:41,625 epoch 2 - iter 300/601 - loss 6.27313038 - samples/sec: 6.52 - lr: 0.001000\n","2021-04-02 18:42:52,298 epoch 2 - iter 360/601 - loss 6.30649724 - samples/sec: 6.79 - lr: 0.001000\n","2021-04-02 18:43:58,859 epoch 2 - iter 420/601 - loss 6.17645209 - samples/sec: 7.21 - lr: 0.001000\n","2021-04-02 18:45:08,166 epoch 2 - iter 480/601 - loss 6.13738154 - samples/sec: 6.93 - lr: 0.001000\n","2021-04-02 18:46:13,951 epoch 2 - iter 540/601 - loss 6.03056849 - samples/sec: 7.30 - lr: 0.001000\n","2021-04-02 18:47:23,177 epoch 2 - iter 600/601 - loss 6.03716119 - samples/sec: 6.93 - lr: 0.001000\n","2021-04-02 18:47:24,397 ----------------------------------------------------------------------------------------------------\n","2021-04-02 18:47:24,401 EPOCH 2 done: loss 6.0446 - lr 0.0010000\n","2021-04-02 18:48:07,021 DEV : loss 4.71959114074707 - score 0.4112\n","2021-04-02 18:48:07,043 BAD EPOCHS (no improvement): 0\n","saving best model\n","2021-04-02 18:48:32,183 ----------------------------------------------------------------------------------------------------\n","2021-04-02 18:49:46,785 epoch 3 - iter 60/601 - loss 5.62491772 - samples/sec: 6.44 - lr: 0.001000\n","2021-04-02 18:51:03,201 epoch 3 - iter 120/601 - loss 5.48387049 - samples/sec: 6.28 - lr: 0.001000\n","2021-04-02 18:52:12,098 epoch 3 - iter 180/601 - loss 5.36420143 - samples/sec: 6.97 - lr: 0.001000\n","2021-04-02 18:53:21,917 epoch 3 - iter 240/601 - loss 5.37841072 - samples/sec: 6.88 - lr: 0.001000\n","2021-04-02 18:54:32,757 epoch 3 - iter 300/601 - loss 5.31370223 - samples/sec: 6.78 - lr: 0.001000\n","2021-04-02 18:55:40,891 epoch 3 - iter 360/601 - loss 5.31298098 - samples/sec: 7.05 - lr: 0.001000\n","2021-04-02 18:56:51,999 epoch 3 - iter 420/601 - loss 5.26973491 - samples/sec: 6.75 - lr: 0.001000\n","2021-04-02 18:57:59,894 epoch 3 - iter 480/601 - loss 5.34408998 - samples/sec: 7.07 - lr: 0.001000\n","2021-04-02 18:59:04,960 epoch 3 - iter 540/601 - loss 5.42205414 - samples/sec: 7.38 - lr: 0.001000\n","2021-04-02 19:00:14,867 epoch 3 - iter 600/601 - loss 5.45151233 - samples/sec: 6.87 - lr: 0.001000\n","2021-04-02 19:00:16,110 ----------------------------------------------------------------------------------------------------\n","2021-04-02 19:00:16,113 EPOCH 3 done: loss 5.4554 - lr 0.0010000\n","2021-04-02 19:00:56,911 DEV : loss 4.431738376617432 - score 0.5451\n","2021-04-02 19:00:56,936 BAD EPOCHS (no improvement): 0\n","saving best model\n","2021-04-02 19:01:21,708 ----------------------------------------------------------------------------------------------------\n","2021-04-02 19:02:35,776 epoch 4 - iter 60/601 - loss 5.75189063 - samples/sec: 6.48 - lr: 0.001000\n","2021-04-02 19:03:44,399 epoch 4 - iter 120/601 - loss 5.40119599 - samples/sec: 7.00 - lr: 0.001000\n","2021-04-02 19:04:52,881 epoch 4 - iter 180/601 - loss 5.83312679 - samples/sec: 7.01 - lr: 0.001000\n","2021-04-02 19:06:04,283 epoch 4 - iter 240/601 - loss 5.61186680 - samples/sec: 6.72 - lr: 0.001000\n","2021-04-02 19:07:13,471 epoch 4 - iter 300/601 - loss 5.64667736 - samples/sec: 6.94 - lr: 0.001000\n","2021-04-02 19:08:24,229 epoch 4 - iter 360/601 - loss 5.51906678 - samples/sec: 6.78 - lr: 0.001000\n","2021-04-02 19:09:31,681 epoch 4 - iter 420/601 - loss 5.38657487 - samples/sec: 7.12 - lr: 0.001000\n","2021-04-02 19:10:40,327 epoch 4 - iter 480/601 - loss 5.35393627 - samples/sec: 6.99 - lr: 0.001000\n","2021-04-02 19:11:52,299 epoch 4 - iter 540/601 - loss 5.29470951 - samples/sec: 6.67 - lr: 0.001000\n","2021-04-02 19:13:01,714 epoch 4 - iter 600/601 - loss 5.19919752 - samples/sec: 6.92 - lr: 0.001000\n","2021-04-02 19:13:02,587 ----------------------------------------------------------------------------------------------------\n","2021-04-02 19:13:02,589 EPOCH 4 done: loss 5.2013 - lr 0.0010000\n","2021-04-02 19:13:43,655 DEV : loss 4.31041145324707 - score 0.579\n","2021-04-02 19:13:43,671 BAD EPOCHS (no improvement): 0\n","saving best model\n","2021-04-02 19:14:09,225 ----------------------------------------------------------------------------------------------------\n","2021-04-02 19:15:24,304 epoch 5 - iter 60/601 - loss 4.96197239 - samples/sec: 6.40 - lr: 0.001000\n","2021-04-02 19:16:35,204 epoch 5 - iter 120/601 - loss 5.20663044 - samples/sec: 6.77 - lr: 0.001000\n","2021-04-02 19:17:44,331 epoch 5 - iter 180/601 - loss 5.11886848 - samples/sec: 6.94 - lr: 0.001000\n","2021-04-02 19:18:54,678 epoch 5 - iter 240/601 - loss 5.00693746 - samples/sec: 6.82 - lr: 0.001000\n","2021-04-02 19:20:07,620 epoch 5 - iter 300/601 - loss 5.38353117 - samples/sec: 6.58 - lr: 0.001000\n","2021-04-02 19:21:17,937 epoch 5 - iter 360/601 - loss 5.29243058 - samples/sec: 6.83 - lr: 0.001000\n","2021-04-02 19:22:25,680 epoch 5 - iter 420/601 - loss 5.27276379 - samples/sec: 7.09 - lr: 0.001000\n","2021-04-02 19:23:35,024 epoch 5 - iter 480/601 - loss 5.20626697 - samples/sec: 6.92 - lr: 0.001000\n","2021-04-02 19:24:44,595 epoch 5 - iter 540/601 - loss 5.11734183 - samples/sec: 6.90 - lr: 0.001000\n","2021-04-02 19:25:51,061 epoch 5 - iter 600/601 - loss 5.06976578 - samples/sec: 7.22 - lr: 0.001000\n","2021-04-02 19:25:51,972 ----------------------------------------------------------------------------------------------------\n","2021-04-02 19:25:51,974 EPOCH 5 done: loss 5.0698 - lr 0.0010000\n","2021-04-02 19:26:33,444 DEV : loss 4.188173770904541 - score 0.5802\n","2021-04-02 19:26:33,460 BAD EPOCHS (no improvement): 0\n","saving best model\n","2021-04-02 19:26:54,992 ----------------------------------------------------------------------------------------------------\n","2021-04-02 19:28:13,301 epoch 6 - iter 60/601 - loss 5.19970922 - samples/sec: 6.13 - lr: 0.001000\n","2021-04-02 19:29:22,204 epoch 6 - iter 120/601 - loss 4.82067791 - samples/sec: 6.97 - lr: 0.001000\n","2021-04-02 19:30:30,695 epoch 6 - iter 180/601 - loss 4.92409785 - samples/sec: 7.01 - lr: 0.001000\n","2021-04-02 19:31:39,173 epoch 6 - iter 240/601 - loss 4.94242344 - samples/sec: 7.01 - lr: 0.001000\n","2021-04-02 19:32:50,044 epoch 6 - iter 300/601 - loss 4.89864737 - samples/sec: 6.77 - lr: 0.001000\n","2021-04-02 19:33:56,969 epoch 6 - iter 360/601 - loss 5.07511620 - samples/sec: 7.17 - lr: 0.001000\n","2021-04-02 19:35:07,364 epoch 6 - iter 420/601 - loss 4.97565476 - samples/sec: 6.82 - lr: 0.001000\n","2021-04-02 19:36:15,108 epoch 6 - iter 480/601 - loss 5.00692834 - samples/sec: 7.09 - lr: 0.001000\n","2021-04-02 19:37:26,842 epoch 6 - iter 540/601 - loss 4.97404894 - samples/sec: 6.69 - lr: 0.001000\n","2021-04-02 19:38:34,700 epoch 6 - iter 600/601 - loss 4.91860614 - samples/sec: 7.07 - lr: 0.001000\n","2021-04-02 19:38:35,794 ----------------------------------------------------------------------------------------------------\n","2021-04-02 19:38:35,797 EPOCH 6 done: loss 4.9217 - lr 0.0010000\n","2021-04-02 19:39:18,350 DEV : loss 4.067915916442871 - score 0.5931\n","2021-04-02 19:39:18,368 BAD EPOCHS (no improvement): 0\n","saving best model\n","2021-04-02 19:39:39,411 ----------------------------------------------------------------------------------------------------\n","2021-04-02 19:40:57,481 epoch 7 - iter 60/601 - loss 5.08076371 - samples/sec: 6.15 - lr: 0.001000\n","2021-04-02 19:42:10,030 epoch 7 - iter 120/601 - loss 4.72587652 - samples/sec: 6.62 - lr: 0.001000\n","2021-04-02 19:43:19,197 epoch 7 - iter 180/601 - loss 4.71039061 - samples/sec: 6.94 - lr: 0.001000\n","2021-04-02 19:44:29,747 epoch 7 - iter 240/601 - loss 4.62445347 - samples/sec: 6.80 - lr: 0.001000\n","2021-04-02 19:45:36,959 epoch 7 - iter 300/601 - loss 4.67271188 - samples/sec: 7.14 - lr: 0.001000\n","2021-04-02 19:46:47,020 epoch 7 - iter 360/601 - loss 4.66318061 - samples/sec: 6.85 - lr: 0.001000\n","2021-04-02 19:47:57,733 epoch 7 - iter 420/601 - loss 4.92500815 - samples/sec: 6.79 - lr: 0.001000\n","2021-04-02 19:49:06,462 epoch 7 - iter 480/601 - loss 4.89748789 - samples/sec: 6.98 - lr: 0.001000\n","2021-04-02 19:50:14,935 epoch 7 - iter 540/601 - loss 4.88292755 - samples/sec: 7.01 - lr: 0.001000\n","2021-04-02 19:51:25,941 epoch 7 - iter 600/601 - loss 4.82979356 - samples/sec: 6.76 - lr: 0.001000\n","2021-04-02 19:51:27,095 ----------------------------------------------------------------------------------------------------\n","2021-04-02 19:51:27,100 EPOCH 7 done: loss 4.8291 - lr 0.0010000\n","2021-04-02 19:52:08,759 DEV : loss 4.0224761962890625 - score 0.6001\n","2021-04-02 19:52:08,775 BAD EPOCHS (no improvement): 0\n","saving best model\n","2021-04-02 19:52:29,749 ----------------------------------------------------------------------------------------------------\n","2021-04-02 19:53:47,299 epoch 8 - iter 60/601 - loss 4.72043558 - samples/sec: 6.21 - lr: 0.001000\n","2021-04-02 19:54:54,947 epoch 8 - iter 120/601 - loss 4.59625814 - samples/sec: 7.10 - lr: 0.001000\n","2021-04-02 19:56:04,206 epoch 8 - iter 180/601 - loss 4.65541945 - samples/sec: 6.93 - lr: 0.001000\n","2021-04-02 19:57:14,853 epoch 8 - iter 240/601 - loss 4.64288042 - samples/sec: 6.79 - lr: 0.001000\n","2021-04-02 19:58:21,401 epoch 8 - iter 300/601 - loss 4.66837683 - samples/sec: 7.21 - lr: 0.001000\n","2021-04-02 19:59:28,423 epoch 8 - iter 360/601 - loss 4.68220579 - samples/sec: 7.16 - lr: 0.001000\n","2021-04-02 20:00:39,776 epoch 8 - iter 420/601 - loss 4.82396796 - samples/sec: 6.73 - lr: 0.001000\n","2021-04-02 20:01:47,524 epoch 8 - iter 480/601 - loss 4.73076220 - samples/sec: 7.09 - lr: 0.001000\n","2021-04-02 20:02:55,413 epoch 8 - iter 540/601 - loss 4.69876576 - samples/sec: 7.07 - lr: 0.001000\n","2021-04-02 20:04:05,004 epoch 8 - iter 600/601 - loss 4.68978913 - samples/sec: 6.90 - lr: 0.001000\n","2021-04-02 20:04:05,625 ----------------------------------------------------------------------------------------------------\n","2021-04-02 20:04:05,627 EPOCH 8 done: loss 4.6862 - lr 0.0010000\n","2021-04-02 20:04:45,896 DEV : loss 3.955862283706665 - score 0.6142\n","2021-04-02 20:04:45,911 BAD EPOCHS (no improvement): 0\n","saving best model\n","2021-04-02 20:05:07,509 ----------------------------------------------------------------------------------------------------\n","2021-04-02 20:06:19,560 epoch 9 - iter 60/601 - loss 4.18054405 - samples/sec: 6.66 - lr: 0.001000\n","2021-04-02 20:07:25,898 epoch 9 - iter 120/601 - loss 4.19810980 - samples/sec: 7.24 - lr: 0.001000\n","2021-04-02 20:08:36,669 epoch 9 - iter 180/601 - loss 4.24868911 - samples/sec: 6.78 - lr: 0.001000\n","2021-04-02 20:09:46,155 epoch 9 - iter 240/601 - loss 4.23651502 - samples/sec: 6.91 - lr: 0.001000\n","2021-04-02 20:10:55,352 epoch 9 - iter 300/601 - loss 4.26826940 - samples/sec: 6.94 - lr: 0.001000\n","2021-04-02 20:12:06,035 epoch 9 - iter 360/601 - loss 4.66423744 - samples/sec: 6.79 - lr: 0.001000\n","2021-04-02 20:13:14,930 epoch 9 - iter 420/601 - loss 4.70034721 - samples/sec: 6.97 - lr: 0.001000\n","2021-04-02 20:14:23,897 epoch 9 - iter 480/601 - loss 4.67157330 - samples/sec: 6.96 - lr: 0.001000\n","2021-04-02 20:15:30,340 epoch 9 - iter 540/601 - loss 4.64149315 - samples/sec: 7.22 - lr: 0.001000\n","2021-04-02 20:16:39,057 epoch 9 - iter 600/601 - loss 4.62230784 - samples/sec: 6.99 - lr: 0.001000\n","2021-04-02 20:16:40,042 ----------------------------------------------------------------------------------------------------\n","2021-04-02 20:16:40,043 EPOCH 9 done: loss 4.6272 - lr 0.0010000\n","2021-04-02 20:17:20,664 DEV : loss 3.904953718185425 - score 0.6206\n","2021-04-02 20:17:20,680 BAD EPOCHS (no improvement): 0\n","saving best model\n","2021-04-02 20:17:45,375 ----------------------------------------------------------------------------------------------------\n","2021-04-02 20:19:02,595 epoch 10 - iter 60/601 - loss 4.30661569 - samples/sec: 6.22 - lr: 0.001000\n","2021-04-02 20:20:11,069 epoch 10 - iter 120/601 - loss 4.52003033 - samples/sec: 7.01 - lr: 0.001000\n","2021-04-02 20:21:16,403 epoch 10 - iter 180/601 - loss 4.43036580 - samples/sec: 7.35 - lr: 0.001000\n","2021-04-02 20:22:24,520 epoch 10 - iter 240/601 - loss 4.34711286 - samples/sec: 7.05 - lr: 0.001000\n","2021-04-02 20:23:34,742 epoch 10 - iter 300/601 - loss 4.32701962 - samples/sec: 6.84 - lr: 0.001000\n","2021-04-02 20:24:42,326 epoch 10 - iter 360/601 - loss 4.42355279 - samples/sec: 7.10 - lr: 0.001000\n","2021-04-02 20:25:51,262 epoch 10 - iter 420/601 - loss 4.33852632 - samples/sec: 6.96 - lr: 0.001000\n","2021-04-02 20:27:00,176 epoch 10 - iter 480/601 - loss 4.31614547 - samples/sec: 6.97 - lr: 0.001000\n","2021-04-02 20:28:08,579 epoch 10 - iter 540/601 - loss 4.52553566 - samples/sec: 7.02 - lr: 0.001000\n","2021-04-02 20:29:16,103 epoch 10 - iter 600/601 - loss 4.52737509 - samples/sec: 7.11 - lr: 0.001000\n","2021-04-02 20:29:16,944 ----------------------------------------------------------------------------------------------------\n","2021-04-02 20:29:16,949 EPOCH 10 done: loss 4.5242 - lr 0.0010000\n","2021-04-02 20:29:56,794 DEV : loss 3.94594669342041 - score 0.6285\n","2021-04-02 20:29:56,810 BAD EPOCHS (no improvement): 0\n","saving best model\n","2021-04-02 20:30:22,710 ----------------------------------------------------------------------------------------------------\n","2021-04-02 20:31:37,658 epoch 11 - iter 60/601 - loss 4.49724333 - samples/sec: 6.41 - lr: 0.001000\n","2021-04-02 20:32:48,395 epoch 11 - iter 120/601 - loss 5.27483581 - samples/sec: 6.79 - lr: 0.001000\n","2021-04-02 20:33:57,978 epoch 11 - iter 180/601 - loss 4.78944326 - samples/sec: 6.90 - lr: 0.001000\n","2021-04-02 20:35:08,314 epoch 11 - iter 240/601 - loss 4.63873185 - samples/sec: 6.82 - lr: 0.001000\n","2021-04-02 20:36:17,243 epoch 11 - iter 300/601 - loss 4.50576291 - samples/sec: 6.96 - lr: 0.001000\n","2021-04-02 20:37:22,036 epoch 11 - iter 360/601 - loss 4.47299240 - samples/sec: 7.41 - lr: 0.001000\n","2021-04-02 20:38:28,573 epoch 11 - iter 420/601 - loss 4.48905975 - samples/sec: 7.21 - lr: 0.001000\n","2021-04-02 20:39:36,822 epoch 11 - iter 480/601 - loss 4.50362013 - samples/sec: 7.03 - lr: 0.001000\n","2021-04-02 20:40:44,648 epoch 11 - iter 540/601 - loss 4.50744396 - samples/sec: 7.08 - lr: 0.001000\n","2021-04-02 20:41:50,172 epoch 11 - iter 600/601 - loss 4.46482149 - samples/sec: 7.33 - lr: 0.001000\n","2021-04-02 20:41:51,578 ----------------------------------------------------------------------------------------------------\n","2021-04-02 20:41:51,582 EPOCH 11 done: loss 4.4635 - lr 0.0010000\n","2021-04-02 20:42:31,664 DEV : loss 3.9119906425476074 - score 0.6369\n","2021-04-02 20:42:31,681 BAD EPOCHS (no improvement): 0\n","saving best model\n","2021-04-02 20:42:52,961 ----------------------------------------------------------------------------------------------------\n","2021-04-02 20:44:04,169 epoch 12 - iter 60/601 - loss 4.13017018 - samples/sec: 6.74 - lr: 0.001000\n","2021-04-02 20:45:12,027 epoch 12 - iter 120/601 - loss 4.06978385 - samples/sec: 7.07 - lr: 0.001000\n","2021-04-02 20:46:17,890 epoch 12 - iter 180/601 - loss 4.13938589 - samples/sec: 7.29 - lr: 0.001000\n","2021-04-02 20:47:26,936 epoch 12 - iter 240/601 - loss 4.20618154 - samples/sec: 6.95 - lr: 0.001000\n","2021-04-02 20:48:34,277 epoch 12 - iter 300/601 - loss 4.27728153 - samples/sec: 7.13 - lr: 0.001000\n","2021-04-02 20:49:46,081 epoch 12 - iter 360/601 - loss 4.24024452 - samples/sec: 6.69 - lr: 0.001000\n","2021-04-02 20:50:58,120 epoch 12 - iter 420/601 - loss 4.42129080 - samples/sec: 6.66 - lr: 0.001000\n","2021-04-02 20:52:05,888 epoch 12 - iter 480/601 - loss 4.40999921 - samples/sec: 7.08 - lr: 0.001000\n","2021-04-02 20:53:13,794 epoch 12 - iter 540/601 - loss 4.45552100 - samples/sec: 7.07 - lr: 0.001000\n","2021-04-02 20:54:21,063 epoch 12 - iter 600/601 - loss 4.41815973 - samples/sec: 7.14 - lr: 0.001000\n","2021-04-02 20:54:21,932 ----------------------------------------------------------------------------------------------------\n","2021-04-02 20:54:21,935 EPOCH 12 done: loss 4.4214 - lr 0.0010000\n","2021-04-02 20:55:02,286 DEV : loss 3.8628458976745605 - score 0.6455\n","2021-04-02 20:55:02,303 BAD EPOCHS (no improvement): 0\n","saving best model\n","2021-04-02 20:55:23,864 ----------------------------------------------------------------------------------------------------\n","2021-04-02 20:56:35,156 epoch 13 - iter 60/601 - loss 5.79793988 - samples/sec: 6.73 - lr: 0.001000\n","2021-04-02 20:57:39,028 epoch 13 - iter 120/601 - loss 4.79732347 - samples/sec: 7.52 - lr: 0.001000\n","2021-04-02 20:58:51,223 epoch 13 - iter 180/601 - loss 4.57657111 - samples/sec: 6.65 - lr: 0.001000\n","2021-04-02 21:00:03,416 epoch 13 - iter 240/601 - loss 4.60726187 - samples/sec: 6.65 - lr: 0.001000\n","2021-04-02 21:01:10,445 epoch 13 - iter 300/601 - loss 4.50389467 - samples/sec: 7.16 - lr: 0.001000\n","2021-04-02 21:02:17,103 epoch 13 - iter 360/601 - loss 4.47879007 - samples/sec: 7.20 - lr: 0.001000\n","2021-04-02 21:03:26,386 epoch 13 - iter 420/601 - loss 4.42175943 - samples/sec: 6.93 - lr: 0.001000\n","2021-04-02 21:04:37,162 epoch 13 - iter 480/601 - loss 4.40386214 - samples/sec: 6.78 - lr: 0.001000\n","2021-04-02 21:05:44,753 epoch 13 - iter 540/601 - loss 4.41071031 - samples/sec: 7.10 - lr: 0.001000\n","2021-04-02 21:06:50,403 epoch 13 - iter 600/601 - loss 4.38290518 - samples/sec: 7.31 - lr: 0.001000\n","2021-04-02 21:06:51,162 ----------------------------------------------------------------------------------------------------\n","2021-04-02 21:06:51,163 EPOCH 13 done: loss 4.3804 - lr 0.0010000\n","2021-04-02 21:07:32,739 DEV : loss 3.876532793045044 - score 0.6418\n","2021-04-02 21:07:32,754 BAD EPOCHS (no improvement): 1\n","2021-04-02 21:07:32,760 ----------------------------------------------------------------------------------------------------\n","2021-04-02 21:08:41,099 epoch 14 - iter 60/601 - loss 4.20883077 - samples/sec: 7.02 - lr: 0.001000\n","2021-04-02 21:09:49,493 epoch 14 - iter 120/601 - loss 3.92792123 - samples/sec: 7.02 - lr: 0.001000\n","2021-04-02 21:10:57,547 epoch 14 - iter 180/601 - loss 3.95925536 - samples/sec: 7.05 - lr: 0.001000\n","2021-04-02 21:12:06,045 epoch 14 - iter 240/601 - loss 4.15146776 - samples/sec: 7.01 - lr: 0.001000\n","2021-04-02 21:13:11,238 epoch 14 - iter 300/601 - loss 4.12433943 - samples/sec: 7.36 - lr: 0.001000\n","2021-04-02 21:14:19,358 epoch 14 - iter 360/601 - loss 4.36714087 - samples/sec: 7.05 - lr: 0.001000\n","2021-04-02 21:15:26,134 epoch 14 - iter 420/601 - loss 4.31928208 - samples/sec: 7.19 - lr: 0.001000\n","2021-04-02 21:16:35,188 epoch 14 - iter 480/601 - loss 4.31060007 - samples/sec: 6.95 - lr: 0.001000\n","2021-04-02 21:17:45,508 epoch 14 - iter 540/601 - loss 4.30592134 - samples/sec: 6.83 - lr: 0.001000\n","2021-04-02 21:18:57,276 epoch 14 - iter 600/601 - loss 4.27798782 - samples/sec: 6.69 - lr: 0.001000\n","2021-04-02 21:18:58,125 ----------------------------------------------------------------------------------------------------\n","2021-04-02 21:18:58,128 EPOCH 14 done: loss 4.2829 - lr 0.0010000\n","2021-04-02 21:19:39,481 DEV : loss 3.816879987716675 - score 0.6455\n","2021-04-02 21:19:39,497 BAD EPOCHS (no improvement): 2\n","2021-04-02 21:19:39,503 ----------------------------------------------------------------------------------------------------\n","2021-04-02 21:20:47,617 epoch 15 - iter 60/601 - loss 4.56816848 - samples/sec: 7.05 - lr: 0.001000\n","2021-04-02 21:21:56,267 epoch 15 - iter 120/601 - loss 4.37002427 - samples/sec: 6.99 - lr: 0.001000\n","2021-04-02 21:23:06,112 epoch 15 - iter 180/601 - loss 4.84543064 - samples/sec: 6.87 - lr: 0.001000\n","2021-04-02 21:24:14,026 epoch 15 - iter 240/601 - loss 4.52430231 - samples/sec: 7.07 - lr: 0.001000\n","2021-04-02 21:25:23,957 epoch 15 - iter 300/601 - loss 4.27825703 - samples/sec: 6.86 - lr: 0.001000\n","2021-04-02 21:26:31,895 epoch 15 - iter 360/601 - loss 4.21981397 - samples/sec: 7.07 - lr: 0.001000\n","2021-04-02 21:27:42,299 epoch 15 - iter 420/601 - loss 4.19394946 - samples/sec: 6.82 - lr: 0.001000\n","2021-04-02 21:28:51,746 epoch 15 - iter 480/601 - loss 4.22164498 - samples/sec: 6.91 - lr: 0.001000\n","2021-04-02 21:29:58,534 epoch 15 - iter 540/601 - loss 4.20351185 - samples/sec: 7.19 - lr: 0.001000\n","2021-04-02 21:31:08,651 epoch 15 - iter 600/601 - loss 4.23398520 - samples/sec: 6.85 - lr: 0.001000\n","2021-04-02 21:31:09,460 ----------------------------------------------------------------------------------------------------\n","2021-04-02 21:31:09,462 EPOCH 15 done: loss 4.2327 - lr 0.0010000\n","2021-04-02 21:31:50,182 DEV : loss 3.8115549087524414 - score 0.6456\n","2021-04-02 21:31:50,198 BAD EPOCHS (no improvement): 0\n","saving best model\n","2021-04-02 21:32:16,131 ----------------------------------------------------------------------------------------------------\n","2021-04-02 21:33:31,438 epoch 16 - iter 60/601 - loss 4.29944726 - samples/sec: 6.38 - lr: 0.001000\n","2021-04-02 21:34:35,845 epoch 16 - iter 120/601 - loss 4.13751181 - samples/sec: 7.45 - lr: 0.001000\n","2021-04-02 21:35:46,852 epoch 16 - iter 180/601 - loss 4.16827278 - samples/sec: 6.76 - lr: 0.001000\n","2021-04-02 21:36:57,491 epoch 16 - iter 240/601 - loss 4.21339746 - samples/sec: 6.80 - lr: 0.001000\n","2021-04-02 21:38:08,549 epoch 16 - iter 300/601 - loss 4.10673418 - samples/sec: 6.76 - lr: 0.001000\n","2021-04-02 21:39:17,258 epoch 16 - iter 360/601 - loss 4.34602321 - samples/sec: 6.99 - lr: 0.001000\n","2021-04-02 21:40:25,979 epoch 16 - iter 420/601 - loss 4.26367570 - samples/sec: 6.99 - lr: 0.001000\n","2021-04-02 21:41:36,178 epoch 16 - iter 480/601 - loss 4.20533035 - samples/sec: 6.84 - lr: 0.001000\n","2021-04-02 21:42:45,940 epoch 16 - iter 540/601 - loss 4.15076869 - samples/sec: 6.88 - lr: 0.001000\n","2021-04-02 21:43:54,996 epoch 16 - iter 600/601 - loss 4.23950934 - samples/sec: 6.95 - lr: 0.001000\n","2021-04-02 21:43:55,788 ----------------------------------------------------------------------------------------------------\n","2021-04-02 21:43:55,790 EPOCH 16 done: loss 4.2364 - lr 0.0010000\n","2021-04-02 21:44:36,853 DEV : loss 3.7720046043395996 - score 0.6447\n","2021-04-02 21:44:36,870 BAD EPOCHS (no improvement): 1\n","2021-04-02 21:44:36,876 ----------------------------------------------------------------------------------------------------\n","2021-04-02 21:45:44,247 epoch 17 - iter 60/601 - loss 3.98179922 - samples/sec: 7.13 - lr: 0.001000\n","2021-04-02 21:46:55,453 epoch 17 - iter 120/601 - loss 3.85777515 - samples/sec: 6.74 - lr: 0.001000\n","2021-04-02 21:48:04,708 epoch 17 - iter 180/601 - loss 3.97310461 - samples/sec: 6.93 - lr: 0.001000\n","2021-04-02 21:49:13,441 epoch 17 - iter 240/601 - loss 4.03782727 - samples/sec: 6.98 - lr: 0.001000\n","2021-04-02 21:50:28,717 epoch 17 - iter 300/601 - loss 4.07530576 - samples/sec: 6.38 - lr: 0.001000\n","2021-04-02 21:51:34,745 epoch 17 - iter 360/601 - loss 4.05635871 - samples/sec: 7.27 - lr: 0.001000\n","2021-04-02 21:52:42,544 epoch 17 - iter 420/601 - loss 4.01026426 - samples/sec: 7.08 - lr: 0.001000\n","2021-04-02 21:53:51,221 epoch 17 - iter 480/601 - loss 4.04719090 - samples/sec: 6.99 - lr: 0.001000\n","2021-04-02 21:54:57,734 epoch 17 - iter 540/601 - loss 4.04540653 - samples/sec: 7.22 - lr: 0.001000\n","2021-04-02 21:56:07,838 epoch 17 - iter 600/601 - loss 4.16000623 - samples/sec: 6.85 - lr: 0.001000\n","2021-04-02 21:56:08,772 ----------------------------------------------------------------------------------------------------\n","2021-04-02 21:56:08,775 EPOCH 17 done: loss 4.1612 - lr 0.0010000\n","2021-04-02 21:56:51,211 DEV : loss 3.823697328567505 - score 0.6477\n","2021-04-02 21:56:51,227 BAD EPOCHS (no improvement): 0\n","saving best model\n","2021-04-02 21:57:14,817 ----------------------------------------------------------------------------------------------------\n","2021-04-02 21:58:30,467 epoch 18 - iter 60/601 - loss 4.23288868 - samples/sec: 6.35 - lr: 0.001000\n","2021-04-02 21:59:38,903 epoch 18 - iter 120/601 - loss 3.97176314 - samples/sec: 7.01 - lr: 0.001000\n","2021-04-02 22:00:49,348 epoch 18 - iter 180/601 - loss 3.90811335 - samples/sec: 6.81 - lr: 0.001000\n","2021-04-02 22:01:59,183 epoch 18 - iter 240/601 - loss 3.80615549 - samples/sec: 6.87 - lr: 0.001000\n","2021-04-02 22:03:08,818 epoch 18 - iter 300/601 - loss 3.75680120 - samples/sec: 6.89 - lr: 0.001000\n","2021-04-02 22:04:17,636 epoch 18 - iter 360/601 - loss 3.85435400 - samples/sec: 6.98 - lr: 0.001000\n","2021-04-02 22:05:29,805 epoch 18 - iter 420/601 - loss 3.86582218 - samples/sec: 6.65 - lr: 0.001000\n","2021-04-02 22:06:38,025 epoch 18 - iter 480/601 - loss 3.85641334 - samples/sec: 7.04 - lr: 0.001000\n","2021-04-02 22:07:46,538 epoch 18 - iter 540/601 - loss 3.87882944 - samples/sec: 7.01 - lr: 0.001000\n","2021-04-02 22:08:52,381 epoch 18 - iter 600/601 - loss 4.11448853 - samples/sec: 7.29 - lr: 0.001000\n","2021-04-02 22:08:53,014 ----------------------------------------------------------------------------------------------------\n","2021-04-02 22:08:53,016 EPOCH 18 done: loss 4.1132 - lr 0.0010000\n","2021-04-02 22:09:34,059 DEV : loss 3.7218048572540283 - score 0.6343\n","2021-04-02 22:09:34,076 BAD EPOCHS (no improvement): 1\n","2021-04-02 22:09:34,082 ----------------------------------------------------------------------------------------------------\n","2021-04-02 22:10:41,153 epoch 19 - iter 60/601 - loss 4.14039310 - samples/sec: 7.16 - lr: 0.001000\n","2021-04-02 22:11:50,111 epoch 19 - iter 120/601 - loss 3.81636501 - samples/sec: 6.96 - lr: 0.001000\n","2021-04-02 22:12:57,751 epoch 19 - iter 180/601 - loss 3.83517557 - samples/sec: 7.10 - lr: 0.001000\n","2021-04-02 22:14:08,038 epoch 19 - iter 240/601 - loss 4.28046244 - samples/sec: 6.83 - lr: 0.001000\n","2021-04-02 22:15:20,335 epoch 19 - iter 300/601 - loss 4.17024933 - samples/sec: 6.64 - lr: 0.001000\n","2021-04-02 22:16:30,296 epoch 19 - iter 360/601 - loss 4.12190300 - samples/sec: 6.86 - lr: 0.001000\n","2021-04-02 22:17:37,313 epoch 19 - iter 420/601 - loss 4.08502640 - samples/sec: 7.16 - lr: 0.001000\n","2021-04-02 22:18:45,353 epoch 19 - iter 480/601 - loss 4.13659545 - samples/sec: 7.06 - lr: 0.001000\n","2021-04-02 22:19:52,368 epoch 19 - iter 540/601 - loss 4.08855776 - samples/sec: 7.16 - lr: 0.001000\n","2021-04-02 22:21:03,101 epoch 19 - iter 600/601 - loss 4.05736414 - samples/sec: 6.79 - lr: 0.001000\n","2021-04-02 22:21:04,065 ----------------------------------------------------------------------------------------------------\n","2021-04-02 22:21:04,068 EPOCH 19 done: loss 4.0634 - lr 0.0010000\n","2021-04-02 22:21:45,316 DEV : loss 3.7408571243286133 - score 0.6436\n","2021-04-02 22:21:45,332 BAD EPOCHS (no improvement): 2\n","2021-04-02 22:21:45,336 ----------------------------------------------------------------------------------------------------\n","2021-04-02 22:22:52,229 epoch 20 - iter 60/601 - loss 3.80702556 - samples/sec: 7.18 - lr: 0.001000\n","2021-04-02 22:24:02,363 epoch 20 - iter 120/601 - loss 3.78100601 - samples/sec: 6.84 - lr: 0.001000\n","2021-04-02 22:25:11,355 epoch 20 - iter 180/601 - loss 4.24355042 - samples/sec: 6.96 - lr: 0.001000\n","2021-04-02 22:26:20,287 epoch 20 - iter 240/601 - loss 4.15773863 - samples/sec: 6.96 - lr: 0.001000\n","2021-04-02 22:27:26,899 epoch 20 - iter 300/601 - loss 4.12598442 - samples/sec: 7.21 - lr: 0.001000\n","2021-04-02 22:28:35,629 epoch 20 - iter 360/601 - loss 4.08484786 - samples/sec: 6.98 - lr: 0.001000\n","2021-04-02 22:29:43,914 epoch 20 - iter 420/601 - loss 4.04792909 - samples/sec: 7.03 - lr: 0.001000\n","2021-04-02 22:30:54,920 epoch 20 - iter 480/601 - loss 3.98410098 - samples/sec: 6.76 - lr: 0.001000\n","2021-04-02 22:32:07,013 epoch 20 - iter 540/601 - loss 3.98822206 - samples/sec: 6.66 - lr: 0.001000\n","2021-04-02 22:33:16,481 epoch 20 - iter 600/601 - loss 4.00484123 - samples/sec: 6.91 - lr: 0.001000\n","2021-04-02 22:33:17,397 ----------------------------------------------------------------------------------------------------\n","2021-04-02 22:33:17,399 EPOCH 20 done: loss 4.0062 - lr 0.0010000\n","2021-04-02 22:33:58,131 DEV : loss 3.7542076110839844 - score 0.6498\n","2021-04-02 22:33:58,147 BAD EPOCHS (no improvement): 0\n","saving best model\n","2021-04-02 22:34:19,105 ----------------------------------------------------------------------------------------------------\n","2021-04-02 22:35:29,200 epoch 21 - iter 60/601 - loss 5.03068270 - samples/sec: 6.85 - lr: 0.001000\n","2021-04-02 22:36:39,724 epoch 21 - iter 120/601 - loss 4.26168123 - samples/sec: 6.81 - lr: 0.001000\n","2021-04-02 22:37:45,002 epoch 21 - iter 180/601 - loss 4.12134253 - samples/sec: 7.35 - lr: 0.001000\n","2021-04-02 22:38:59,864 epoch 21 - iter 240/601 - loss 3.99766142 - samples/sec: 6.41 - lr: 0.001000\n","2021-04-02 22:40:09,685 epoch 21 - iter 300/601 - loss 4.03003868 - samples/sec: 6.88 - lr: 0.001000\n","2021-04-02 22:41:20,338 epoch 21 - iter 360/601 - loss 3.98282786 - samples/sec: 6.79 - lr: 0.001000\n","2021-04-02 22:42:30,480 epoch 21 - iter 420/601 - loss 3.97028178 - samples/sec: 6.84 - lr: 0.001000\n","2021-04-02 22:43:38,354 epoch 21 - iter 480/601 - loss 3.94847686 - samples/sec: 7.07 - lr: 0.001000\n","2021-04-02 22:44:43,483 epoch 21 - iter 540/601 - loss 3.91077188 - samples/sec: 7.37 - lr: 0.001000\n","2021-04-02 22:45:54,894 epoch 21 - iter 600/601 - loss 3.96380691 - samples/sec: 6.72 - lr: 0.001000\n","2021-04-02 22:45:55,672 ----------------------------------------------------------------------------------------------------\n","2021-04-02 22:45:55,674 EPOCH 21 done: loss 3.9627 - lr 0.0010000\n","2021-04-02 22:46:37,978 DEV : loss 3.7056477069854736 - score 0.6374\n","2021-04-02 22:46:37,994 BAD EPOCHS (no improvement): 1\n","2021-04-02 22:46:38,001 ----------------------------------------------------------------------------------------------------\n","2021-04-02 22:47:47,845 epoch 22 - iter 60/601 - loss 3.75510058 - samples/sec: 6.87 - lr: 0.001000\n","2021-04-02 22:48:59,236 epoch 22 - iter 120/601 - loss 4.64279122 - samples/sec: 6.72 - lr: 0.001000\n","2021-04-02 22:50:08,706 epoch 22 - iter 180/601 - loss 4.40038912 - samples/sec: 6.91 - lr: 0.001000\n","2021-04-02 22:51:17,963 epoch 22 - iter 240/601 - loss 4.25624184 - samples/sec: 6.93 - lr: 0.001000\n","2021-04-02 22:52:29,625 epoch 22 - iter 300/601 - loss 4.22082524 - samples/sec: 6.70 - lr: 0.001000\n","2021-04-02 22:53:41,149 epoch 22 - iter 360/601 - loss 4.10321398 - samples/sec: 6.71 - lr: 0.001000\n","2021-04-02 22:54:46,940 epoch 22 - iter 420/601 - loss 4.02130772 - samples/sec: 7.30 - lr: 0.001000\n","2021-04-02 22:55:53,357 epoch 22 - iter 480/601 - loss 3.97022547 - samples/sec: 7.23 - lr: 0.001000\n","2021-04-02 22:57:01,388 epoch 22 - iter 540/601 - loss 3.92811427 - samples/sec: 7.06 - lr: 0.001000\n","2021-04-02 22:58:12,062 epoch 22 - iter 600/601 - loss 3.96078755 - samples/sec: 6.79 - lr: 0.001000\n","2021-04-02 22:58:12,642 ----------------------------------------------------------------------------------------------------\n","2021-04-02 22:58:12,644 EPOCH 22 done: loss 3.9552 - lr 0.0010000\n","2021-04-02 22:58:53,809 DEV : loss 3.7322349548339844 - score 0.646\n","2021-04-02 22:58:53,825 BAD EPOCHS (no improvement): 2\n","2021-04-02 22:58:53,840 ----------------------------------------------------------------------------------------------------\n","2021-04-02 23:00:05,021 epoch 23 - iter 60/601 - loss 3.37564537 - samples/sec: 6.74 - lr: 0.001000\n","2021-04-02 23:01:15,022 epoch 23 - iter 120/601 - loss 3.63734463 - samples/sec: 6.86 - lr: 0.001000\n","2021-04-02 23:02:24,250 epoch 23 - iter 180/601 - loss 3.48046963 - samples/sec: 6.93 - lr: 0.001000\n","2021-04-02 23:03:31,575 epoch 23 - iter 240/601 - loss 3.62532119 - samples/sec: 7.13 - lr: 0.001000\n","2021-04-02 23:04:42,039 epoch 23 - iter 300/601 - loss 3.63861663 - samples/sec: 6.81 - lr: 0.001000\n","2021-04-02 23:05:50,016 epoch 23 - iter 360/601 - loss 3.83702362 - samples/sec: 7.06 - lr: 0.001000\n","2021-04-02 23:06:55,533 epoch 23 - iter 420/601 - loss 3.84395396 - samples/sec: 7.33 - lr: 0.001000\n","2021-04-02 23:08:04,417 epoch 23 - iter 480/601 - loss 3.81232599 - samples/sec: 6.97 - lr: 0.001000\n","2021-04-02 23:09:13,812 epoch 23 - iter 540/601 - loss 3.88352257 - samples/sec: 6.92 - lr: 0.001000\n","2021-04-02 23:10:23,361 epoch 23 - iter 600/601 - loss 3.89348365 - samples/sec: 6.90 - lr: 0.001000\n","2021-04-02 23:10:24,768 ----------------------------------------------------------------------------------------------------\n","2021-04-02 23:10:24,769 EPOCH 23 done: loss 3.9009 - lr 0.0010000\n","2021-04-02 23:11:06,006 DEV : loss 3.7220215797424316 - score 0.6423\n","2021-04-02 23:11:06,021 BAD EPOCHS (no improvement): 3\n","2021-04-02 23:11:06,024 ----------------------------------------------------------------------------------------------------\n","2021-04-02 23:12:17,090 epoch 24 - iter 60/601 - loss 3.72862431 - samples/sec: 6.76 - lr: 0.001000\n","2021-04-02 23:13:26,916 epoch 24 - iter 120/601 - loss 3.68194466 - samples/sec: 6.87 - lr: 0.001000\n","2021-04-02 23:14:37,728 epoch 24 - iter 180/601 - loss 3.82718826 - samples/sec: 6.78 - lr: 0.001000\n","2021-04-02 23:15:43,692 epoch 24 - iter 240/601 - loss 3.77551248 - samples/sec: 7.28 - lr: 0.001000\n","2021-04-02 23:16:51,860 epoch 24 - iter 300/601 - loss 3.75204419 - samples/sec: 7.04 - lr: 0.001000\n","2021-04-02 23:18:04,944 epoch 24 - iter 360/601 - loss 3.77246769 - samples/sec: 6.57 - lr: 0.001000\n","2021-04-02 23:19:11,244 epoch 24 - iter 420/601 - loss 3.75891655 - samples/sec: 7.24 - lr: 0.001000\n","2021-04-02 23:20:20,845 epoch 24 - iter 480/601 - loss 3.94570558 - samples/sec: 6.90 - lr: 0.001000\n","2021-04-02 23:21:30,598 epoch 24 - iter 540/601 - loss 3.91378640 - samples/sec: 6.88 - lr: 0.001000\n","2021-04-02 23:22:37,533 epoch 24 - iter 600/601 - loss 3.85288400 - samples/sec: 7.17 - lr: 0.001000\n","2021-04-02 23:22:38,664 ----------------------------------------------------------------------------------------------------\n","2021-04-02 23:22:38,666 EPOCH 24 done: loss 3.8606 - lr 0.0010000\n","2021-04-02 23:23:19,703 DEV : loss 3.710231065750122 - score 0.6411\n","Epoch    24: reducing learning rate of group 0 to 5.0000e-04.\n","2021-04-02 23:23:19,721 BAD EPOCHS (no improvement): 4\n","2021-04-02 23:23:19,726 ----------------------------------------------------------------------------------------------------\n","2021-04-02 23:24:28,869 epoch 25 - iter 60/601 - loss 3.80036943 - samples/sec: 6.94 - lr: 0.000500\n","2021-04-02 23:25:40,717 epoch 25 - iter 120/601 - loss 3.66624148 - samples/sec: 6.68 - lr: 0.000500\n","2021-04-02 23:26:48,480 epoch 25 - iter 180/601 - loss 3.68420624 - samples/sec: 7.08 - lr: 0.000500\n","2021-04-02 23:27:59,119 epoch 25 - iter 240/601 - loss 3.62934224 - samples/sec: 6.80 - lr: 0.000500\n","2021-04-02 23:29:05,588 epoch 25 - iter 300/601 - loss 3.60484405 - samples/sec: 7.22 - lr: 0.000500\n","2021-04-02 23:30:15,580 epoch 25 - iter 360/601 - loss 3.86308240 - samples/sec: 6.86 - lr: 0.000500\n","2021-04-02 23:31:24,473 epoch 25 - iter 420/601 - loss 3.86714422 - samples/sec: 6.97 - lr: 0.000500\n","2021-04-02 23:32:31,493 epoch 25 - iter 480/601 - loss 3.82478186 - samples/sec: 7.16 - lr: 0.000500\n","2021-04-02 23:33:42,390 epoch 25 - iter 540/601 - loss 3.78737325 - samples/sec: 6.77 - lr: 0.000500\n","2021-04-02 23:34:53,046 epoch 25 - iter 600/601 - loss 3.81656127 - samples/sec: 6.79 - lr: 0.000500\n","2021-04-02 23:34:53,665 ----------------------------------------------------------------------------------------------------\n","2021-04-02 23:34:53,668 EPOCH 25 done: loss 3.8146 - lr 0.0005000\n","2021-04-02 23:35:35,357 DEV : loss 3.723588228225708 - score 0.6375\n","2021-04-02 23:35:35,377 BAD EPOCHS (no improvement): 1\n","2021-04-02 23:35:35,383 ----------------------------------------------------------------------------------------------------\n","2021-04-02 23:36:47,297 epoch 26 - iter 60/601 - loss 3.67632203 - samples/sec: 6.68 - lr: 0.000500\n","2021-04-02 23:37:56,028 epoch 26 - iter 120/601 - loss 3.47793677 - samples/sec: 6.98 - lr: 0.000500\n","2021-04-02 23:39:03,268 epoch 26 - iter 180/601 - loss 3.48034777 - samples/sec: 7.14 - lr: 0.000500\n","2021-04-02 23:40:15,322 epoch 26 - iter 240/601 - loss 3.45257511 - samples/sec: 6.66 - lr: 0.000500\n","2021-04-02 23:41:22,442 epoch 26 - iter 300/601 - loss 3.51277288 - samples/sec: 7.15 - lr: 0.000500\n","2021-04-02 23:42:31,085 epoch 26 - iter 360/601 - loss 3.57123131 - samples/sec: 6.99 - lr: 0.000500\n","2021-04-02 23:43:41,269 epoch 26 - iter 420/601 - loss 3.55650854 - samples/sec: 6.84 - lr: 0.000500\n","2021-04-02 23:44:49,052 epoch 26 - iter 480/601 - loss 3.72865487 - samples/sec: 7.08 - lr: 0.000500\n","2021-04-02 23:45:54,569 epoch 26 - iter 540/601 - loss 3.72501858 - samples/sec: 7.33 - lr: 0.000500\n","2021-04-02 23:47:06,681 epoch 26 - iter 600/601 - loss 3.80543789 - samples/sec: 6.66 - lr: 0.000500\n","2021-04-02 23:47:07,664 ----------------------------------------------------------------------------------------------------\n","2021-04-02 23:47:07,666 EPOCH 26 done: loss 3.8029 - lr 0.0005000\n","2021-04-02 23:47:48,980 DEV : loss 3.74680495262146 - score 0.6406\n","2021-04-02 23:47:48,996 BAD EPOCHS (no improvement): 2\n","2021-04-02 23:47:49,000 ----------------------------------------------------------------------------------------------------\n","2021-04-02 23:48:56,974 epoch 27 - iter 60/601 - loss 3.58883213 - samples/sec: 7.06 - lr: 0.000500\n","2021-04-02 23:50:06,610 epoch 27 - iter 120/601 - loss 3.61267206 - samples/sec: 6.89 - lr: 0.000500\n","2021-04-02 23:51:17,744 epoch 27 - iter 180/601 - loss 3.71502535 - samples/sec: 6.75 - lr: 0.000500\n","2021-04-02 23:52:28,769 epoch 27 - iter 240/601 - loss 4.00831504 - samples/sec: 6.76 - lr: 0.000500\n","2021-04-02 23:53:38,597 epoch 27 - iter 300/601 - loss 4.02084699 - samples/sec: 6.87 - lr: 0.000500\n","2021-04-02 23:54:45,668 epoch 27 - iter 360/601 - loss 3.92384558 - samples/sec: 7.16 - lr: 0.000500\n","2021-04-02 23:55:53,360 epoch 27 - iter 420/601 - loss 3.85400178 - samples/sec: 7.09 - lr: 0.000500\n","2021-04-02 23:57:01,687 epoch 27 - iter 480/601 - loss 3.81609702 - samples/sec: 7.03 - lr: 0.000500\n","2021-04-02 23:58:10,821 epoch 27 - iter 540/601 - loss 3.80845182 - samples/sec: 6.94 - lr: 0.000500\n","2021-04-02 23:59:22,115 epoch 27 - iter 600/601 - loss 3.75199305 - samples/sec: 6.73 - lr: 0.000500\n","2021-04-02 23:59:22,816 ----------------------------------------------------------------------------------------------------\n","2021-04-02 23:59:22,818 EPOCH 27 done: loss 3.7496 - lr 0.0005000\n","2021-04-03 00:00:03,711 DEV : loss 3.8026351928710938 - score 0.6533\n","2021-04-03 00:00:03,728 BAD EPOCHS (no improvement): 0\n","saving best model\n","2021-04-03 00:00:25,194 ----------------------------------------------------------------------------------------------------\n","2021-04-03 00:01:38,584 epoch 28 - iter 60/601 - loss 3.57914391 - samples/sec: 6.54 - lr: 0.000500\n","2021-04-03 00:02:46,011 epoch 28 - iter 120/601 - loss 3.62953040 - samples/sec: 7.12 - lr: 0.000500\n","2021-04-03 00:03:55,956 epoch 28 - iter 180/601 - loss 3.46842289 - samples/sec: 6.86 - lr: 0.000500\n","2021-04-03 00:05:05,774 epoch 28 - iter 240/601 - loss 3.47767829 - samples/sec: 6.88 - lr: 0.000500\n","2021-04-03 00:06:14,892 epoch 28 - iter 300/601 - loss 3.51357690 - samples/sec: 6.95 - lr: 0.000500\n","2021-04-03 00:07:25,640 epoch 28 - iter 360/601 - loss 3.47250456 - samples/sec: 6.79 - lr: 0.000500\n","2021-04-03 00:08:33,563 epoch 28 - iter 420/601 - loss 3.44622209 - samples/sec: 7.07 - lr: 0.000500\n","2021-04-03 00:09:46,538 epoch 28 - iter 480/601 - loss 3.50493503 - samples/sec: 6.58 - lr: 0.000500\n","2021-04-03 00:10:54,305 epoch 28 - iter 540/601 - loss 3.70595748 - samples/sec: 7.08 - lr: 0.000500\n","2021-04-03 00:12:00,665 epoch 28 - iter 600/601 - loss 3.72166094 - samples/sec: 7.23 - lr: 0.000500\n","2021-04-03 00:12:01,451 ----------------------------------------------------------------------------------------------------\n","2021-04-03 00:12:01,454 EPOCH 28 done: loss 3.7214 - lr 0.0005000\n","2021-04-03 00:12:42,565 DEV : loss 3.7128188610076904 - score 0.6322\n","2021-04-03 00:12:42,583 BAD EPOCHS (no improvement): 1\n","2021-04-03 00:12:42,588 ----------------------------------------------------------------------------------------------------\n","2021-04-03 00:13:52,731 epoch 29 - iter 60/601 - loss 5.35716398 - samples/sec: 6.84 - lr: 0.000500\n","2021-04-03 00:15:01,095 epoch 29 - iter 120/601 - loss 4.44592951 - samples/sec: 7.02 - lr: 0.000500\n","2021-04-03 00:16:11,769 epoch 29 - iter 180/601 - loss 4.14498057 - samples/sec: 6.79 - lr: 0.000500\n","2021-04-03 00:17:20,996 epoch 29 - iter 240/601 - loss 4.03669045 - samples/sec: 6.93 - lr: 0.000500\n","2021-04-03 00:18:32,664 epoch 29 - iter 300/601 - loss 3.90802012 - samples/sec: 6.70 - lr: 0.000500\n","2021-04-03 00:19:41,934 epoch 29 - iter 360/601 - loss 3.87248283 - samples/sec: 6.93 - lr: 0.000500\n","2021-04-03 00:20:50,160 epoch 29 - iter 420/601 - loss 3.81799017 - samples/sec: 7.04 - lr: 0.000500\n","2021-04-03 00:22:00,846 epoch 29 - iter 480/601 - loss 3.85030589 - samples/sec: 6.79 - lr: 0.000500\n","2021-04-03 00:23:09,805 epoch 29 - iter 540/601 - loss 3.81865396 - samples/sec: 6.96 - lr: 0.000500\n","2021-04-03 00:24:19,019 epoch 29 - iter 600/601 - loss 3.75881560 - samples/sec: 6.94 - lr: 0.000500\n","2021-04-03 00:24:19,705 ----------------------------------------------------------------------------------------------------\n","2021-04-03 00:24:19,706 EPOCH 29 done: loss 3.7561 - lr 0.0005000\n","2021-04-03 00:25:01,483 DEV : loss 3.8085150718688965 - score 0.6509\n","2021-04-03 00:25:01,500 BAD EPOCHS (no improvement): 2\n","2021-04-03 00:25:01,504 ----------------------------------------------------------------------------------------------------\n","2021-04-03 00:26:08,792 epoch 30 - iter 60/601 - loss 3.72679054 - samples/sec: 7.13 - lr: 0.000500\n","2021-04-03 00:27:17,346 epoch 30 - iter 120/601 - loss 4.46062428 - samples/sec: 7.00 - lr: 0.000500\n","2021-04-03 00:28:27,596 epoch 30 - iter 180/601 - loss 4.05806990 - samples/sec: 6.83 - lr: 0.000500\n","2021-04-03 00:29:37,982 epoch 30 - iter 240/601 - loss 3.98919256 - samples/sec: 6.82 - lr: 0.000500\n","2021-04-03 00:30:47,140 epoch 30 - iter 300/601 - loss 3.96436075 - samples/sec: 6.94 - lr: 0.000500\n","2021-04-03 00:31:56,206 epoch 30 - iter 360/601 - loss 3.85823300 - samples/sec: 6.95 - lr: 0.000500\n","2021-04-03 00:33:08,428 epoch 30 - iter 420/601 - loss 3.80989135 - samples/sec: 6.65 - lr: 0.000500\n","2021-04-03 00:34:16,201 epoch 30 - iter 480/601 - loss 3.76997719 - samples/sec: 7.08 - lr: 0.000500\n","2021-04-03 00:35:25,514 epoch 30 - iter 540/601 - loss 3.74836122 - samples/sec: 6.93 - lr: 0.000500\n","2021-04-03 00:36:37,314 epoch 30 - iter 600/601 - loss 3.71952675 - samples/sec: 6.69 - lr: 0.000500\n","2021-04-03 00:36:38,061 ----------------------------------------------------------------------------------------------------\n","2021-04-03 00:36:38,063 EPOCH 30 done: loss 3.7170 - lr 0.0005000\n","2021-04-03 00:37:19,236 DEV : loss 3.7753725051879883 - score 0.6374\n","2021-04-03 00:37:19,254 BAD EPOCHS (no improvement): 3\n","2021-04-03 00:37:19,260 ----------------------------------------------------------------------------------------------------\n","2021-04-03 00:38:28,479 epoch 31 - iter 60/601 - loss 3.27848359 - samples/sec: 6.94 - lr: 0.000500\n","2021-04-03 00:39:37,361 epoch 31 - iter 120/601 - loss 3.45710475 - samples/sec: 6.97 - lr: 0.000500\n","2021-04-03 00:40:49,464 epoch 31 - iter 180/601 - loss 3.60696320 - samples/sec: 6.66 - lr: 0.000500\n","2021-04-03 00:42:00,730 epoch 31 - iter 240/601 - loss 3.53678950 - samples/sec: 6.74 - lr: 0.000500\n","2021-04-03 00:43:12,810 epoch 31 - iter 300/601 - loss 3.54057904 - samples/sec: 6.66 - lr: 0.000500\n","2021-04-03 00:44:19,895 epoch 31 - iter 360/601 - loss 3.55097554 - samples/sec: 7.16 - lr: 0.000500\n","2021-04-03 00:45:29,902 epoch 31 - iter 420/601 - loss 3.53264916 - samples/sec: 6.86 - lr: 0.000500\n","2021-04-03 00:46:44,311 epoch 31 - iter 480/601 - loss 3.55280544 - samples/sec: 6.45 - lr: 0.000500\n","2021-04-03 00:47:55,039 epoch 31 - iter 540/601 - loss 3.70222165 - samples/sec: 6.79 - lr: 0.000500\n","2021-04-03 00:48:57,590 epoch 31 - iter 600/601 - loss 3.68831107 - samples/sec: 7.67 - lr: 0.000500\n","2021-04-03 00:48:58,304 ----------------------------------------------------------------------------------------------------\n","2021-04-03 00:48:58,307 EPOCH 31 done: loss 3.6955 - lr 0.0005000\n","2021-04-03 00:49:39,564 DEV : loss 3.7491681575775146 - score 0.6326\n","Epoch    31: reducing learning rate of group 0 to 2.5000e-04.\n","2021-04-03 00:49:39,580 BAD EPOCHS (no improvement): 4\n","2021-04-03 00:49:39,584 ----------------------------------------------------------------------------------------------------\n","2021-04-03 00:50:50,551 epoch 32 - iter 60/601 - loss 3.04483315 - samples/sec: 6.76 - lr: 0.000250\n","2021-04-03 00:51:58,044 epoch 32 - iter 120/601 - loss 3.42076985 - samples/sec: 7.11 - lr: 0.000250\n","2021-04-03 00:53:10,416 epoch 32 - iter 180/601 - loss 3.59823481 - samples/sec: 6.63 - lr: 0.000250\n","2021-04-03 00:54:22,786 epoch 32 - iter 240/601 - loss 3.56657951 - samples/sec: 6.63 - lr: 0.000250\n","2021-04-03 00:55:33,703 epoch 32 - iter 300/601 - loss 3.56827803 - samples/sec: 6.77 - lr: 0.000250\n","2021-04-03 00:56:40,527 epoch 32 - iter 360/601 - loss 3.53897063 - samples/sec: 7.18 - lr: 0.000250\n","2021-04-03 00:57:48,143 epoch 32 - iter 420/601 - loss 3.56181075 - samples/sec: 7.10 - lr: 0.000250\n","2021-04-03 00:59:00,260 epoch 32 - iter 480/601 - loss 3.71933445 - samples/sec: 6.66 - lr: 0.000250\n","2021-04-03 01:00:11,525 epoch 32 - iter 540/601 - loss 3.67943873 - samples/sec: 6.74 - lr: 0.000250\n","2021-04-03 01:01:22,923 epoch 32 - iter 600/601 - loss 3.66609480 - samples/sec: 6.72 - lr: 0.000250\n","2021-04-03 01:01:23,746 ----------------------------------------------------------------------------------------------------\n","2021-04-03 01:01:23,749 EPOCH 32 done: loss 3.6639 - lr 0.0002500\n","2021-04-03 01:02:07,462 DEV : loss 3.7768771648406982 - score 0.6385\n","2021-04-03 01:02:07,481 BAD EPOCHS (no improvement): 1\n","2021-04-03 01:02:07,485 ----------------------------------------------------------------------------------------------------\n","2021-04-03 01:03:16,196 epoch 33 - iter 60/601 - loss 3.23332960 - samples/sec: 6.99 - lr: 0.000250\n","2021-04-03 01:04:27,750 epoch 33 - iter 120/601 - loss 3.57832800 - samples/sec: 6.71 - lr: 0.000250\n","2021-04-03 01:05:38,516 epoch 33 - iter 180/601 - loss 3.58621609 - samples/sec: 6.78 - lr: 0.000250\n","2021-04-03 01:06:50,959 epoch 33 - iter 240/601 - loss 3.57142122 - samples/sec: 6.63 - lr: 0.000250\n","2021-04-03 01:08:02,478 epoch 33 - iter 300/601 - loss 3.95839977 - samples/sec: 6.71 - lr: 0.000250\n","2021-04-03 01:09:08,379 epoch 33 - iter 360/601 - loss 3.83068330 - samples/sec: 7.28 - lr: 0.000250\n","2021-04-03 01:10:15,960 epoch 33 - iter 420/601 - loss 3.76072086 - samples/sec: 7.10 - lr: 0.000250\n","2021-04-03 01:11:26,412 epoch 33 - iter 480/601 - loss 3.72115842 - samples/sec: 6.81 - lr: 0.000250\n","2021-04-03 01:12:36,259 epoch 33 - iter 540/601 - loss 3.68095417 - samples/sec: 6.87 - lr: 0.000250\n","2021-04-03 01:13:47,172 epoch 33 - iter 600/601 - loss 3.63177770 - samples/sec: 6.77 - lr: 0.000250\n","2021-04-03 01:13:48,180 ----------------------------------------------------------------------------------------------------\n","2021-04-03 01:13:48,185 EPOCH 33 done: loss 3.6344 - lr 0.0002500\n","2021-04-03 01:14:30,418 DEV : loss 3.7891502380371094 - score 0.643\n","2021-04-03 01:14:30,433 BAD EPOCHS (no improvement): 2\n","2021-04-03 01:14:30,438 ----------------------------------------------------------------------------------------------------\n","2021-04-03 01:15:40,908 epoch 34 - iter 60/601 - loss 3.42231764 - samples/sec: 6.81 - lr: 0.000250\n","2021-04-03 01:16:50,125 epoch 34 - iter 120/601 - loss 3.30548243 - samples/sec: 6.94 - lr: 0.000250\n","2021-04-03 01:17:58,562 epoch 34 - iter 180/601 - loss 3.36389212 - samples/sec: 7.01 - lr: 0.000250\n","2021-04-03 01:19:05,040 epoch 34 - iter 240/601 - loss 3.29023767 - samples/sec: 7.22 - lr: 0.000250\n","2021-04-03 01:20:14,148 epoch 34 - iter 300/601 - loss 3.53645998 - samples/sec: 6.95 - lr: 0.000250\n","2021-04-03 01:21:27,849 epoch 34 - iter 360/601 - loss 3.52068637 - samples/sec: 6.51 - lr: 0.000250\n","2021-04-03 01:22:38,385 epoch 34 - iter 420/601 - loss 3.47441368 - samples/sec: 6.81 - lr: 0.000250\n","2021-04-03 01:23:50,539 epoch 34 - iter 480/601 - loss 3.53338972 - samples/sec: 6.65 - lr: 0.000250\n","2021-04-03 01:25:02,078 epoch 34 - iter 540/601 - loss 3.69072911 - samples/sec: 6.71 - lr: 0.000250\n","2021-04-03 01:26:13,818 epoch 34 - iter 600/601 - loss 3.62241988 - samples/sec: 6.69 - lr: 0.000250\n","2021-04-03 01:26:14,689 ----------------------------------------------------------------------------------------------------\n","2021-04-03 01:26:14,692 EPOCH 34 done: loss 3.6185 - lr 0.0002500\n","2021-04-03 01:26:57,037 DEV : loss 3.776987075805664 - score 0.6448\n","2021-04-03 01:26:57,054 BAD EPOCHS (no improvement): 3\n","2021-04-03 01:26:57,058 ----------------------------------------------------------------------------------------------------\n","2021-04-03 01:28:05,250 epoch 35 - iter 60/601 - loss 3.03044955 - samples/sec: 7.04 - lr: 0.000250\n","2021-04-03 01:29:15,930 epoch 35 - iter 120/601 - loss 3.16051961 - samples/sec: 6.79 - lr: 0.000250\n","2021-04-03 01:30:23,064 epoch 35 - iter 180/601 - loss 3.28824901 - samples/sec: 7.15 - lr: 0.000250\n","2021-04-03 01:31:36,283 epoch 35 - iter 240/601 - loss 3.73285516 - samples/sec: 6.56 - lr: 0.000250\n","2021-04-03 01:32:49,369 epoch 35 - iter 300/601 - loss 3.66519678 - samples/sec: 6.57 - lr: 0.000250\n","2021-04-03 01:33:55,105 epoch 35 - iter 360/601 - loss 3.59246660 - samples/sec: 7.30 - lr: 0.000250\n","2021-04-03 01:35:04,911 epoch 35 - iter 420/601 - loss 3.57721834 - samples/sec: 6.88 - lr: 0.000250\n","2021-04-03 01:36:16,452 epoch 35 - iter 480/601 - loss 3.59835862 - samples/sec: 6.71 - lr: 0.000250\n","2021-04-03 01:37:29,075 epoch 35 - iter 540/601 - loss 3.56198078 - samples/sec: 6.61 - lr: 0.000250\n","2021-04-03 01:38:40,133 epoch 35 - iter 600/601 - loss 3.59615348 - samples/sec: 6.76 - lr: 0.000250\n","2021-04-03 01:38:41,180 ----------------------------------------------------------------------------------------------------\n","2021-04-03 01:38:41,183 EPOCH 35 done: loss 3.6091 - lr 0.0002500\n","2021-04-03 01:39:23,993 DEV : loss 3.755347490310669 - score 0.6407\n","Epoch    35: reducing learning rate of group 0 to 1.2500e-04.\n","2021-04-03 01:39:24,009 BAD EPOCHS (no improvement): 4\n","2021-04-03 01:39:24,014 ----------------------------------------------------------------------------------------------------\n","2021-04-03 01:40:32,710 epoch 36 - iter 60/601 - loss 3.77546239 - samples/sec: 6.99 - lr: 0.000125\n","2021-04-03 01:41:43,044 epoch 36 - iter 120/601 - loss 3.60173857 - samples/sec: 6.83 - lr: 0.000125\n","2021-04-03 01:42:58,561 epoch 36 - iter 180/601 - loss 3.60573663 - samples/sec: 6.36 - lr: 0.000125\n","2021-04-03 01:44:12,114 epoch 36 - iter 240/601 - loss 3.64090685 - samples/sec: 6.53 - lr: 0.000125\n","2021-04-03 01:45:22,828 epoch 36 - iter 300/601 - loss 3.53787696 - samples/sec: 6.79 - lr: 0.000125\n","2021-04-03 01:46:34,157 epoch 36 - iter 360/601 - loss 3.49544116 - samples/sec: 6.73 - lr: 0.000125\n","2021-04-03 01:47:42,184 epoch 36 - iter 420/601 - loss 3.47212787 - samples/sec: 7.06 - lr: 0.000125\n","2021-04-03 01:48:50,995 epoch 36 - iter 480/601 - loss 3.44855884 - samples/sec: 6.98 - lr: 0.000125\n","2021-04-03 01:50:00,899 epoch 36 - iter 540/601 - loss 3.42130205 - samples/sec: 6.87 - lr: 0.000125\n","2021-04-03 01:51:10,702 epoch 36 - iter 600/601 - loss 3.58269999 - samples/sec: 6.88 - lr: 0.000125\n","2021-04-03 01:51:11,540 ----------------------------------------------------------------------------------------------------\n","2021-04-03 01:51:11,541 EPOCH 36 done: loss 3.5911 - lr 0.0001250\n","2021-04-03 01:51:55,974 DEV : loss 3.774803400039673 - score 0.6442\n","2021-04-03 01:51:55,992 BAD EPOCHS (no improvement): 1\n","2021-04-03 01:51:56,006 ----------------------------------------------------------------------------------------------------\n","2021-04-03 01:53:02,142 epoch 37 - iter 60/601 - loss 3.69975017 - samples/sec: 7.26 - lr: 0.000125\n","2021-04-03 01:54:13,751 epoch 37 - iter 120/601 - loss 3.47040449 - samples/sec: 6.70 - lr: 0.000125\n","2021-04-03 01:55:23,329 epoch 37 - iter 180/601 - loss 3.47253791 - samples/sec: 6.90 - lr: 0.000125\n","2021-04-03 01:56:33,517 epoch 37 - iter 240/601 - loss 3.82564632 - samples/sec: 6.84 - lr: 0.000125\n","2021-04-03 01:57:47,038 epoch 37 - iter 300/601 - loss 3.71161240 - samples/sec: 6.53 - lr: 0.000125\n","2021-04-03 01:58:56,194 epoch 37 - iter 360/601 - loss 3.65620741 - samples/sec: 6.94 - lr: 0.000125\n","2021-04-03 02:00:06,996 epoch 37 - iter 420/601 - loss 3.62713899 - samples/sec: 6.78 - lr: 0.000125\n","2021-04-03 02:01:17,834 epoch 37 - iter 480/601 - loss 3.59593180 - samples/sec: 6.78 - lr: 0.000125\n","2021-04-03 02:02:28,117 epoch 37 - iter 540/601 - loss 3.64059340 - samples/sec: 6.83 - lr: 0.000125\n","2021-04-03 02:03:38,790 epoch 37 - iter 600/601 - loss 3.62163297 - samples/sec: 6.79 - lr: 0.000125\n","2021-04-03 02:03:39,919 ----------------------------------------------------------------------------------------------------\n","2021-04-03 02:03:39,920 EPOCH 37 done: loss 3.6283 - lr 0.0001250\n","2021-04-03 02:04:21,914 DEV : loss 3.771433115005493 - score 0.6378\n","2021-04-03 02:04:21,930 BAD EPOCHS (no improvement): 2\n","2021-04-03 02:04:21,935 ----------------------------------------------------------------------------------------------------\n","2021-04-03 02:05:33,221 epoch 38 - iter 60/601 - loss 3.24138480 - samples/sec: 6.73 - lr: 0.000125\n","2021-04-03 02:06:41,984 epoch 38 - iter 120/601 - loss 3.68456863 - samples/sec: 6.98 - lr: 0.000125\n","2021-04-03 02:07:55,012 epoch 38 - iter 180/601 - loss 3.70594809 - samples/sec: 6.57 - lr: 0.000125\n","2021-04-03 02:09:06,540 epoch 38 - iter 240/601 - loss 4.17152421 - samples/sec: 6.71 - lr: 0.000125\n","2021-04-03 02:10:17,239 epoch 38 - iter 300/601 - loss 4.07730701 - samples/sec: 6.79 - lr: 0.000125\n","2021-04-03 02:11:29,173 epoch 38 - iter 360/601 - loss 4.00160713 - samples/sec: 6.67 - lr: 0.000125\n","2021-04-03 02:12:40,665 epoch 38 - iter 420/601 - loss 3.85457918 - samples/sec: 6.71 - lr: 0.000125\n","2021-04-03 02:13:47,750 epoch 38 - iter 480/601 - loss 3.82210963 - samples/sec: 7.16 - lr: 0.000125\n","2021-04-03 02:14:53,901 epoch 38 - iter 540/601 - loss 3.71578050 - samples/sec: 7.26 - lr: 0.000125\n","2021-04-03 02:16:06,413 epoch 38 - iter 600/601 - loss 3.64182211 - samples/sec: 6.62 - lr: 0.000125\n","2021-04-03 02:16:07,350 ----------------------------------------------------------------------------------------------------\n","2021-04-03 02:16:07,353 EPOCH 38 done: loss 3.6386 - lr 0.0001250\n","2021-04-03 02:16:49,337 DEV : loss 3.7689223289489746 - score 0.6396\n","2021-04-03 02:16:49,353 BAD EPOCHS (no improvement): 3\n","2021-04-03 02:16:49,358 ----------------------------------------------------------------------------------------------------\n","2021-04-03 02:17:58,391 epoch 39 - iter 60/601 - loss 3.37905495 - samples/sec: 6.95 - lr: 0.000125\n","2021-04-03 02:19:08,562 epoch 39 - iter 120/601 - loss 3.37320852 - samples/sec: 6.84 - lr: 0.000125\n","2021-04-03 02:20:20,251 epoch 39 - iter 180/601 - loss 3.50017281 - samples/sec: 6.70 - lr: 0.000125\n","2021-04-03 02:21:29,708 epoch 39 - iter 240/601 - loss 3.45501717 - samples/sec: 6.91 - lr: 0.000125\n","2021-04-03 02:22:42,163 epoch 39 - iter 300/601 - loss 3.48057334 - samples/sec: 6.63 - lr: 0.000125\n","2021-04-03 02:23:49,252 epoch 39 - iter 360/601 - loss 3.44894452 - samples/sec: 7.16 - lr: 0.000125\n","2021-04-03 02:24:58,660 epoch 39 - iter 420/601 - loss 3.47585064 - samples/sec: 6.92 - lr: 0.000125\n","2021-04-03 02:26:11,024 epoch 39 - iter 480/601 - loss 3.49906577 - samples/sec: 6.63 - lr: 0.000125\n","2021-04-03 02:27:22,675 epoch 39 - iter 540/601 - loss 3.64418651 - samples/sec: 6.70 - lr: 0.000125\n","2021-04-03 02:28:29,204 epoch 39 - iter 600/601 - loss 3.58954872 - samples/sec: 7.22 - lr: 0.000125\n","2021-04-03 02:28:30,094 ----------------------------------------------------------------------------------------------------\n","2021-04-03 02:28:30,096 EPOCH 39 done: loss 3.5901 - lr 0.0001250\n","2021-04-03 02:29:12,338 DEV : loss 3.7595267295837402 - score 0.6391\n","Epoch    39: reducing learning rate of group 0 to 6.2500e-05.\n","2021-04-03 02:29:12,354 BAD EPOCHS (no improvement): 4\n","2021-04-03 02:29:12,359 ----------------------------------------------------------------------------------------------------\n","2021-04-03 02:29:12,360 ----------------------------------------------------------------------------------------------------\n","2021-04-03 02:29:12,362 learning rate too small - quitting training!\n","2021-04-03 02:29:12,364 ----------------------------------------------------------------------------------------------------\n","2021-04-03 02:29:33,037 ----------------------------------------------------------------------------------------------------\n","2021-04-03 02:29:33,045 Testing using best model ...\n","2021-04-03 02:29:33,486 loading file /content/drive/MyDrive/Toxic Span Detection - Semeval 2021/1-4-2021/bert-large-glove/resources/taggers/example-ner/best-model.pt\n","2021-04-03 02:32:00,268 0.6667\t0.5942\t0.6284\n","2021-04-03 02:32:00,275 \n","Results:\n","- F1-score (micro) 0.6284\n","- F1-score (macro) 0.6284\n","\n","By class:\n","Toxic      tp: 432 - fp: 216 - fn: 295 - precision: 0.6667 - recall: 0.5942 - f1-score: 0.6284\n","2021-04-03 02:32:00,276 ----------------------------------------------------------------------------------------------------\n"],"name":"stdout"},{"output_type":"execute_result","data":{"text/plain":["{'dev_loss_history': [5.624788761138916,\n","  4.71959114074707,\n","  4.431738376617432,\n","  4.31041145324707,\n","  4.188173770904541,\n","  4.067915916442871,\n","  4.0224761962890625,\n","  3.955862283706665,\n","  3.904953718185425,\n","  3.94594669342041,\n","  3.9119906425476074,\n","  3.8628458976745605,\n","  3.876532793045044,\n","  3.816879987716675,\n","  3.8115549087524414,\n","  3.7720046043395996,\n","  3.823697328567505,\n","  3.7218048572540283,\n","  3.7408571243286133,\n","  3.7542076110839844,\n","  3.7056477069854736,\n","  3.7322349548339844,\n","  3.7220215797424316,\n","  3.710231065750122,\n","  3.723588228225708,\n","  3.74680495262146,\n","  3.8026351928710938,\n","  3.7128188610076904,\n","  3.8085150718688965,\n","  3.7753725051879883,\n","  3.7491681575775146,\n","  3.7768771648406982,\n","  3.7891502380371094,\n","  3.776987075805664,\n","  3.755347490310669,\n","  3.774803400039673,\n","  3.771433115005493,\n","  3.7689223289489746,\n","  3.7595267295837402],\n"," 'dev_score_history': [0.2633022490400439,\n","  0.411199331383201,\n","  0.5451070336391437,\n","  0.5790219702338767,\n","  0.5802120141342756,\n","  0.5931336742147554,\n","  0.600145137880987,\n","  0.6141672946495855,\n","  0.6205578907145587,\n","  0.628482972136223,\n","  0.636928702010969,\n","  0.6454986925663057,\n","  0.641785302039246,\n","  0.64547134935305,\n","  0.645608628659476,\n","  0.6447219069239501,\n","  0.6477400074710497,\n","  0.6343090033345683,\n","  0.6435643564356436,\n","  0.649811320754717,\n","  0.6374031722611583,\n","  0.646014355874575,\n","  0.6422641509433963,\n","  0.6411020104244229,\n","  0.6375321336760925,\n","  0.640625,\n","  0.6532588454376165,\n","  0.6321965529886322,\n","  0.6508831266441186,\n","  0.6373948042444201,\n","  0.6326086956521738,\n","  0.6384839650145774,\n","  0.6429892711801702,\n","  0.6448005963473724,\n","  0.6406767193821258,\n","  0.6441808747220164,\n","  0.6377981651376146,\n","  0.6396462785556375,\n","  0.6391143911439114],\n"," 'test_score': 0.6283636363636363,\n"," 'train_loss_history': [8.211023235876429,\n","  6.044647754726315,\n","  5.455436910845079,\n","  5.201328024292945,\n","  5.069762325524887,\n","  4.921651890987961,\n","  4.8290804906216716,\n","  4.686217154917027,\n","  4.6272351243928345,\n","  4.524228854901382,\n","  4.463480011794016,\n","  4.421350343255155,\n","  4.380391515630255,\n","  4.282859051683778,\n","  4.232708415651877,\n","  4.236435863221941,\n","  4.1611618301436035,\n","  4.113210919296087,\n","  4.063397484888848,\n","  4.006182466886206,\n","  3.962693974202167,\n","  3.955246489278092,\n","  3.900906635401848,\n","  3.8605894015950093,\n","  3.8145645541478315,\n","  3.8028539009578215,\n","  3.749585716875143,\n","  3.721358453672063,\n","  3.756090846216421,\n","  3.716999170387446,\n","  3.6954659129339524,\n","  3.663857579826317,\n","  3.6344237145092246,\n","  3.6184939293813785,\n","  3.6090910224470245,\n","  3.5910650615684205,\n","  3.6283132034212895,\n","  3.6385564256626832,\n","  3.5900780755945925]}"]},"metadata":{"tags":[]},"execution_count":5}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"okw7OwyU-dp-","executionInfo":{"status":"ok","timestamp":1617725908211,"user_tz":-330,"elapsed":33001,"user":{"displayName":"Harsh Kataria","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GimH0VsMEaiEzaEeo5nJzMe1WuJRQ2b1DK9fb3S=s64","userId":"07300304294680146354"}},"outputId":"50f5fac5-68a8-44c7-b7fb-573c92b46520"},"source":["from google.colab import drive\n","drive.mount('/content/drive')"],"execution_count":1,"outputs":[{"output_type":"stream","text":["Mounted at /content/drive\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"w3wueCtU0vMy","executionInfo":{"status":"ok","timestamp":1617726092555,"user_tz":-330,"elapsed":189897,"user":{"displayName":"Harsh Kataria","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GimH0VsMEaiEzaEeo5nJzMe1WuJRQ2b1DK9fb3S=s64","userId":"07300304294680146354"}},"outputId":"2a9b5a89-5802-4532-ec45-fe4b3b345291"},"source":["!pip install flair"],"execution_count":2,"outputs":[{"output_type":"stream","text":["Collecting flair\n","\u001b[?25l  Downloading https://files.pythonhosted.org/packages/f0/3a/1b46a0220d6176b22bcb9336619d1731301bc2c75fa926a9ef953e6e4d58/flair-0.8.0.post1-py3-none-any.whl (284kB)\n","\r\u001b[K     |█▏                              | 10kB 23.7MB/s eta 0:00:01\r\u001b[K     |██▎                             | 20kB 29.9MB/s eta 0:00:01\r\u001b[K     |███▌                            | 30kB 23.4MB/s eta 0:00:01\r\u001b[K     |████▋                           | 40kB 26.7MB/s eta 0:00:01\r\u001b[K     |█████▊                          | 51kB 25.4MB/s eta 0:00:01\r\u001b[K     |███████                         | 61kB 28.1MB/s eta 0:00:01\r\u001b[K     |████████                        | 71kB 18.9MB/s eta 0:00:01\r\u001b[K     |█████████▏                      | 81kB 19.8MB/s eta 0:00:01\r\u001b[K     |██████████▍                     | 92kB 18.7MB/s eta 0:00:01\r\u001b[K     |███████████▌                    | 102kB 18.6MB/s eta 0:00:01\r\u001b[K     |████████████▋                   | 112kB 18.6MB/s eta 0:00:01\r\u001b[K     |█████████████▉                  | 122kB 18.6MB/s eta 0:00:01\r\u001b[K     |███████████████                 | 133kB 18.6MB/s eta 0:00:01\r\u001b[K     |████████████████                | 143kB 18.6MB/s eta 0:00:01\r\u001b[K     |█████████████████▎              | 153kB 18.6MB/s eta 0:00:01\r\u001b[K     |██████████████████▍             | 163kB 18.6MB/s eta 0:00:01\r\u001b[K     |███████████████████▋            | 174kB 18.6MB/s eta 0:00:01\r\u001b[K     |████████████████████▊           | 184kB 18.6MB/s eta 0:00:01\r\u001b[K     |█████████████████████▉          | 194kB 18.6MB/s eta 0:00:01\r\u001b[K     |███████████████████████         | 204kB 18.6MB/s eta 0:00:01\r\u001b[K     |████████████████████████▏       | 215kB 18.6MB/s eta 0:00:01\r\u001b[K     |█████████████████████████▎      | 225kB 18.6MB/s eta 0:00:01\r\u001b[K     |██████████████████████████▌     | 235kB 18.6MB/s eta 0:00:01\r\u001b[K     |███████████████████████████▋    | 245kB 18.6MB/s eta 0:00:01\r\u001b[K     |████████████████████████████▊   | 256kB 18.6MB/s eta 0:00:01\r\u001b[K     |██████████████████████████████  | 266kB 18.6MB/s eta 0:00:01\r\u001b[K     |███████████████████████████████ | 276kB 18.6MB/s eta 0:00:01\r\u001b[K     |████████████████████████████████| 286kB 18.6MB/s \n","\u001b[?25hRequirement already satisfied: matplotlib>=2.2.3 in /usr/local/lib/python3.7/dist-packages (from flair) (3.2.2)\n","Requirement already satisfied: lxml in /usr/local/lib/python3.7/dist-packages (from flair) (4.2.6)\n","Collecting konoha<5.0.0,>=4.0.0\n","  Downloading https://files.pythonhosted.org/packages/02/be/4dd30d56a0a19619deb9bf41ba8202709fa83b1b301b876572cd6dc38117/konoha-4.6.4-py3-none-any.whl\n","Requirement already satisfied: python-dateutil>=2.6.1 in /usr/local/lib/python3.7/dist-packages (from flair) (2.8.1)\n","Collecting torch<=1.7.1,>=1.5.0\n","\u001b[?25l  Downloading https://files.pythonhosted.org/packages/90/5d/095ddddc91c8a769a68c791c019c5793f9c4456a688ddd235d6670924ecb/torch-1.7.1-cp37-cp37m-manylinux1_x86_64.whl (776.8MB)\n","\u001b[K     |████████████████████████████████| 776.8MB 24kB/s \n","\u001b[?25hCollecting bpemb>=0.3.2\n","  Downloading https://files.pythonhosted.org/packages/91/77/3f0f53856e86af32b1d3c86652815277f7b5f880002584eb30db115b6df5/bpemb-0.3.2-py3-none-any.whl\n","Requirement already satisfied: regex in /usr/local/lib/python3.7/dist-packages (from flair) (2019.12.20)\n","Collecting langdetect\n","\u001b[?25l  Downloading https://files.pythonhosted.org/packages/56/a3/8407c1e62d5980188b4acc45ef3d94b933d14a2ebc9ef3505f22cf772570/langdetect-1.0.8.tar.gz (981kB)\n","\u001b[K     |████████████████████████████████| 983kB 48.2MB/s \n","\u001b[?25hRequirement already satisfied: numpy<1.20.0 in /usr/local/lib/python3.7/dist-packages (from flair) (1.19.5)\n","Collecting sqlitedict>=1.6.0\n","  Downloading https://files.pythonhosted.org/packages/5c/2d/b1d99e9ad157dd7de9cd0d36a8a5876b13b55e4b75f7498bc96035fb4e96/sqlitedict-1.7.0.tar.gz\n","Collecting sentencepiece==0.1.95\n","\u001b[?25l  Downloading https://files.pythonhosted.org/packages/f5/99/e0808cb947ba10f575839c43e8fafc9cc44e4a7a2c8f79c60db48220a577/sentencepiece-0.1.95-cp37-cp37m-manylinux2014_x86_64.whl (1.2MB)\n","\u001b[K     |████████████████████████████████| 1.2MB 48.9MB/s \n","\u001b[?25hRequirement already satisfied: gensim<=3.8.3,>=3.4.0 in /usr/local/lib/python3.7/dist-packages (from flair) (3.6.0)\n","Collecting huggingface-hub\n","  Downloading https://files.pythonhosted.org/packages/af/07/bf95f398e6598202d878332280f36e589512174882536eb20d792532a57d/huggingface_hub-0.0.7-py3-none-any.whl\n","Collecting gdown==3.12.2\n","  Downloading https://files.pythonhosted.org/packages/50/21/92c3cfe56f5c0647145c4b0083d0733dd4890a057eb100a8eeddf949ffe9/gdown-3.12.2.tar.gz\n","  Installing build dependencies ... \u001b[?25l\u001b[?25hdone\n","  Getting requirements to build wheel ... \u001b[?25l\u001b[?25hdone\n","    Preparing wheel metadata ... \u001b[?25l\u001b[?25hdone\n","Requirement already satisfied: scikit-learn>=0.21.3 in /usr/local/lib/python3.7/dist-packages (from flair) (0.22.2.post1)\n","Requirement already satisfied: hyperopt>=0.1.1 in /usr/local/lib/python3.7/dist-packages (from flair) (0.1.2)\n","Requirement already satisfied: tqdm>=4.26.0 in /usr/local/lib/python3.7/dist-packages (from flair) (4.41.1)\n","Collecting janome\n","\u001b[?25l  Downloading https://files.pythonhosted.org/packages/a8/63/98858cbead27df7536c7e300c169da0999e9704d02220dc6700b804eeff0/Janome-0.4.1-py2.py3-none-any.whl (19.7MB)\n","\u001b[K     |████████████████████████████████| 19.7MB 33.2MB/s \n","\u001b[?25hRequirement already satisfied: tabulate in /usr/local/lib/python3.7/dist-packages (from flair) (0.8.9)\n","Collecting ftfy\n","\u001b[?25l  Downloading https://files.pythonhosted.org/packages/04/06/e5c80e2e0f979628d47345efba51f7ba386fe95963b11c594209085f5a9b/ftfy-5.9.tar.gz (66kB)\n","\u001b[K     |████████████████████████████████| 71kB 11.1MB/s \n","\u001b[?25hCollecting segtok>=1.5.7\n","  Downloading https://files.pythonhosted.org/packages/41/08/582dab5f4b1d5ca23bc6927b4bb977c8ff7f3a87a3b98844ef833e2f5623/segtok-1.5.10.tar.gz\n","Collecting mpld3==0.3\n","\u001b[?25l  Downloading https://files.pythonhosted.org/packages/91/95/a52d3a83d0a29ba0d6898f6727e9858fe7a43f6c2ce81a5fe7e05f0f4912/mpld3-0.3.tar.gz (788kB)\n","\u001b[K     |████████████████████████████████| 798kB 48.7MB/s \n","\u001b[?25hCollecting transformers>=4.0.0\n","\u001b[?25l  Downloading https://files.pythonhosted.org/packages/ed/d5/f4157a376b8a79489a76ce6cfe147f4f3be1e029b7144fa7b8432e8acb26/transformers-4.4.2-py3-none-any.whl (2.0MB)\n","\u001b[K     |████████████████████████████████| 2.0MB 45.2MB/s \n","\u001b[?25hCollecting deprecated>=1.2.4\n","  Downloading https://files.pythonhosted.org/packages/fb/73/994edfcba74443146c84b91921fcc269374354118d4f452fb0c54c1cbb12/Deprecated-1.2.12-py2.py3-none-any.whl\n","Requirement already satisfied: cycler>=0.10 in /usr/local/lib/python3.7/dist-packages (from matplotlib>=2.2.3->flair) (0.10.0)\n","Requirement already satisfied: kiwisolver>=1.0.1 in /usr/local/lib/python3.7/dist-packages (from matplotlib>=2.2.3->flair) (1.3.1)\n","Requirement already satisfied: pyparsing!=2.0.4,!=2.1.2,!=2.1.6,>=2.0.1 in /usr/local/lib/python3.7/dist-packages (from matplotlib>=2.2.3->flair) (2.4.7)\n","Collecting overrides<4.0.0,>=3.0.0\n","  Downloading https://files.pythonhosted.org/packages/ff/b1/10f69c00947518e6676bbd43e739733048de64b8dd998e9c2d5a71f44c5d/overrides-3.1.0.tar.gz\n","Requirement already satisfied: importlib-metadata<4.0.0,>=3.7.0 in /usr/local/lib/python3.7/dist-packages (from konoha<5.0.0,>=4.0.0->flair) (3.8.1)\n","Collecting requests<3.0.0,>=2.25.1\n","\u001b[?25l  Downloading https://files.pythonhosted.org/packages/29/c1/24814557f1d22c56d50280771a17307e6bf87b70727d975fd6b2ce6b014a/requests-2.25.1-py2.py3-none-any.whl (61kB)\n","\u001b[K     |████████████████████████████████| 61kB 9.5MB/s \n","\u001b[?25hRequirement already satisfied: six>=1.5 in /usr/local/lib/python3.7/dist-packages (from python-dateutil>=2.6.1->flair) (1.15.0)\n","Requirement already satisfied: typing-extensions in /usr/local/lib/python3.7/dist-packages (from torch<=1.7.1,>=1.5.0->flair) (3.7.4.3)\n","Requirement already satisfied: smart-open>=1.2.1 in /usr/local/lib/python3.7/dist-packages (from gensim<=3.8.3,>=3.4.0->flair) (4.2.0)\n","Requirement already satisfied: scipy>=0.18.1 in /usr/local/lib/python3.7/dist-packages (from gensim<=3.8.3,>=3.4.0->flair) (1.4.1)\n","Requirement already satisfied: filelock in /usr/local/lib/python3.7/dist-packages (from huggingface-hub->flair) (3.0.12)\n","Requirement already satisfied: joblib>=0.11 in /usr/local/lib/python3.7/dist-packages (from scikit-learn>=0.21.3->flair) (1.0.1)\n","Requirement already satisfied: networkx in /usr/local/lib/python3.7/dist-packages (from hyperopt>=0.1.1->flair) (2.5)\n","Requirement already satisfied: pymongo in /usr/local/lib/python3.7/dist-packages (from hyperopt>=0.1.1->flair) (3.11.3)\n","Requirement already satisfied: future in /usr/local/lib/python3.7/dist-packages (from hyperopt>=0.1.1->flair) (0.16.0)\n","Requirement already satisfied: wcwidth in /usr/local/lib/python3.7/dist-packages (from ftfy->flair) (0.2.5)\n","Requirement already satisfied: packaging in /usr/local/lib/python3.7/dist-packages (from transformers>=4.0.0->flair) (20.9)\n","Collecting tokenizers<0.11,>=0.10.1\n","\u001b[?25l  Downloading https://files.pythonhosted.org/packages/ae/04/5b870f26a858552025a62f1649c20d29d2672c02ff3c3fb4c688ca46467a/tokenizers-0.10.2-cp37-cp37m-manylinux2010_x86_64.whl (3.3MB)\n","\u001b[K     |████████████████████████████████| 3.3MB 48.1MB/s \n","\u001b[?25hCollecting sacremoses\n","\u001b[?25l  Downloading https://files.pythonhosted.org/packages/08/cd/342e584ee544d044fb573ae697404ce22ede086c9e87ce5960772084cad0/sacremoses-0.0.44.tar.gz (862kB)\n","\u001b[K     |████████████████████████████████| 870kB 54.9MB/s \n","\u001b[?25hRequirement already satisfied: wrapt<2,>=1.10 in /usr/local/lib/python3.7/dist-packages (from deprecated>=1.2.4->flair) (1.12.1)\n","Requirement already satisfied: zipp>=0.5 in /usr/local/lib/python3.7/dist-packages (from importlib-metadata<4.0.0,>=3.7.0->konoha<5.0.0,>=4.0.0->flair) (3.4.1)\n","Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.7/dist-packages (from requests<3.0.0,>=2.25.1->konoha<5.0.0,>=4.0.0->flair) (2020.12.5)\n","Requirement already satisfied: idna<3,>=2.5 in /usr/local/lib/python3.7/dist-packages (from requests<3.0.0,>=2.25.1->konoha<5.0.0,>=4.0.0->flair) (2.10)\n","Requirement already satisfied: urllib3<1.27,>=1.21.1 in /usr/local/lib/python3.7/dist-packages (from requests<3.0.0,>=2.25.1->konoha<5.0.0,>=4.0.0->flair) (1.24.3)\n","Requirement already satisfied: chardet<5,>=3.0.2 in /usr/local/lib/python3.7/dist-packages (from requests<3.0.0,>=2.25.1->konoha<5.0.0,>=4.0.0->flair) (3.0.4)\n","Requirement already satisfied: decorator>=4.3.0 in /usr/local/lib/python3.7/dist-packages (from networkx->hyperopt>=0.1.1->flair) (4.4.2)\n","Requirement already satisfied: click in /usr/local/lib/python3.7/dist-packages (from sacremoses->transformers>=4.0.0->flair) (7.1.2)\n","Building wheels for collected packages: gdown\n","  Building wheel for gdown (PEP 517) ... \u001b[?25l\u001b[?25hdone\n","  Created wheel for gdown: filename=gdown-3.12.2-cp37-none-any.whl size=9693 sha256=3ff70829b9bf19d3aa027c97dd930b7361eb3b4f530190910d85a6580687f487\n","  Stored in directory: /root/.cache/pip/wheels/81/d0/d7/d9983facc6f2775411803e0e2d30ebf98efbf2fc6e57701e09\n","Successfully built gdown\n","Building wheels for collected packages: langdetect, sqlitedict, ftfy, segtok, mpld3, overrides, sacremoses\n","  Building wheel for langdetect (setup.py) ... \u001b[?25l\u001b[?25hdone\n","  Created wheel for langdetect: filename=langdetect-1.0.8-cp37-none-any.whl size=993193 sha256=c9eaa77c464948ec7d97e9b0f5741086fcdb1d0bf887b090d75b0283797e0e44\n","  Stored in directory: /root/.cache/pip/wheels/8d/b3/aa/6d99de9f3841d7d3d40a60ea06e6d669e8e5012e6c8b947a57\n","  Building wheel for sqlitedict (setup.py) ... \u001b[?25l\u001b[?25hdone\n","  Created wheel for sqlitedict: filename=sqlitedict-1.7.0-cp37-none-any.whl size=14376 sha256=90edb1459b634e52ef335e71631757a91c5354a0d69b690fb383f0e832348a10\n","  Stored in directory: /root/.cache/pip/wheels/cf/c6/4f/2c64a43f041415eb8b8740bd80e15e92f0d46c5e464d8e4b9b\n","  Building wheel for ftfy (setup.py) ... \u001b[?25l\u001b[?25hdone\n","  Created wheel for ftfy: filename=ftfy-5.9-cp37-none-any.whl size=46451 sha256=aaafec354aad0a2044e5ba211d7570862cc3d1a05323c33640c3c60907618522\n","  Stored in directory: /root/.cache/pip/wheels/5e/2e/f0/b07196e8c929114998f0316894a61c752b63bfa3fdd50d2fc3\n","  Building wheel for segtok (setup.py) ... \u001b[?25l\u001b[?25hdone\n","  Created wheel for segtok: filename=segtok-1.5.10-cp37-none-any.whl size=25019 sha256=72ef20dbe0ba0342b775384763f667416bbfebf646640a1a71001fe54e5fa44c\n","  Stored in directory: /root/.cache/pip/wheels/b4/39/f6/9ca1c5cabde964d728023b5751c3a206a5c8cc40252321fb6b\n","  Building wheel for mpld3 (setup.py) ... \u001b[?25l\u001b[?25hdone\n","  Created wheel for mpld3: filename=mpld3-0.3-cp37-none-any.whl size=116679 sha256=824a0160d5d041a1726d13ecc711aeafcdb70104fd2a94d1f7601d07dc3f4e43\n","  Stored in directory: /root/.cache/pip/wheels/c0/47/fb/8a64f89aecfe0059830479308ad42d62e898a3e3cefdf6ba28\n","  Building wheel for overrides (setup.py) ... \u001b[?25l\u001b[?25hdone\n","  Created wheel for overrides: filename=overrides-3.1.0-cp37-none-any.whl size=10174 sha256=851ff8540be0d724a67b3bcfd0edb1005e38a1b1dbfeb2e9cc56889e164ea373\n","  Stored in directory: /root/.cache/pip/wheels/5c/24/13/6ef8600e6f147c95e595f1289a86a3cc82ed65df57582c65a9\n","  Building wheel for sacremoses (setup.py) ... \u001b[?25l\u001b[?25hdone\n","  Created wheel for sacremoses: filename=sacremoses-0.0.44-cp37-none-any.whl size=886084 sha256=3be73cd06330fd804d6e4bef745870b913bdfed090dec1323d6095121666e0cf\n","  Stored in directory: /root/.cache/pip/wheels/3e/fb/c0/13ab4d63d537658f448366744654323077c4d90069b6512f3c\n","Successfully built langdetect sqlitedict ftfy segtok mpld3 overrides sacremoses\n","\u001b[31mERROR: torchvision 0.9.1+cu101 has requirement torch==1.8.1, but you'll have torch 1.7.1 which is incompatible.\u001b[0m\n","\u001b[31mERROR: torchtext 0.9.1 has requirement torch==1.8.1, but you'll have torch 1.7.1 which is incompatible.\u001b[0m\n","\u001b[31mERROR: google-colab 1.0.0 has requirement requests~=2.23.0, but you'll have requests 2.25.1 which is incompatible.\u001b[0m\n","\u001b[31mERROR: datascience 0.10.6 has requirement folium==0.2.1, but you'll have folium 0.8.3 which is incompatible.\u001b[0m\n","Installing collected packages: overrides, requests, konoha, torch, sentencepiece, bpemb, langdetect, sqlitedict, huggingface-hub, gdown, janome, ftfy, segtok, mpld3, tokenizers, sacremoses, transformers, deprecated, flair\n","  Found existing installation: requests 2.23.0\n","    Uninstalling requests-2.23.0:\n","      Successfully uninstalled requests-2.23.0\n","  Found existing installation: torch 1.8.1+cu101\n","    Uninstalling torch-1.8.1+cu101:\n","      Successfully uninstalled torch-1.8.1+cu101\n","  Found existing installation: gdown 3.6.4\n","    Uninstalling gdown-3.6.4:\n","      Successfully uninstalled gdown-3.6.4\n","Successfully installed bpemb-0.3.2 deprecated-1.2.12 flair-0.8.0.post1 ftfy-5.9 gdown-3.12.2 huggingface-hub-0.0.7 janome-0.4.1 konoha-4.6.4 langdetect-1.0.8 mpld3-0.3 overrides-3.1.0 requests-2.25.1 sacremoses-0.0.44 segtok-1.5.10 sentencepiece-0.1.95 sqlitedict-1.7.0 tokenizers-0.10.2 torch-1.7.1 transformers-4.4.2\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"wjCUj2gSHqH2","executionInfo":{"status":"ok","timestamp":1617711516559,"user_tz":-330,"elapsed":7320,"user":{"displayName":"Harsh Kataria","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GimH0VsMEaiEzaEeo5nJzMe1WuJRQ2b1DK9fb3S=s64","userId":"07300304294680146354"}},"outputId":"59fc16e6-6948-404f-8bf4-9a1ff3522636"},"source":["!pip install seqeval"],"execution_count":60,"outputs":[{"output_type":"stream","text":["Collecting seqeval\n","\u001b[?25l  Downloading https://files.pythonhosted.org/packages/9d/2d/233c79d5b4e5ab1dbf111242299153f3caddddbb691219f363ad55ce783d/seqeval-1.2.2.tar.gz (43kB)\n","\r\u001b[K     |███████▌                        | 10kB 15.3MB/s eta 0:00:01\r\u001b[K     |███████████████                 | 20kB 21.6MB/s eta 0:00:01\r\u001b[K     |██████████████████████▌         | 30kB 20.6MB/s eta 0:00:01\r\u001b[K     |██████████████████████████████  | 40kB 17.3MB/s eta 0:00:01\r\u001b[K     |████████████████████████████████| 51kB 4.1MB/s \n","\u001b[?25hRequirement already satisfied: numpy>=1.14.0 in /usr/local/lib/python3.7/dist-packages (from seqeval) (1.19.5)\n","Requirement already satisfied: scikit-learn>=0.21.3 in /usr/local/lib/python3.7/dist-packages (from seqeval) (0.22.2.post1)\n","Requirement already satisfied: joblib>=0.11 in /usr/local/lib/python3.7/dist-packages (from scikit-learn>=0.21.3->seqeval) (1.0.1)\n","Requirement already satisfied: scipy>=0.17.0 in /usr/local/lib/python3.7/dist-packages (from scikit-learn>=0.21.3->seqeval) (1.4.1)\n","Building wheels for collected packages: seqeval\n","  Building wheel for seqeval (setup.py) ... \u001b[?25l\u001b[?25hdone\n","  Created wheel for seqeval: filename=seqeval-1.2.2-cp37-none-any.whl size=16172 sha256=1a184f26f9d538e874e4a8dda90020c775e57d37cb20ec1c3bd5020ab7b1c640\n","  Stored in directory: /root/.cache/pip/wheels/52/df/1b/45d75646c37428f7e626214704a0e35bd3cfc32eda37e59e5f\n","Successfully built seqeval\n","Installing collected packages: seqeval\n","Successfully installed seqeval-1.2.2\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"hvqZ3X0rgNow","executionInfo":{"status":"ok","timestamp":1617726098413,"user_tz":-330,"elapsed":5843,"user":{"displayName":"Harsh Kataria","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GimH0VsMEaiEzaEeo5nJzMe1WuJRQ2b1DK9fb3S=s64","userId":"07300304294680146354"}}},"source":["from flair.models import SequenceTagger\n","from flair.data import Sentence\n","import pandas as pd"],"execution_count":3,"outputs":[]},{"cell_type":"code","metadata":{"id":"Q2s-vJOYkArJ","executionInfo":{"status":"ok","timestamp":1617726163266,"user_tz":-330,"elapsed":765,"user":{"displayName":"Harsh Kataria","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GimH0VsMEaiEzaEeo5nJzMe1WuJRQ2b1DK9fb3S=s64","userId":"07300304294680146354"}}},"source":["import re\n","import numpy as np"],"execution_count":8,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":419},"id":"AnAZUEEUiBua","executionInfo":{"status":"ok","timestamp":1617701660442,"user_tz":-330,"elapsed":2004,"user":{"displayName":"Harsh Kataria","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GimH0VsMEaiEzaEeo5nJzMe1WuJRQ2b1DK9fb3S=s64","userId":"07300304294680146354"}},"outputId":"114a260d-7748-4fa0-ec0d-669345eccef1"},"source":["df = pd.read_csv('/content/drive/MyDrive/Toxic Span Detection - Semeval 2021/1-4-2021/real_test_f1.csv')\n","df"],"execution_count":11,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>id</th>\n","      <th>text</th>\n","      <th>labels</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>15</td>\n","      <td>Again proving my point that right wing nuts ar...</td>\n","      <td>[[48, 53, 'Toxic']]</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>20</td>\n","      <td>Ok Lars, its not fire, but its matches, gasoli...</td>\n","      <td>[[186, 189, 'Toxic']]</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>37</td>\n","      <td>Congratulations on wasting your pathetic life ...</td>\n","      <td>[[32, 39, 'Toxic'], [67, 72, 'Toxic']]</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>39</td>\n","      <td>What a stupid time to close drilling in the Ar...</td>\n","      <td>[[7, 12, 'Toxic']]</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>51</td>\n","      <td>According to crushedhopesnation Ovechkin is ex...</td>\n","      <td>[[75, 87, 'Toxic']]</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>554</th>\n","      <td>5881</td>\n","      <td>clearly you are one of the lunatic liberals,,y...</td>\n","      <td>[[148, 153, 'Toxic']]</td>\n","    </tr>\n","    <tr>\n","      <th>555</th>\n","      <td>5883</td>\n","      <td>Trump Plans To Blow Up Iran Deal Because He Re...</td>\n","      <td>[[56, 60, 'Toxic']]</td>\n","    </tr>\n","    <tr>\n","      <th>556</th>\n","      <td>5889</td>\n","      <td>Damn, he was good. Seems we always find a way ...</td>\n","      <td>[[0, 3, 'Toxic']]</td>\n","    </tr>\n","    <tr>\n","      <th>557</th>\n","      <td>5890</td>\n","      <td>Beyak misses the point entirely. The PURPOSE O...</td>\n","      <td>[[409, 414, 'Toxic']]</td>\n","    </tr>\n","    <tr>\n","      <th>558</th>\n","      <td>5894</td>\n","      <td>Same defense attorney that got Alexandra Ellis...</td>\n","      <td>[[86, 89, 'Toxic']]</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>559 rows × 3 columns</p>\n","</div>"],"text/plain":["       id  ...                                  labels\n","0      15  ...                     [[48, 53, 'Toxic']]\n","1      20  ...                   [[186, 189, 'Toxic']]\n","2      37  ...  [[32, 39, 'Toxic'], [67, 72, 'Toxic']]\n","3      39  ...                      [[7, 12, 'Toxic']]\n","4      51  ...                     [[75, 87, 'Toxic']]\n","..    ...  ...                                     ...\n","554  5881  ...                   [[148, 153, 'Toxic']]\n","555  5883  ...                     [[56, 60, 'Toxic']]\n","556  5889  ...                       [[0, 3, 'Toxic']]\n","557  5890  ...                   [[409, 414, 'Toxic']]\n","558  5894  ...                     [[86, 89, 'Toxic']]\n","\n","[559 rows x 3 columns]"]},"metadata":{"tags":[]},"execution_count":11}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"OiiSja0tj2Dh","executionInfo":{"status":"ok","timestamp":1617703027244,"user_tz":-330,"elapsed":960,"user":{"displayName":"Harsh Kataria","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GimH0VsMEaiEzaEeo5nJzMe1WuJRQ2b1DK9fb3S=s64","userId":"07300304294680146354"}},"outputId":"8cd24cbd-a708-49ed-896f-df3fc3190bab"},"source":["for i in range(len(df)):\n","    df['cleaned_text'][i] = ''.join(remove_punctuation(list(df['text'][i])))\n","    # print(cln_txt)"],"execution_count":31,"outputs":[{"output_type":"stream","text":["/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:2: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  \n"],"name":"stderr"}]},{"cell_type":"code","metadata":{"id":"qEwcvmC8Sr1g","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1617727278297,"user_tz":-330,"elapsed":56811,"user":{"displayName":"Harsh Kataria","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GimH0VsMEaiEzaEeo5nJzMe1WuJRQ2b1DK9fb3S=s64","userId":"07300304294680146354"}},"outputId":"07c8d235-a0dd-45bd-a1b3-ce8ae241ddce"},"source":["# load the model you trained\n","model = SequenceTagger.load('/content/drive/MyDrive/Toxic Span Detection - Semeval 2021/1-4-2021/bert-large/resources/taggers/example-ner/best-model.pt')"],"execution_count":33,"outputs":[{"output_type":"stream","text":["2021-04-06 16:40:22,624 loading file /content/drive/MyDrive/Toxic Span Detection - Semeval 2021/1-4-2021/bert-large/resources/taggers/example-ner/best-model.pt\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":419},"id":"LhAM4oaGnc2S","executionInfo":{"status":"ok","timestamp":1617726100180,"user_tz":-330,"elapsed":7594,"user":{"displayName":"Harsh Kataria","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GimH0VsMEaiEzaEeo5nJzMe1WuJRQ2b1DK9fb3S=s64","userId":"07300304294680146354"}},"outputId":"0fe47c42-4160-490b-8eaa-16b47e06fd44"},"source":["df = pd.read_csv('/content/drive/MyDrive/Toxic Span Detection - Semeval 2021/1-4-2021/real_test_f1_cleaned-text.csv')\n","df"],"execution_count":4,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Unnamed: 0</th>\n","      <th>id</th>\n","      <th>text</th>\n","      <th>labels</th>\n","      <th>cleaned_text</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>15</td>\n","      <td>Again proving my point that right wing nuts ar...</td>\n","      <td>[[48, 53, 'Toxic']]</td>\n","      <td>Again proving my point that right wing nuts ar...</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>20</td>\n","      <td>Ok Lars, its not fire, but its matches, gasoli...</td>\n","      <td>[[186, 189, 'Toxic']]</td>\n","      <td>Ok Lars  its not fire  but its matches  gasoli...</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2</td>\n","      <td>37</td>\n","      <td>Congratulations on wasting your pathetic life ...</td>\n","      <td>[[32, 39, 'Toxic'], [67, 72, 'Toxic']]</td>\n","      <td>Congratulations on wasting your pathetic life ...</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>3</td>\n","      <td>39</td>\n","      <td>What a stupid time to close drilling in the Ar...</td>\n","      <td>[[7, 12, 'Toxic']]</td>\n","      <td>What a stupid time to close drilling in the Ar...</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>4</td>\n","      <td>51</td>\n","      <td>According to crushedhopesnation Ovechkin is ex...</td>\n","      <td>[[75, 87, 'Toxic']]</td>\n","      <td>According to crushedhopesnation Ovechkin is ex...</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>554</th>\n","      <td>554</td>\n","      <td>5881</td>\n","      <td>clearly you are one of the lunatic liberals,,y...</td>\n","      <td>[[148, 153, 'Toxic']]</td>\n","      <td>clearly you are one of the lunatic liberals  y...</td>\n","    </tr>\n","    <tr>\n","      <th>555</th>\n","      <td>555</td>\n","      <td>5883</td>\n","      <td>Trump Plans To Blow Up Iran Deal Because He Re...</td>\n","      <td>[[56, 60, 'Toxic']]</td>\n","      <td>Trump Plans To Blow Up Iran Deal Because He Re...</td>\n","    </tr>\n","    <tr>\n","      <th>556</th>\n","      <td>556</td>\n","      <td>5889</td>\n","      <td>Damn, he was good. Seems we always find a way ...</td>\n","      <td>[[0, 3, 'Toxic']]</td>\n","      <td>Damn  he was good  Seems we always find a way ...</td>\n","    </tr>\n","    <tr>\n","      <th>557</th>\n","      <td>557</td>\n","      <td>5890</td>\n","      <td>Beyak misses the point entirely. The PURPOSE O...</td>\n","      <td>[[409, 414, 'Toxic']]</td>\n","      <td>Beyak misses the point entirely  The PURPOSE O...</td>\n","    </tr>\n","    <tr>\n","      <th>558</th>\n","      <td>558</td>\n","      <td>5894</td>\n","      <td>Same defense attorney that got Alexandra Ellis...</td>\n","      <td>[[86, 89, 'Toxic']]</td>\n","      <td>Same defense attorney that got Alexandra Ellis...</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>559 rows × 5 columns</p>\n","</div>"],"text/plain":["     Unnamed: 0  ...                                       cleaned_text\n","0             0  ...  Again proving my point that right wing nuts ar...\n","1             1  ...  Ok Lars  its not fire  but its matches  gasoli...\n","2             2  ...  Congratulations on wasting your pathetic life ...\n","3             3  ...  What a stupid time to close drilling in the Ar...\n","4             4  ...  According to crushedhopesnation Ovechkin is ex...\n","..          ...  ...                                                ...\n","554         554  ...  clearly you are one of the lunatic liberals  y...\n","555         555  ...  Trump Plans To Blow Up Iran Deal Because He Re...\n","556         556  ...  Damn  he was good  Seems we always find a way ...\n","557         557  ...  Beyak misses the point entirely  The PURPOSE O...\n","558         558  ...  Same defense attorney that got Alexandra Ellis...\n","\n","[559 rows x 5 columns]"]},"metadata":{"tags":[]},"execution_count":4}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":572},"id":"HThkTLEjm5WX","executionInfo":{"status":"ok","timestamp":1617727279556,"user_tz":-330,"elapsed":1229,"user":{"displayName":"Harsh Kataria","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GimH0VsMEaiEzaEeo5nJzMe1WuJRQ2b1DK9fb3S=s64","userId":"07300304294680146354"}},"outputId":"29ccd017-a9d5-4d1e-e4bd-dbcb7a02617e"},"source":["df['bert_large'] = np.nan\n","df"],"execution_count":34,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>id</th>\n","      <th>text</th>\n","      <th>labels</th>\n","      <th>cleaned_text</th>\n","      <th>bert_large_glove</th>\n","      <th>bert_base_glove</th>\n","      <th>bert_base</th>\n","      <th>bert_large</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>15</td>\n","      <td>Again proving my point that right wing nuts ar...</td>\n","      <td>[[48, 53, 'Toxic']]</td>\n","      <td>Again proving my point that right wing nuts ar...</td>\n","      <td>[[48, 53, Toxic]]</td>\n","      <td>[[48, 53, Toxic]]</td>\n","      <td>[[48, 53, Toxic]]</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>20</td>\n","      <td>Ok Lars, its not fire, but its matches, gasoli...</td>\n","      <td>[[186, 189, 'Toxic']]</td>\n","      <td>Ok Lars  its not fire  but its matches  gasoli...</td>\n","      <td>[[186, 189, Toxic]]</td>\n","      <td>[[186, 189, Toxic]]</td>\n","      <td>[[186, 189, Toxic]]</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>37</td>\n","      <td>Congratulations on wasting your pathetic life ...</td>\n","      <td>[[32, 39, 'Toxic'], [67, 72, 'Toxic']]</td>\n","      <td>Congratulations on wasting your pathetic life ...</td>\n","      <td>[[32, 39, Toxic], [62, 72, Toxic]]</td>\n","      <td>[[32, 39, Toxic]]</td>\n","      <td>[[32, 39, Toxic]]</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>39</td>\n","      <td>What a stupid time to close drilling in the Ar...</td>\n","      <td>[[7, 12, 'Toxic']]</td>\n","      <td>What a stupid time to close drilling in the Ar...</td>\n","      <td>[[7, 12, Toxic]]</td>\n","      <td>[[7, 12, Toxic]]</td>\n","      <td>[[7, 12, Toxic]]</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>51</td>\n","      <td>According to crushedhopesnation Ovechkin is ex...</td>\n","      <td>[[75, 87, 'Toxic']]</td>\n","      <td>According to crushedhopesnation Ovechkin is ex...</td>\n","      <td>[[79, 87, Toxic]]</td>\n","      <td>[[79, 87, Toxic]]</td>\n","      <td>[[79, 87, Toxic]]</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>554</th>\n","      <td>5881</td>\n","      <td>clearly you are one of the lunatic liberals,,y...</td>\n","      <td>[[148, 153, 'Toxic']]</td>\n","      <td>clearly you are one of the lunatic liberals  y...</td>\n","      <td>[[27, 33, Toxic], [148, 153, Toxic]]</td>\n","      <td>[[27, 33, Toxic], [148, 153, Toxic]]</td>\n","      <td>[[27, 33, Toxic], [148, 153, Toxic]]</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>555</th>\n","      <td>5883</td>\n","      <td>Trump Plans To Blow Up Iran Deal Because He Re...</td>\n","      <td>[[56, 60, 'Toxic']]</td>\n","      <td>Trump Plans To Blow Up Iran Deal Because He Re...</td>\n","      <td>[[56, 60, Toxic]]</td>\n","      <td>[[56, 60, Toxic]]</td>\n","      <td>[[56, 60, Toxic]]</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>556</th>\n","      <td>5889</td>\n","      <td>Damn, he was good. Seems we always find a way ...</td>\n","      <td>[[0, 3, 'Toxic']]</td>\n","      <td>Damn  he was good  Seems we always find a way ...</td>\n","      <td>[[0, 3, Toxic], [49, 63, Toxic]]</td>\n","      <td>[[0, 3, Toxic], [49, 53, Toxic]]</td>\n","      <td>[[0, 3, Toxic], [49, 53, Toxic]]</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>557</th>\n","      <td>5890</td>\n","      <td>Beyak misses the point entirely. The PURPOSE O...</td>\n","      <td>[[409, 414, 'Toxic']]</td>\n","      <td>Beyak misses the point entirely  The PURPOSE O...</td>\n","      <td>[[409, 414, Toxic]]</td>\n","      <td>[[409, 414, Toxic]]</td>\n","      <td>[[409, 414, Toxic]]</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>558</th>\n","      <td>5894</td>\n","      <td>Same defense attorney that got Alexandra Ellis...</td>\n","      <td>[[86, 89, 'Toxic']]</td>\n","      <td>Same defense attorney that got Alexandra Ellis...</td>\n","      <td>[[86, 89, Toxic]]</td>\n","      <td>[[86, 89, Toxic]]</td>\n","      <td>[[86, 89, Toxic]]</td>\n","      <td>NaN</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>559 rows × 8 columns</p>\n","</div>"],"text/plain":["       id  ... bert_large\n","0      15  ...        NaN\n","1      20  ...        NaN\n","2      37  ...        NaN\n","3      39  ...        NaN\n","4      51  ...        NaN\n","..    ...  ...        ...\n","554  5881  ...        NaN\n","555  5883  ...        NaN\n","556  5889  ...        NaN\n","557  5890  ...        NaN\n","558  5894  ...        NaN\n","\n","[559 rows x 8 columns]"]},"metadata":{"tags":[]},"execution_count":34}]},{"cell_type":"code","metadata":{"id":"hMbn73InSrv6","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1617727381416,"user_tz":-330,"elapsed":84833,"user":{"displayName":"Harsh Kataria","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GimH0VsMEaiEzaEeo5nJzMe1WuJRQ2b1DK9fb3S=s64","userId":"07300304294680146354"}},"outputId":"47312ab3-bd5e-4d2c-f42a-84acc350b53d"},"source":["for i in range(len(df)):\n","    # create example sentence\n","    sentence = Sentence(df['cleaned_text'][i])\n","\n","    # predict tags and print\n","    model.predict(sentence)\n","    sent = sentence.to_dict(tag_type='ner')\n","    l = []\n","    for ent in sent['entities']:\n","        # print(ent['start_pos'], ent['end_pos'])\n","        l.append([ent['start_pos'],ent['end_pos']-1,'Toxic'])\n","    # print(sentence.to_tagged_string())\n","    df['bert_large'][i] = l\n","    print(i)"],"execution_count":35,"outputs":[{"output_type":"stream","text":["/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:13: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  del sys.path[0]\n","/usr/local/lib/python3.7/dist-packages/pandas/core/indexing.py:670: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  iloc._setitem_with_indexer(indexer, value)\n"],"name":"stderr"},{"output_type":"stream","text":["0\n","1\n","2\n","3\n","4\n","5\n","6\n","7\n","8\n","9\n","10\n","11\n","12\n","13\n","14\n","15\n","16\n","17\n","18\n","19\n","20\n","21\n","22\n","23\n","24\n","25\n","26\n","27\n","28\n","29\n","30\n","31\n","32\n","33\n","34\n","35\n","36\n","37\n","38\n","39\n","40\n","41\n","42\n","43\n","44\n","45\n","46\n","47\n","48\n","49\n","50\n","51\n","52\n","53\n","54\n","55\n","56\n","57\n","58\n","59\n","60\n","61\n","62\n","63\n","64\n","65\n","66\n","67\n","68\n","69\n","70\n","71\n","72\n","73\n","74\n","75\n","76\n","77\n","78\n","79\n","80\n","81\n","82\n","83\n","84\n","85\n","86\n","87\n","88\n","89\n","90\n","91\n","92\n","93\n","94\n","95\n","96\n","97\n","98\n","99\n","100\n","101\n","102\n","103\n","104\n","105\n","106\n","107\n","108\n","109\n","110\n","111\n","112\n","113\n","114\n","115\n","116\n","117\n","118\n","119\n","120\n","121\n","122\n","123\n","124\n","125\n","126\n","127\n","128\n","129\n","130\n","131\n","132\n","133\n","134\n","135\n","136\n","137\n","138\n","139\n","140\n","141\n","142\n","143\n","144\n","145\n","146\n","147\n","148\n","149\n","150\n","151\n","152\n","153\n","154\n","155\n","156\n","157\n","158\n","159\n","160\n","161\n","162\n","163\n","164\n","165\n","166\n","167\n","168\n","169\n","170\n","171\n","172\n","173\n","174\n","175\n","176\n","177\n","178\n","179\n","180\n","181\n","182\n","183\n","184\n","185\n","186\n","187\n","188\n","189\n","190\n","191\n","192\n","193\n","194\n","195\n","196\n","197\n","198\n","199\n","200\n","201\n","202\n","203\n","204\n","205\n","206\n","207\n","208\n","209\n","210\n","211\n","212\n","213\n","214\n","215\n","216\n","217\n","218\n","219\n","220\n","221\n","222\n","223\n","224\n","225\n","226\n","227\n","228\n","229\n","230\n","231\n","232\n","233\n","234\n","235\n","236\n","237\n","238\n","239\n","240\n","241\n","242\n","243\n","244\n","245\n","246\n","247\n","248\n","249\n","250\n","251\n","252\n","253\n","254\n","255\n","256\n","257\n","258\n","259\n","260\n","261\n","262\n","263\n","264\n","265\n","266\n","267\n","268\n","269\n","270\n","271\n","272\n","273\n","274\n","275\n","276\n","277\n","278\n","279\n","280\n","281\n","282\n","283\n","284\n","285\n","286\n","287\n","288\n","289\n","290\n","291\n","292\n","293\n","294\n","295\n","296\n","297\n","298\n","299\n","300\n","301\n","302\n","303\n","304\n","305\n","306\n","307\n","308\n","309\n","310\n","311\n","312\n","313\n","314\n","315\n","316\n","317\n","318\n","319\n","320\n","321\n","322\n","323\n","324\n","325\n","326\n","327\n","328\n","329\n","330\n","331\n","332\n","333\n","334\n","335\n","336\n","337\n","338\n","339\n","340\n","341\n","342\n","343\n","344\n","345\n","346\n","347\n","348\n","349\n","350\n","351\n","352\n","353\n","354\n","355\n","356\n","357\n","358\n","359\n","360\n","361\n","362\n","363\n","364\n","365\n","366\n","367\n","368\n","369\n","370\n","371\n","372\n","373\n","374\n","375\n","376\n","377\n","378\n","379\n","380\n","381\n","382\n","383\n","384\n","385\n","386\n","387\n","388\n","389\n","390\n","391\n","392\n","393\n","394\n","395\n","396\n","397\n","398\n","399\n","400\n","401\n","402\n","403\n","404\n","405\n","406\n","407\n","408\n","409\n","410\n","411\n","412\n","413\n","414\n","415\n","416\n","417\n","418\n","419\n","420\n","421\n","422\n","423\n","424\n","425\n","426\n","427\n","428\n","429\n","430\n","431\n","432\n","433\n","434\n","435\n","436\n","437\n","438\n","439\n","440\n","441\n","442\n","443\n","444\n","445\n","446\n","447\n","448\n","449\n","450\n","451\n","452\n","453\n","454\n","455\n","456\n","457\n","458\n","459\n","460\n","461\n","462\n","463\n","464\n","465\n","466\n","467\n","468\n","469\n","470\n","471\n","472\n","473\n","474\n","475\n","476\n","477\n","478\n","479\n","480\n","481\n","482\n","483\n","484\n","485\n","486\n","487\n","488\n","489\n","490\n","491\n","492\n","493\n","494\n","495\n","496\n","497\n","498\n","499\n","500\n","501\n","502\n","503\n","504\n","505\n","506\n","507\n","508\n","509\n","510\n","511\n","512\n","513\n","514\n","515\n","516\n","517\n","518\n","519\n","520\n","521\n","522\n","523\n","524\n","525\n","526\n","527\n","528\n","529\n","530\n","531\n","532\n","533\n","534\n","535\n","536\n","537\n","538\n","539\n","540\n","541\n","542\n","543\n","544\n","545\n","546\n","547\n","548\n","549\n","550\n","551\n","552\n","553\n","554\n","555\n","556\n","557\n","558\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":589},"id":"w_NzhkMyAo_y","executionInfo":{"status":"ok","timestamp":1617727381417,"user_tz":-330,"elapsed":83708,"user":{"displayName":"Harsh Kataria","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GimH0VsMEaiEzaEeo5nJzMe1WuJRQ2b1DK9fb3S=s64","userId":"07300304294680146354"}},"outputId":"cc0b7c9e-5def-411e-dccd-9159d444aaf1"},"source":["df"],"execution_count":36,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>id</th>\n","      <th>text</th>\n","      <th>labels</th>\n","      <th>cleaned_text</th>\n","      <th>bert_large_glove</th>\n","      <th>bert_base_glove</th>\n","      <th>bert_base</th>\n","      <th>bert_large</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>15</td>\n","      <td>Again proving my point that right wing nuts ar...</td>\n","      <td>[[48, 53, 'Toxic']]</td>\n","      <td>Again proving my point that right wing nuts ar...</td>\n","      <td>[[48, 53, Toxic]]</td>\n","      <td>[[48, 53, Toxic]]</td>\n","      <td>[[48, 53, Toxic]]</td>\n","      <td>[[48, 53, Toxic]]</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>20</td>\n","      <td>Ok Lars, its not fire, but its matches, gasoli...</td>\n","      <td>[[186, 189, 'Toxic']]</td>\n","      <td>Ok Lars  its not fire  but its matches  gasoli...</td>\n","      <td>[[186, 189, Toxic]]</td>\n","      <td>[[186, 189, Toxic]]</td>\n","      <td>[[186, 189, Toxic]]</td>\n","      <td>[[186, 189, Toxic], [200, 206, Toxic]]</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>37</td>\n","      <td>Congratulations on wasting your pathetic life ...</td>\n","      <td>[[32, 39, 'Toxic'], [67, 72, 'Toxic']]</td>\n","      <td>Congratulations on wasting your pathetic life ...</td>\n","      <td>[[32, 39, Toxic], [62, 72, Toxic]]</td>\n","      <td>[[32, 39, Toxic]]</td>\n","      <td>[[32, 39, Toxic]]</td>\n","      <td>[[32, 39, Toxic], [67, 72, Toxic]]</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>39</td>\n","      <td>What a stupid time to close drilling in the Ar...</td>\n","      <td>[[7, 12, 'Toxic']]</td>\n","      <td>What a stupid time to close drilling in the Ar...</td>\n","      <td>[[7, 12, Toxic]]</td>\n","      <td>[[7, 12, Toxic]]</td>\n","      <td>[[7, 12, Toxic]]</td>\n","      <td>[[7, 12, Toxic]]</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>51</td>\n","      <td>According to crushedhopesnation Ovechkin is ex...</td>\n","      <td>[[75, 87, 'Toxic']]</td>\n","      <td>According to crushedhopesnation Ovechkin is ex...</td>\n","      <td>[[79, 87, Toxic]]</td>\n","      <td>[[79, 87, Toxic]]</td>\n","      <td>[[79, 87, Toxic]]</td>\n","      <td>[[79, 87, Toxic]]</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>554</th>\n","      <td>5881</td>\n","      <td>clearly you are one of the lunatic liberals,,y...</td>\n","      <td>[[148, 153, 'Toxic']]</td>\n","      <td>clearly you are one of the lunatic liberals  y...</td>\n","      <td>[[27, 33, Toxic], [148, 153, Toxic]]</td>\n","      <td>[[27, 33, Toxic], [148, 153, Toxic]]</td>\n","      <td>[[27, 33, Toxic], [148, 153, Toxic]]</td>\n","      <td>[[27, 33, Toxic], [148, 153, Toxic]]</td>\n","    </tr>\n","    <tr>\n","      <th>555</th>\n","      <td>5883</td>\n","      <td>Trump Plans To Blow Up Iran Deal Because He Re...</td>\n","      <td>[[56, 60, 'Toxic']]</td>\n","      <td>Trump Plans To Blow Up Iran Deal Because He Re...</td>\n","      <td>[[56, 60, Toxic]]</td>\n","      <td>[[56, 60, Toxic]]</td>\n","      <td>[[56, 60, Toxic]]</td>\n","      <td>[[56, 60, Toxic]]</td>\n","    </tr>\n","    <tr>\n","      <th>556</th>\n","      <td>5889</td>\n","      <td>Damn, he was good. Seems we always find a way ...</td>\n","      <td>[[0, 3, 'Toxic']]</td>\n","      <td>Damn  he was good  Seems we always find a way ...</td>\n","      <td>[[0, 3, Toxic], [49, 63, Toxic]]</td>\n","      <td>[[0, 3, Toxic], [49, 53, Toxic]]</td>\n","      <td>[[0, 3, Toxic], [49, 53, Toxic]]</td>\n","      <td>[[0, 3, Toxic], [49, 53, Toxic]]</td>\n","    </tr>\n","    <tr>\n","      <th>557</th>\n","      <td>5890</td>\n","      <td>Beyak misses the point entirely. The PURPOSE O...</td>\n","      <td>[[409, 414, 'Toxic']]</td>\n","      <td>Beyak misses the point entirely  The PURPOSE O...</td>\n","      <td>[[409, 414, Toxic]]</td>\n","      <td>[[409, 414, Toxic]]</td>\n","      <td>[[409, 414, Toxic]]</td>\n","      <td>[[409, 414, Toxic]]</td>\n","    </tr>\n","    <tr>\n","      <th>558</th>\n","      <td>5894</td>\n","      <td>Same defense attorney that got Alexandra Ellis...</td>\n","      <td>[[86, 89, 'Toxic']]</td>\n","      <td>Same defense attorney that got Alexandra Ellis...</td>\n","      <td>[[86, 89, Toxic]]</td>\n","      <td>[[86, 89, Toxic]]</td>\n","      <td>[[86, 89, Toxic]]</td>\n","      <td>[[86, 89, Toxic]]</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>559 rows × 8 columns</p>\n","</div>"],"text/plain":["       id  ...                              bert_large\n","0      15  ...                       [[48, 53, Toxic]]\n","1      20  ...  [[186, 189, Toxic], [200, 206, Toxic]]\n","2      37  ...      [[32, 39, Toxic], [67, 72, Toxic]]\n","3      39  ...                        [[7, 12, Toxic]]\n","4      51  ...                       [[79, 87, Toxic]]\n","..    ...  ...                                     ...\n","554  5881  ...    [[27, 33, Toxic], [148, 153, Toxic]]\n","555  5883  ...                       [[56, 60, Toxic]]\n","556  5889  ...        [[0, 3, Toxic], [49, 53, Toxic]]\n","557  5890  ...                     [[409, 414, Toxic]]\n","558  5894  ...                       [[86, 89, Toxic]]\n","\n","[559 rows x 8 columns]"]},"metadata":{"tags":[]},"execution_count":36}]},{"cell_type":"code","metadata":{"id":"Q5K3YJOKnQsa","executionInfo":{"status":"ok","timestamp":1617727422175,"user_tz":-330,"elapsed":848,"user":{"displayName":"Harsh Kataria","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GimH0VsMEaiEzaEeo5nJzMe1WuJRQ2b1DK9fb3S=s64","userId":"07300304294680146354"}}},"source":["df.to_csv('/content/drive/MyDrive/Toxic Span Detection - Semeval 2021/1-4-2021/real_test_f1_cleaned-text_results.csv', index=False)"],"execution_count":37,"outputs":[]},{"cell_type":"code","metadata":{"id":"8SFDoFcGIPhv"},"source":["words = []\n","tags = []\n","for i in range(len(df)):\n","  text = df['text'][i].replace('\\n',' ')\n","  #text = df['text'][i].strip()\n","  #text = ' between eden hospital health services corporation and eden medical center '.strip()\n","#   print(text)\n","  textl = list(text)\n","  textl = remove_punctuation(textl)\n","#   print(textl)\n","  tagl = ['O'] * len(textl)\n","  lb = df['labels'][i]\n","#   print(tagl)\n","  #print(len(tagl),len(textl))\n","  #print(lb)\n","  for k in range(len(lb)):\n","    t = lb[k]\n","    sp = False\n","    print(t)\n","    tagl[t[0]] = 'B-'+t[2]\n","    for l in range(t[0]+1,t[1]+1):\n","      if sp:\n","        tagl[l] = 'I-'+t[2]\n","      else:\n","        tagl[l] = 'B-'+t[2]\n","        if textl[l] == ' ': sp = True\n","    # print(tagl)\n","\n","  word = ''\n","  tag = ''\n","  for j in range(len(textl)):\n","    #if tagl[j] == \n","    if textl[j] == ' ':\n","      if word!='':\n","          words.append(word)\n","          word = ''\n","          tags.append(tag)\n","    else:\n","      word = word + textl[j]\n","      tag = tagl[j]\n","    \n","  words.append(word)\n","  tags.append(tag)\n","  words.append('')\n","  tags.append('')\n","#   print(words)\n","#   print(tags)\n","  print(i)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"0ESoOO4-HUD2","executionInfo":{"status":"ok","timestamp":1617711523275,"user_tz":-330,"elapsed":1400,"user":{"displayName":"Harsh Kataria","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GimH0VsMEaiEzaEeo5nJzMe1WuJRQ2b1DK9fb3S=s64","userId":"07300304294680146354"}}},"source":["from seqeval.metrics import accuracy_score\n","from seqeval.metrics import classification_report\n","from seqeval.metrics import f1_score"],"execution_count":61,"outputs":[]},{"cell_type":"code","metadata":{"id":"R84MLG1BplUo","executionInfo":{"status":"ok","timestamp":1617713506149,"user_tz":-330,"elapsed":870,"user":{"displayName":"Harsh Kataria","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GimH0VsMEaiEzaEeo5nJzMe1WuJRQ2b1DK9fb3S=s64","userId":"07300304294680146354"}}},"source":["y_true = [['O', 'O', 'O', 'B-MISC', 'I-MISC', 'I-MISC', 'O'], ['B-PER', 'I-PER', 'O'], ['B-MISC', 'I-MISC', 'O']]\n","y_pred = [['O', 'O', 'O', 'B-MISC', 'I-MISC', 'I-MISC', 'I-MISC'], ['B-PER', 'I-PER', 'O'], ['B-MISC', 'O', 'O']]"],"execution_count":92,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"e379EyiCHWsR","executionInfo":{"status":"ok","timestamp":1617713506977,"user_tz":-330,"elapsed":1557,"user":{"displayName":"Harsh Kataria","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GimH0VsMEaiEzaEeo5nJzMe1WuJRQ2b1DK9fb3S=s64","userId":"07300304294680146354"}},"outputId":"e9ce3d8b-83c5-47cd-905e-7ff637851ea9"},"source":["f1_score(y_true, y_pred)"],"execution_count":93,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.3333333333333333"]},"metadata":{"tags":[]},"execution_count":93}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"HyEzzEgYFpfI","executionInfo":{"status":"ok","timestamp":1617713506978,"user_tz":-330,"elapsed":1404,"user":{"displayName":"Harsh Kataria","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GimH0VsMEaiEzaEeo5nJzMe1WuJRQ2b1DK9fb3S=s64","userId":"07300304294680146354"}},"outputId":"278234c4-ffae-450b-d4b9-ddf391936c89"},"source":["accuracy_score(y_true, y_pred)"],"execution_count":94,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.8461538461538461"]},"metadata":{"tags":[]},"execution_count":94}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ulEzC7nsFpcZ","executionInfo":{"status":"ok","timestamp":1617713506979,"user_tz":-330,"elapsed":1272,"user":{"displayName":"Harsh Kataria","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GimH0VsMEaiEzaEeo5nJzMe1WuJRQ2b1DK9fb3S=s64","userId":"07300304294680146354"}},"outputId":"00d8fe94-b49a-4681-d61a-aa7a13edecf1"},"source":["print(classification_report(y_true, y_pred))"],"execution_count":95,"outputs":[{"output_type":"stream","text":["              precision    recall  f1-score   support\n","\n","        MISC       0.00      0.00      0.00         2\n","         PER       1.00      1.00      1.00         1\n","\n","   micro avg       0.33      0.33      0.33         3\n","   macro avg       0.50      0.50      0.50         3\n","weighted avg       0.33      0.33      0.33         3\n","\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"rCq4_X6bRfPz"},"source":["#Simple Transformer"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"xSAxtB0QRiS-","executionInfo":{"status":"ok","timestamp":1610785851831,"user_tz":-330,"elapsed":11268,"user":{"displayName":"AMBUJE GUPTA","photoUrl":"","userId":"08374827863947652219"}},"outputId":"cfa009f7-fef8-4c86-c7b4-ae0e9a35356c"},"source":["!pip install simpletransformers==0.9"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Collecting simpletransformers==0.9\n","\u001b[?25l  Downloading https://files.pythonhosted.org/packages/5b/f9/bc43a08b8a5e160502703cd4555237f569fa5341313db9a13149db357f1d/simpletransformers-0.9.0-py3-none-any.whl (69kB)\n","\r\u001b[K     |████▊                           | 10kB 16.8MB/s eta 0:00:01\r\u001b[K     |█████████▍                      | 20kB 18.6MB/s eta 0:00:01\r\u001b[K     |██████████████                  | 30kB 11.4MB/s eta 0:00:01\r\u001b[K     |██████████████████▊             | 40kB 6.6MB/s eta 0:00:01\r\u001b[K     |███████████████████████▌        | 51kB 7.6MB/s eta 0:00:01\r\u001b[K     |████████████████████████████▏   | 61kB 8.1MB/s eta 0:00:01\r\u001b[K     |████████████████████████████████| 71kB 5.1MB/s \n","\u001b[?25hRequirement already satisfied: numpy in /usr/local/lib/python3.6/dist-packages (from simpletransformers==0.9) (1.19.5)\n","Requirement already satisfied: regex in /usr/local/lib/python3.6/dist-packages (from simpletransformers==0.9) (2019.12.20)\n","Requirement already satisfied: scipy in /usr/local/lib/python3.6/dist-packages (from simpletransformers==0.9) (1.4.1)\n","Requirement already satisfied: scikit-learn in /usr/local/lib/python3.6/dist-packages (from simpletransformers==0.9) (0.22.2.post1)\n","Collecting tensorboardx\n","\u001b[?25l  Downloading https://files.pythonhosted.org/packages/af/0c/4f41bcd45db376e6fe5c619c01100e9b7531c55791b7244815bac6eac32c/tensorboardX-2.1-py2.py3-none-any.whl (308kB)\n","\u001b[K     |████████████████████████████████| 317kB 11.3MB/s \n","\u001b[?25hRequirement already satisfied: requests in /usr/local/lib/python3.6/dist-packages (from simpletransformers==0.9) (2.23.0)\n","Collecting seqeval\n","\u001b[?25l  Downloading https://files.pythonhosted.org/packages/9d/2d/233c79d5b4e5ab1dbf111242299153f3caddddbb691219f363ad55ce783d/seqeval-1.2.2.tar.gz (43kB)\n","\u001b[K     |████████████████████████████████| 51kB 5.5MB/s \n","\u001b[?25hCollecting transformers\n","\u001b[?25l  Downloading https://files.pythonhosted.org/packages/cd/40/866cbfac4601e0f74c7303d533a9c5d4a53858bd402e08e3e294dd271f25/transformers-4.2.1-py3-none-any.whl (1.8MB)\n","\u001b[K     |████████████████████████████████| 1.8MB 11.9MB/s \n","\u001b[?25hRequirement already satisfied: tqdm in /usr/local/lib/python3.6/dist-packages (from simpletransformers==0.9) (4.41.1)\n","Requirement already satisfied: joblib>=0.11 in /usr/local/lib/python3.6/dist-packages (from scikit-learn->simpletransformers==0.9) (1.0.0)\n","Requirement already satisfied: protobuf>=3.8.0 in /usr/local/lib/python3.6/dist-packages (from tensorboardx->simpletransformers==0.9) (3.12.4)\n","Requirement already satisfied: six in /usr/local/lib/python3.6/dist-packages (from tensorboardx->simpletransformers==0.9) (1.15.0)\n","Requirement already satisfied: urllib3!=1.25.0,!=1.25.1,<1.26,>=1.21.1 in /usr/local/lib/python3.6/dist-packages (from requests->simpletransformers==0.9) (1.24.3)\n","Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.6/dist-packages (from requests->simpletransformers==0.9) (2020.12.5)\n","Requirement already satisfied: idna<3,>=2.5 in /usr/local/lib/python3.6/dist-packages (from requests->simpletransformers==0.9) (2.10)\n","Requirement already satisfied: chardet<4,>=3.0.2 in /usr/local/lib/python3.6/dist-packages (from requests->simpletransformers==0.9) (3.0.4)\n","Requirement already satisfied: packaging in /usr/local/lib/python3.6/dist-packages (from transformers->simpletransformers==0.9) (20.8)\n","Collecting sacremoses\n","\u001b[?25l  Downloading https://files.pythonhosted.org/packages/7d/34/09d19aff26edcc8eb2a01bed8e98f13a1537005d31e95233fd48216eed10/sacremoses-0.0.43.tar.gz (883kB)\n","\u001b[K     |████████████████████████████████| 890kB 34.9MB/s \n","\u001b[?25hCollecting tokenizers==0.9.4\n","\u001b[?25l  Downloading https://files.pythonhosted.org/packages/0f/1c/e789a8b12e28be5bc1ce2156cf87cb522b379be9cadc7ad8091a4cc107c4/tokenizers-0.9.4-cp36-cp36m-manylinux2010_x86_64.whl (2.9MB)\n","\u001b[K     |████████████████████████████████| 2.9MB 52.5MB/s \n","\u001b[?25hRequirement already satisfied: filelock in /usr/local/lib/python3.6/dist-packages (from transformers->simpletransformers==0.9) (3.0.12)\n","Requirement already satisfied: dataclasses; python_version < \"3.7\" in /usr/local/lib/python3.6/dist-packages (from transformers->simpletransformers==0.9) (0.8)\n","Requirement already satisfied: importlib-metadata; python_version < \"3.8\" in /usr/local/lib/python3.6/dist-packages (from transformers->simpletransformers==0.9) (3.3.0)\n","Requirement already satisfied: setuptools in /usr/local/lib/python3.6/dist-packages (from protobuf>=3.8.0->tensorboardx->simpletransformers==0.9) (51.1.1)\n","Requirement already satisfied: pyparsing>=2.0.2 in /usr/local/lib/python3.6/dist-packages (from packaging->transformers->simpletransformers==0.9) (2.4.7)\n","Requirement already satisfied: click in /usr/local/lib/python3.6/dist-packages (from sacremoses->transformers->simpletransformers==0.9) (7.1.2)\n","Requirement already satisfied: typing-extensions>=3.6.4; python_version < \"3.8\" in /usr/local/lib/python3.6/dist-packages (from importlib-metadata; python_version < \"3.8\"->transformers->simpletransformers==0.9) (3.7.4.3)\n","Requirement already satisfied: zipp>=0.5 in /usr/local/lib/python3.6/dist-packages (from importlib-metadata; python_version < \"3.8\"->transformers->simpletransformers==0.9) (3.4.0)\n","Building wheels for collected packages: seqeval, sacremoses\n","  Building wheel for seqeval (setup.py) ... \u001b[?25l\u001b[?25hdone\n","  Created wheel for seqeval: filename=seqeval-1.2.2-cp36-none-any.whl size=16171 sha256=dcce41277fb31d3b3e08128a3f405ad8a086ed97809c7b659f0f8eb41baa3738\n","  Stored in directory: /root/.cache/pip/wheels/52/df/1b/45d75646c37428f7e626214704a0e35bd3cfc32eda37e59e5f\n","  Building wheel for sacremoses (setup.py) ... \u001b[?25l\u001b[?25hdone\n","  Created wheel for sacremoses: filename=sacremoses-0.0.43-cp36-none-any.whl size=893261 sha256=8fc77b821f7012a52627c9c9c7b0a2da0582a9870da6e8b4ac5f9eda5e0b7903\n","  Stored in directory: /root/.cache/pip/wheels/29/3c/fd/7ce5c3f0666dab31a50123635e6fb5e19ceb42ce38d4e58f45\n","Successfully built seqeval sacremoses\n","Installing collected packages: tensorboardx, seqeval, sacremoses, tokenizers, transformers, simpletransformers\n","Successfully installed sacremoses-0.0.43 seqeval-1.2.2 simpletransformers-0.9.0 tensorboardx-2.1 tokenizers-0.9.4 transformers-4.2.1\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"XV8GFIyrRs8f"},"source":["from simpletransformers.ner.ner_model import NERModel"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"p9YRIUtyXZ_o","executionInfo":{"status":"ok","timestamp":1610786663666,"user_tz":-330,"elapsed":961,"user":{"displayName":"AMBUJE GUPTA","photoUrl":"","userId":"08374827863947652219"}},"outputId":"818a6607-12b1-4d9c-e040-db41fe14de63"},"source":["%cd /content/"],"execution_count":null,"outputs":[{"output_type":"stream","text":["/content\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"tn7qsLlNZR4J"},"source":["!rm -r outputs"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":951,"referenced_widgets":["f178f3bf4fb64fe8a8c0346fa34a57c0","6f2f37c2175141559c309ded6a3faaa0","3a97753f7fe346099715a2ed601092a2","22c84a61a57b43cb86ac1b32b02faa86","9ab38e6ed424434d854f83b45a81c938","4a930a0b64f0403c825874670833daad","c810c20071b54f409acc74db9684e413","0218154a4382482bbd36421a1a747fe5","6eae68ec757e47eda05484795ee7a3d8","13c90f2486a7451aa6eae74d8222c0fd","7d5b2e4a980f4914bb9043dcfcd4bd34","66dc6d7abd4b4caeaa32fa7ed5acb1a7","f28e7bdadb4e4b9999f5f6c0c2571458","8f98c56ab905470ba2c7318fc534221e","2d0da82ecf97456ea2c852f7df98dc82","950a162020fd4e409f8393ad4a5aeead"]},"id":"DnaRq7TlSBQi","executionInfo":{"status":"error","timestamp":1610787343159,"user_tz":-330,"elapsed":7539,"user":{"displayName":"AMBUJE GUPTA","photoUrl":"","userId":"08374827863947652219"}},"outputId":"7599e627-c783-4298-9d5a-2ba615f096d0"},"source":["custom_labels = [\"O\", \"B-Toxic\",\"I-Toxic\"]\n","model = NERModel('bert', 'bert-base-uncased',labels=custom_labels)\n","\n","# Train the model\n","for i in range(100):\n","    model.train_model('/content/drive/MyDrive/Toxic Span Detection - Semeval 2021/data_pre-process-Ambuje/train.txt')"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Some weights of the model checkpoint at bert-base-uncased were not used when initializing BertForTokenClassification: ['cls.predictions.bias', 'cls.predictions.transform.dense.weight', 'cls.predictions.transform.dense.bias', 'cls.predictions.decoder.weight', 'cls.seq_relationship.weight', 'cls.seq_relationship.bias', 'cls.predictions.transform.LayerNorm.weight', 'cls.predictions.transform.LayerNorm.bias']\n","- This IS expected if you are initializing BertForTokenClassification from the checkpoint of a model trained on another task or with another architecture (e.g. initializing a BertForSequenceClassification model from a BertForPreTraining model).\n","- This IS NOT expected if you are initializing BertForTokenClassification from the checkpoint of a model that you expect to be exactly identical (initializing a BertForSequenceClassification model from a BertForSequenceClassification model).\n","Some weights of BertForTokenClassification were not initialized from the model checkpoint at bert-base-uncased and are newly initialized: ['classifier.weight', 'classifier.bias']\n","You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.\n"],"name":"stderr"},{"output_type":"stream","text":["Features loaded from cache at cache_dir/cached_train_bert_128_3_1\n","Selected optimization level O1:  Insert automatic casts around Pytorch functions and Tensor methods.\n","\n","Defaults for this optimization level are:\n","enabled                : True\n","opt_level              : O1\n","cast_model_type        : None\n","patch_torch_functions  : True\n","keep_batchnorm_fp32    : None\n","master_weights         : None\n","loss_scale             : dynamic\n","Processing user overrides (additional kwargs that are not None)...\n","After processing overrides, optimization options are:\n","enabled                : True\n","opt_level              : O1\n","cast_model_type        : None\n","patch_torch_functions  : True\n","keep_batchnorm_fp32    : None\n","master_weights         : None\n","loss_scale             : dynamic\n"],"name":"stdout"},{"output_type":"display_data","data":{"application/vnd.jupyter.widget-view+json":{"model_id":"f178f3bf4fb64fe8a8c0346fa34a57c0","version_minor":0,"version_major":2},"text/plain":["HBox(children=(FloatProgress(value=0.0, description='Epoch', max=1.0, style=ProgressStyle(description_width='i…"]},"metadata":{"tags":[]}},{"output_type":"display_data","data":{"application/vnd.jupyter.widget-view+json":{"model_id":"6eae68ec757e47eda05484795ee7a3d8","version_minor":0,"version_major":2},"text/plain":["HBox(children=(FloatProgress(value=0.0, description='Current iteration', max=1.0, style=ProgressStyle(descript…"]},"metadata":{"tags":[]}},{"output_type":"stream","text":["\rRunning loss: 1.115716Gradient overflow.  Skipping step, loss scaler 0 reducing loss scale to 32768.0\n","\n","\n"],"name":"stdout"},{"output_type":"stream","text":["/usr/local/lib/python3.6/dist-packages/torch/optim/lr_scheduler.py:127: UserWarning: Seems like `optimizer.step()` has been overridden after learning rate scheduler initialization. Please, make sure to call `optimizer.step()` before `lr_scheduler.step()`. See more details at https://pytorch.org/docs/stable/optim.html#how-to-adjust-learning-rate\n","  \"https://pytorch.org/docs/stable/optim.html#how-to-adjust-learning-rate\", UserWarning)\n"],"name":"stderr"},{"output_type":"stream","text":["Training of bert model complete. Saved to outputs/.\n"],"name":"stdout"},{"output_type":"error","ename":"ValueError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mValueError\u001b[0m                                Traceback (most recent call last)","\u001b[0;32m<ipython-input-26-aae4e550539a>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      4\u001b[0m \u001b[0;31m# Train the model\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      5\u001b[0m \u001b[0;32mfor\u001b[0m \u001b[0mi\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mrange\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;36m100\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 6\u001b[0;31m     \u001b[0mmodel\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mtrain_model\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'/content/drive/MyDrive/Toxic Span Detection - Semeval 2021/data_pre-process-Ambuje/train.txt'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;32m/usr/local/lib/python3.6/dist-packages/simpletransformers/ner/ner_model.py\u001b[0m in \u001b[0;36mtrain_model\u001b[0;34m(self, train_data, output_dir, show_running_loss, args, eval_df)\u001b[0m\n\u001b[1;32m    154\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    155\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0mos\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mpath\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mexists\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0moutput_dir\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;32mand\u001b[0m \u001b[0mos\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mlistdir\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0moutput_dir\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;32mand\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m\"overwrite_output_dir\"\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 156\u001b[0;31m             \u001b[0;32mraise\u001b[0m \u001b[0mValueError\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"Output directory ({}) already exists and is not empty. Use --overwrite_output_dir to overcome.\"\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mformat\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0moutput_dir\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    157\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    158\u001b[0m         \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_move_model_to_device\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mValueError\u001b[0m: Output directory (outputs/) already exists and is not empty. Use --overwrite_output_dir to overcome."]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":202,"referenced_widgets":["7776d539d0f244a5bb31b9a2bc34cd27","92c641b9326c44d09be5677acf145ff3","ab0c7b49323d4aab867aa9b3f9021e9d","617ef44111a443f59d6c377d68f95dbb","bdd15277ba9441b495a276c80ecaec40","412fc808fd1042ff9167c053f7841c01","d6840cb51ab94fc2afbc21fe54305f64","3343292ac2e5454d8709cc88c51aa76c","758e1912acbf454484300859469420d4","0cc6d9f334da4846bac47e87555246c6","fa8b6a13bd6b40bd92925d9e028c545f","1447423645d34917a9a071f6e3fe9d41","34c528108c3845cab068fcd9214383cd","3726f2e0cd654c5d8ad9e7d5b3513939","5f6b39876e7a4a4084d4f55723eb7430","7da52ed0ac844bc28c038b8e2f268d3c"]},"id":"1MxPKB2-YIQC","executionInfo":{"status":"ok","timestamp":1610786862092,"user_tz":-330,"elapsed":18330,"user":{"displayName":"AMBUJE GUPTA","photoUrl":"","userId":"08374827863947652219"}},"outputId":"3c7b1021-5155-4e15-d558-d8d18074201c"},"source":["result, model_outputs, predictions = model.eval_model('/content/drive/MyDrive/Toxic Span Detection - Semeval 2021/data_pre-process-Ambuje/train.txt')"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Converting to features started.\n"],"name":"stdout"},{"output_type":"display_data","data":{"application/vnd.jupyter.widget-view+json":{"model_id":"7776d539d0f244a5bb31b9a2bc34cd27","version_minor":0,"version_major":2},"text/plain":["HBox(children=(FloatProgress(value=0.0, max=1.0), HTML(value='')))"]},"metadata":{"tags":[]}},{"output_type":"stream","text":["\n"],"name":"stdout"},{"output_type":"display_data","data":{"application/vnd.jupyter.widget-view+json":{"model_id":"758e1912acbf454484300859469420d4","version_minor":0,"version_major":2},"text/plain":["HBox(children=(FloatProgress(value=0.0, max=1.0), HTML(value='')))"]},"metadata":{"tags":[]}},{"output_type":"stream","text":["\n","{'eval_loss': 2.4828643798828125, 'precision': 0.0, 'recall': 0.0, 'f1_score': 0.0}\n"],"name":"stdout"},{"output_type":"stream","text":["/usr/local/lib/python3.6/dist-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 due to no true samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n"],"name":"stderr"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"4u1LunJRYL-P","executionInfo":{"status":"ok","timestamp":1610786912784,"user_tz":-330,"elapsed":1004,"user":{"displayName":"AMBUJE GUPTA","photoUrl":"","userId":"08374827863947652219"}},"outputId":"ad6ea8eb-aeb1-47f4-8e62-226d7d383387"},"source":[""],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[['I-ORG',\n","  'I-LOC',\n","  'B-PER',\n","  'B-ORG',\n","  'I-LOC',\n","  'I-LOC',\n","  'B-PER',\n","  'B-ORG',\n","  'I-LOC',\n","  'B-ORG',\n","  'B-ORG',\n","  'B-ORG',\n","  'I-LOC',\n","  'B-MISC',\n","  'B-ORG',\n","  'B-PER',\n","  'I-LOC',\n","  'I-LOC',\n","  'B-MISC',\n","  'I-LOC',\n","  'B-ORG',\n","  'B-MISC',\n","  'B-PER',\n","  'B-MISC',\n","  'B-PER',\n","  'B-PER',\n","  'B-MISC',\n","  'B-MISC',\n","  'B-ORG',\n","  'B-PER',\n","  'I-LOC',\n","  'I-LOC',\n","  'B-MISC',\n","  'B-PER',\n","  'B-MISC',\n","  'B-PER',\n","  'B-PER',\n","  'B-ORG',\n","  'B-ORG',\n","  'B-ORG',\n","  'I-LOC',\n","  'I-LOC',\n","  'I-LOC',\n","  'I-LOC',\n","  'I-LOC',\n","  'I-LOC',\n","  'B-PER',\n","  'I-LOC',\n","  'I-PER',\n","  'I-LOC',\n","  'I-LOC',\n","  'I-LOC',\n","  'I-LOC',\n","  'I-PER',\n","  'I-LOC',\n","  'I-LOC',\n","  'I-LOC',\n","  'I-LOC']]"]},"metadata":{"tags":[]},"execution_count":15}]},{"cell_type":"code","metadata":{"id":"s9Nha1_vYMAm"},"source":[""],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"j0qKMYxgYME3"},"source":[""],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"h_fvoIpJTOWN","executionInfo":{"status":"ok","timestamp":1610785958129,"user_tz":-330,"elapsed":5218,"user":{"displayName":"AMBUJE GUPTA","photoUrl":"","userId":"08374827863947652219"}},"outputId":"2268b455-456f-4319-a0ba-ae105dd1251b"},"source":["!git clone https://www.github.com/nvidia/apex\n","\n","!python apex/setup.py install"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Cloning into 'apex'...\n","warning: redirecting to https://github.com/nvidia/apex.git/\n","remote: Enumerating objects: 7872, done.\u001b[K\n","remote: Total 7872 (delta 0), reused 0 (delta 0), pack-reused 7872\u001b[K\n","Receiving objects: 100% (7872/7872), 13.98 MiB | 24.51 MiB/s, done.\n","Resolving deltas: 100% (5374/5374), done.\n","\n","\n","torch.__version__  = 1.7.0+cu101\n","\n","\n","apex/setup.py:67: UserWarning: Option --pyprof not specified. Not installing PyProf dependencies!\n","  warnings.warn(\"Option --pyprof not specified. Not installing PyProf dependencies!\")\n","running install\n","running bdist_egg\n","running egg_info\n","creating apex.egg-info\n","writing apex.egg-info/PKG-INFO\n","writing dependency_links to apex.egg-info/dependency_links.txt\n","writing top-level names to apex.egg-info/top_level.txt\n","writing manifest file 'apex.egg-info/SOURCES.txt'\n","reading manifest file 'apex.egg-info/SOURCES.txt'\n","writing manifest file 'apex.egg-info/SOURCES.txt'\n","installing library code to build/bdist.linux-x86_64/egg\n","running install_lib\n","warning: install_lib: 'build/lib' does not exist -- no Python modules to install\n","\n","creating build\n","creating build/bdist.linux-x86_64\n","creating build/bdist.linux-x86_64/egg\n","creating build/bdist.linux-x86_64/egg/EGG-INFO\n","copying apex.egg-info/PKG-INFO -> build/bdist.linux-x86_64/egg/EGG-INFO\n","copying apex.egg-info/SOURCES.txt -> build/bdist.linux-x86_64/egg/EGG-INFO\n","copying apex.egg-info/dependency_links.txt -> build/bdist.linux-x86_64/egg/EGG-INFO\n","copying apex.egg-info/top_level.txt -> build/bdist.linux-x86_64/egg/EGG-INFO\n","zip_safe flag not set; analyzing archive contents...\n","creating dist\n","creating 'dist/apex-0.1-py3.6.egg' and adding 'build/bdist.linux-x86_64/egg' to it\n","removing 'build/bdist.linux-x86_64/egg' (and everything under it)\n","Processing apex-0.1-py3.6.egg\n","Copying apex-0.1-py3.6.egg to /usr/local/lib/python3.6/dist-packages\n","Adding apex 0.1 to easy-install.pth file\n","\n","Installed /usr/local/lib/python3.6/dist-packages/apex-0.1-py3.6.egg\n","Processing dependencies for apex==0.1\n","Finished processing dependencies for apex==0.1\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"hxgw8TKQTv7Q","executionInfo":{"status":"ok","timestamp":1610785771288,"user_tz":-330,"elapsed":1109,"user":{"displayName":"AMBUJE GUPTA","photoUrl":"","userId":"08374827863947652219"}},"outputId":"278d2e3d-60de-4e15-fad7-1ba1734c911d"},"source":["! git clone https://github.com/NVIDIA/apex"],"execution_count":null,"outputs":[{"output_type":"stream","text":["fatal: destination path 'apex' already exists and is not an empty directory.\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"3sLhxWyqT8y5","executionInfo":{"status":"ok","timestamp":1610786389287,"user_tz":-330,"elapsed":341924,"user":{"displayName":"AMBUJE GUPTA","photoUrl":"","userId":"08374827863947652219"}},"outputId":"f615cb58-2e8c-45c6-e076-dfdf21da625f"},"source":["%cd apex\n","!pip install -v --disable-pip-version-check --no-cache-dir --global-option=\"--cpp_ext\" --global-option=\"--cuda_ext\" ./"],"execution_count":null,"outputs":[{"output_type":"stream","text":["/content/apex\n","/usr/local/lib/python3.6/dist-packages/pip/_internal/commands/install.py:283: UserWarning: Disabling all use of wheels due to the use of --build-options / --global-options / --install-options.\n","  cmdoptions.check_install_build_global(options)\n","Created temporary directory: /tmp/pip-ephem-wheel-cache-3_ieqmc6\n","Created temporary directory: /tmp/pip-req-tracker-uei_ilwq\n","Created requirements tracker '/tmp/pip-req-tracker-uei_ilwq'\n","Created temporary directory: /tmp/pip-install-m_r4r4r6\n","Processing /content/apex\n","  Created temporary directory: /tmp/pip-req-build-8qx14kzb\n","  Added file:///content/apex to build tracker '/tmp/pip-req-tracker-uei_ilwq'\n","    Running setup.py (path:/tmp/pip-req-build-8qx14kzb/setup.py) egg_info for package from file:///content/apex\n","    Running command python setup.py egg_info\n","\n","\n","    torch.__version__  = 1.7.0+cu101\n","\n","\n","    running egg_info\n","    creating /tmp/pip-req-build-8qx14kzb/pip-egg-info/apex.egg-info\n","    writing /tmp/pip-req-build-8qx14kzb/pip-egg-info/apex.egg-info/PKG-INFO\n","    writing dependency_links to /tmp/pip-req-build-8qx14kzb/pip-egg-info/apex.egg-info/dependency_links.txt\n","    writing top-level names to /tmp/pip-req-build-8qx14kzb/pip-egg-info/apex.egg-info/top_level.txt\n","    writing manifest file '/tmp/pip-req-build-8qx14kzb/pip-egg-info/apex.egg-info/SOURCES.txt'\n","    writing manifest file '/tmp/pip-req-build-8qx14kzb/pip-egg-info/apex.egg-info/SOURCES.txt'\n","    /tmp/pip-req-build-8qx14kzb/setup.py:67: UserWarning: Option --pyprof not specified. Not installing PyProf dependencies!\n","      warnings.warn(\"Option --pyprof not specified. Not installing PyProf dependencies!\")\n","  Source in /tmp/pip-req-build-8qx14kzb has version 0.1, which satisfies requirement apex==0.1 from file:///content/apex\n","  Removed apex==0.1 from file:///content/apex from build tracker '/tmp/pip-req-tracker-uei_ilwq'\n","Skipping wheel build for apex, due to binaries being disabled for it.\n","Installing collected packages: apex\n","  Found existing installation: apex 0.1\n","    Uninstalling apex-0.1:\n","      Created temporary directory: /tmp/pip-uninstall-f6qb3typ\n","      Removing file or directory /usr/local/lib/python3.6/dist-packages/apex-0.1-py3.6.egg\n","      Removing pth entries from /usr/local/lib/python3.6/dist-packages/easy-install.pth:\n","      Removing entry: ./apex-0.1-py3.6.egg\n","      Successfully uninstalled apex-0.1\n","  Created temporary directory: /tmp/pip-record-vfmc8jt_\n","    Running command /usr/bin/python3 -u -c 'import sys, setuptools, tokenize; sys.argv[0] = '\"'\"'/tmp/pip-req-build-8qx14kzb/setup.py'\"'\"'; __file__='\"'\"'/tmp/pip-req-build-8qx14kzb/setup.py'\"'\"';f=getattr(tokenize, '\"'\"'open'\"'\"', open)(__file__);code=f.read().replace('\"'\"'\\r\\n'\"'\"', '\"'\"'\\n'\"'\"');f.close();exec(compile(code, __file__, '\"'\"'exec'\"'\"'))' --cpp_ext --cuda_ext install --record /tmp/pip-record-vfmc8jt_/install-record.txt --single-version-externally-managed --compile\n","\n","\n","    torch.__version__  = 1.7.0+cu101\n","\n","\n","    /tmp/pip-req-build-8qx14kzb/setup.py:67: UserWarning: Option --pyprof not specified. Not installing PyProf dependencies!\n","      warnings.warn(\"Option --pyprof not specified. Not installing PyProf dependencies!\")\n","\n","    Compiling cuda extensions with\n","    nvcc: NVIDIA (R) Cuda compiler driver\n","    Copyright (c) 2005-2019 NVIDIA Corporation\n","    Built on Sun_Jul_28_19:07:16_PDT_2019\n","    Cuda compilation tools, release 10.1, V10.1.243\n","    from /usr/local/cuda/bin\n","\n","    running install\n","    running build\n","    running build_py\n","    creating build\n","    creating build/lib.linux-x86_64-3.6\n","    creating build/lib.linux-x86_64-3.6/apex\n","    copying apex/__init__.py -> build/lib.linux-x86_64-3.6/apex\n","    creating build/lib.linux-x86_64-3.6/apex/fp16_utils\n","    copying apex/fp16_utils/fp16_optimizer.py -> build/lib.linux-x86_64-3.6/apex/fp16_utils\n","    copying apex/fp16_utils/loss_scaler.py -> build/lib.linux-x86_64-3.6/apex/fp16_utils\n","    copying apex/fp16_utils/fp16util.py -> build/lib.linux-x86_64-3.6/apex/fp16_utils\n","    copying apex/fp16_utils/__init__.py -> build/lib.linux-x86_64-3.6/apex/fp16_utils\n","    creating build/lib.linux-x86_64-3.6/apex/mlp\n","    copying apex/mlp/mlp.py -> build/lib.linux-x86_64-3.6/apex/mlp\n","    copying apex/mlp/__init__.py -> build/lib.linux-x86_64-3.6/apex/mlp\n","    creating build/lib.linux-x86_64-3.6/apex/parallel\n","    copying apex/parallel/multiproc.py -> build/lib.linux-x86_64-3.6/apex/parallel\n","    copying apex/parallel/optimized_sync_batchnorm.py -> build/lib.linux-x86_64-3.6/apex/parallel\n","    copying apex/parallel/optimized_sync_batchnorm_kernel.py -> build/lib.linux-x86_64-3.6/apex/parallel\n","    copying apex/parallel/sync_batchnorm_kernel.py -> build/lib.linux-x86_64-3.6/apex/parallel\n","    copying apex/parallel/sync_batchnorm.py -> build/lib.linux-x86_64-3.6/apex/parallel\n","    copying apex/parallel/LARC.py -> build/lib.linux-x86_64-3.6/apex/parallel\n","    copying apex/parallel/__init__.py -> build/lib.linux-x86_64-3.6/apex/parallel\n","    copying apex/parallel/distributed.py -> build/lib.linux-x86_64-3.6/apex/parallel\n","    creating build/lib.linux-x86_64-3.6/apex/RNN\n","    copying apex/RNN/cells.py -> build/lib.linux-x86_64-3.6/apex/RNN\n","    copying apex/RNN/models.py -> build/lib.linux-x86_64-3.6/apex/RNN\n","    copying apex/RNN/RNNBackend.py -> build/lib.linux-x86_64-3.6/apex/RNN\n","    copying apex/RNN/__init__.py -> build/lib.linux-x86_64-3.6/apex/RNN\n","    creating build/lib.linux-x86_64-3.6/apex/pyprof\n","    copying apex/pyprof/__init__.py -> build/lib.linux-x86_64-3.6/apex/pyprof\n","    creating build/lib.linux-x86_64-3.6/apex/reparameterization\n","    copying apex/reparameterization/weight_norm.py -> build/lib.linux-x86_64-3.6/apex/reparameterization\n","    copying apex/reparameterization/reparameterization.py -> build/lib.linux-x86_64-3.6/apex/reparameterization\n","    copying apex/reparameterization/__init__.py -> build/lib.linux-x86_64-3.6/apex/reparameterization\n","    creating build/lib.linux-x86_64-3.6/apex/amp\n","    copying apex/amp/rnn_compat.py -> build/lib.linux-x86_64-3.6/apex/amp\n","    copying apex/amp/_process_optimizer.py -> build/lib.linux-x86_64-3.6/apex/amp\n","    copying apex/amp/_amp_state.py -> build/lib.linux-x86_64-3.6/apex/amp\n","    copying apex/amp/wrap.py -> build/lib.linux-x86_64-3.6/apex/amp\n","    copying apex/amp/compat.py -> build/lib.linux-x86_64-3.6/apex/amp\n","    copying apex/amp/frontend.py -> build/lib.linux-x86_64-3.6/apex/amp\n","    copying apex/amp/scaler.py -> build/lib.linux-x86_64-3.6/apex/amp\n","    copying apex/amp/__version__.py -> build/lib.linux-x86_64-3.6/apex/amp\n","    copying apex/amp/amp.py -> build/lib.linux-x86_64-3.6/apex/amp\n","    copying apex/amp/_initialize.py -> build/lib.linux-x86_64-3.6/apex/amp\n","    copying apex/amp/handle.py -> build/lib.linux-x86_64-3.6/apex/amp\n","    copying apex/amp/opt.py -> build/lib.linux-x86_64-3.6/apex/amp\n","    copying apex/amp/utils.py -> build/lib.linux-x86_64-3.6/apex/amp\n","    copying apex/amp/__init__.py -> build/lib.linux-x86_64-3.6/apex/amp\n","    creating build/lib.linux-x86_64-3.6/apex/contrib\n","    copying apex/contrib/__init__.py -> build/lib.linux-x86_64-3.6/apex/contrib\n","    creating build/lib.linux-x86_64-3.6/apex/multi_tensor_apply\n","    copying apex/multi_tensor_apply/multi_tensor_apply.py -> build/lib.linux-x86_64-3.6/apex/multi_tensor_apply\n","    copying apex/multi_tensor_apply/__init__.py -> build/lib.linux-x86_64-3.6/apex/multi_tensor_apply\n","    creating build/lib.linux-x86_64-3.6/apex/optimizers\n","    copying apex/optimizers/fused_adagrad.py -> build/lib.linux-x86_64-3.6/apex/optimizers\n","    copying apex/optimizers/fused_novograd.py -> build/lib.linux-x86_64-3.6/apex/optimizers\n","    copying apex/optimizers/fused_adam.py -> build/lib.linux-x86_64-3.6/apex/optimizers\n","    copying apex/optimizers/fused_sgd.py -> build/lib.linux-x86_64-3.6/apex/optimizers\n","    copying apex/optimizers/fused_lamb.py -> build/lib.linux-x86_64-3.6/apex/optimizers\n","    copying apex/optimizers/__init__.py -> build/lib.linux-x86_64-3.6/apex/optimizers\n","    creating build/lib.linux-x86_64-3.6/apex/normalization\n","    copying apex/normalization/fused_layer_norm.py -> build/lib.linux-x86_64-3.6/apex/normalization\n","    copying apex/normalization/__init__.py -> build/lib.linux-x86_64-3.6/apex/normalization\n","    creating build/lib.linux-x86_64-3.6/apex/pyprof/prof\n","    copying apex/pyprof/prof/utility.py -> build/lib.linux-x86_64-3.6/apex/pyprof/prof\n","    copying apex/pyprof/prof/blas.py -> build/lib.linux-x86_64-3.6/apex/pyprof/prof\n","    copying apex/pyprof/prof/loss.py -> build/lib.linux-x86_64-3.6/apex/pyprof/prof\n","    copying apex/pyprof/prof/misc.py -> build/lib.linux-x86_64-3.6/apex/pyprof/prof\n","    copying apex/pyprof/prof/recurrentCell.py -> build/lib.linux-x86_64-3.6/apex/pyprof/prof\n","    copying apex/pyprof/prof/optim.py -> build/lib.linux-x86_64-3.6/apex/pyprof/prof\n","    copying apex/pyprof/prof/reduction.py -> build/lib.linux-x86_64-3.6/apex/pyprof/prof\n","    copying apex/pyprof/prof/prof.py -> build/lib.linux-x86_64-3.6/apex/pyprof/prof\n","    copying apex/pyprof/prof/output.py -> build/lib.linux-x86_64-3.6/apex/pyprof/prof\n","    copying apex/pyprof/prof/index_slice_join_mutate.py -> build/lib.linux-x86_64-3.6/apex/pyprof/prof\n","    copying apex/pyprof/prof/activation.py -> build/lib.linux-x86_64-3.6/apex/pyprof/prof\n","    copying apex/pyprof/prof/pointwise.py -> build/lib.linux-x86_64-3.6/apex/pyprof/prof\n","    copying apex/pyprof/prof/usage.py -> build/lib.linux-x86_64-3.6/apex/pyprof/prof\n","    copying apex/pyprof/prof/base.py -> build/lib.linux-x86_64-3.6/apex/pyprof/prof\n","    copying apex/pyprof/prof/pooling.py -> build/lib.linux-x86_64-3.6/apex/pyprof/prof\n","    copying apex/pyprof/prof/convert.py -> build/lib.linux-x86_64-3.6/apex/pyprof/prof\n","    copying apex/pyprof/prof/randomSample.py -> build/lib.linux-x86_64-3.6/apex/pyprof/prof\n","    copying apex/pyprof/prof/data.py -> build/lib.linux-x86_64-3.6/apex/pyprof/prof\n","    copying apex/pyprof/prof/__main__.py -> build/lib.linux-x86_64-3.6/apex/pyprof/prof\n","    copying apex/pyprof/prof/conv.py -> build/lib.linux-x86_64-3.6/apex/pyprof/prof\n","    copying apex/pyprof/prof/dropout.py -> build/lib.linux-x86_64-3.6/apex/pyprof/prof\n","    copying apex/pyprof/prof/normalization.py -> build/lib.linux-x86_64-3.6/apex/pyprof/prof\n","    copying apex/pyprof/prof/softmax.py -> build/lib.linux-x86_64-3.6/apex/pyprof/prof\n","    copying apex/pyprof/prof/embedding.py -> build/lib.linux-x86_64-3.6/apex/pyprof/prof\n","    copying apex/pyprof/prof/linear.py -> build/lib.linux-x86_64-3.6/apex/pyprof/prof\n","    copying apex/pyprof/prof/__init__.py -> build/lib.linux-x86_64-3.6/apex/pyprof/prof\n","    creating build/lib.linux-x86_64-3.6/apex/pyprof/parse\n","    copying apex/pyprof/parse/parse.py -> build/lib.linux-x86_64-3.6/apex/pyprof/parse\n","    copying apex/pyprof/parse/nvvp.py -> build/lib.linux-x86_64-3.6/apex/pyprof/parse\n","    copying apex/pyprof/parse/__main__.py -> build/lib.linux-x86_64-3.6/apex/pyprof/parse\n","    copying apex/pyprof/parse/db.py -> build/lib.linux-x86_64-3.6/apex/pyprof/parse\n","    copying apex/pyprof/parse/kernel.py -> build/lib.linux-x86_64-3.6/apex/pyprof/parse\n","    copying apex/pyprof/parse/__init__.py -> build/lib.linux-x86_64-3.6/apex/pyprof/parse\n","    creating build/lib.linux-x86_64-3.6/apex/pyprof/nvtx\n","    copying apex/pyprof/nvtx/nvmarker.py -> build/lib.linux-x86_64-3.6/apex/pyprof/nvtx\n","    copying apex/pyprof/nvtx/__init__.py -> build/lib.linux-x86_64-3.6/apex/pyprof/nvtx\n","    creating build/lib.linux-x86_64-3.6/apex/amp/lists\n","    copying apex/amp/lists/tensor_overrides.py -> build/lib.linux-x86_64-3.6/apex/amp/lists\n","    copying apex/amp/lists/functional_overrides.py -> build/lib.linux-x86_64-3.6/apex/amp/lists\n","    copying apex/amp/lists/torch_overrides.py -> build/lib.linux-x86_64-3.6/apex/amp/lists\n","    copying apex/amp/lists/__init__.py -> build/lib.linux-x86_64-3.6/apex/amp/lists\n","    creating build/lib.linux-x86_64-3.6/apex/contrib/multihead_attn\n","    copying apex/contrib/multihead_attn/fast_encdec_multihead_attn_norm_add_func.py -> build/lib.linux-x86_64-3.6/apex/contrib/multihead_attn\n","    copying apex/contrib/multihead_attn/fast_self_multihead_attn_func.py -> build/lib.linux-x86_64-3.6/apex/contrib/multihead_attn\n","    copying apex/contrib/multihead_attn/encdec_multihead_attn.py -> build/lib.linux-x86_64-3.6/apex/contrib/multihead_attn\n","    copying apex/contrib/multihead_attn/self_multihead_attn.py -> build/lib.linux-x86_64-3.6/apex/contrib/multihead_attn\n","    copying apex/contrib/multihead_attn/fast_self_multihead_attn_norm_add_func.py -> build/lib.linux-x86_64-3.6/apex/contrib/multihead_attn\n","    copying apex/contrib/multihead_attn/encdec_multihead_attn_func.py -> build/lib.linux-x86_64-3.6/apex/contrib/multihead_attn\n","    copying apex/contrib/multihead_attn/mask_softmax_dropout_func.py -> build/lib.linux-x86_64-3.6/apex/contrib/multihead_attn\n","    copying apex/contrib/multihead_attn/self_multihead_attn_func.py -> build/lib.linux-x86_64-3.6/apex/contrib/multihead_attn\n","    copying apex/contrib/multihead_attn/fast_encdec_multihead_attn_func.py -> build/lib.linux-x86_64-3.6/apex/contrib/multihead_attn\n","    copying apex/contrib/multihead_attn/__init__.py -> build/lib.linux-x86_64-3.6/apex/contrib/multihead_attn\n","    creating build/lib.linux-x86_64-3.6/apex/contrib/groupbn\n","    copying apex/contrib/groupbn/batch_norm.py -> build/lib.linux-x86_64-3.6/apex/contrib/groupbn\n","    copying apex/contrib/groupbn/__init__.py -> build/lib.linux-x86_64-3.6/apex/contrib/groupbn\n","    creating build/lib.linux-x86_64-3.6/apex/contrib/sparsity\n","    copying apex/contrib/sparsity/sparse_masklib.py -> build/lib.linux-x86_64-3.6/apex/contrib/sparsity\n","    copying apex/contrib/sparsity/asp.py -> build/lib.linux-x86_64-3.6/apex/contrib/sparsity\n","    copying apex/contrib/sparsity/__init__.py -> build/lib.linux-x86_64-3.6/apex/contrib/sparsity\n","    creating build/lib.linux-x86_64-3.6/apex/contrib/xentropy\n","    copying apex/contrib/xentropy/softmax_xentropy.py -> build/lib.linux-x86_64-3.6/apex/contrib/xentropy\n","    copying apex/contrib/xentropy/__init__.py -> build/lib.linux-x86_64-3.6/apex/contrib/xentropy\n","    creating build/lib.linux-x86_64-3.6/apex/contrib/optimizers\n","    copying apex/contrib/optimizers/fp16_optimizer.py -> build/lib.linux-x86_64-3.6/apex/contrib/optimizers\n","    copying apex/contrib/optimizers/distributed_fused_lamb.py -> build/lib.linux-x86_64-3.6/apex/contrib/optimizers\n","    copying apex/contrib/optimizers/fused_adam.py -> build/lib.linux-x86_64-3.6/apex/contrib/optimizers\n","    copying apex/contrib/optimizers/distributed_fused_adam.py -> build/lib.linux-x86_64-3.6/apex/contrib/optimizers\n","    copying apex/contrib/optimizers/distributed_fused_adam_v3.py -> build/lib.linux-x86_64-3.6/apex/contrib/optimizers\n","    copying apex/contrib/optimizers/fused_sgd.py -> build/lib.linux-x86_64-3.6/apex/contrib/optimizers\n","    copying apex/contrib/optimizers/distributed_fused_adam_v2.py -> build/lib.linux-x86_64-3.6/apex/contrib/optimizers\n","    copying apex/contrib/optimizers/fused_lamb.py -> build/lib.linux-x86_64-3.6/apex/contrib/optimizers\n","    copying apex/contrib/optimizers/__init__.py -> build/lib.linux-x86_64-3.6/apex/contrib/optimizers\n","    running build_ext\n","    /usr/local/lib/python3.6/dist-packages/torch/utils/cpp_extension.py:339: UserWarning: Attempted to use ninja as the BuildExtension backend but we could not find ninja.. Falling back to using the slow distutils backend.\n","      warnings.warn(msg.format('we could not find ninja.'))\n","    building 'apex_C' extension\n","    creating build/temp.linux-x86_64-3.6\n","    creating build/temp.linux-x86_64-3.6/csrc\n","    x86_64-linux-gnu-gcc -pthread -DNDEBUG -g -fwrapv -O2 -Wall -g -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -fPIC -I/usr/local/lib/python3.6/dist-packages/torch/include -I/usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include -I/usr/local/lib/python3.6/dist-packages/torch/include/TH -I/usr/local/lib/python3.6/dist-packages/torch/include/THC -I/usr/include/python3.6m -c csrc/flatten_unflatten.cpp -o build/temp.linux-x86_64-3.6/csrc/flatten_unflatten.o -DTORCH_API_INCLUDE_EXTENSION_H -DTORCH_EXTENSION_NAME=apex_C -D_GLIBCXX_USE_CXX11_ABI=0 -std=c++14\n","    In file included from /usr/local/lib/python3.6/dist-packages/torch/include/ATen/Parallel.h:149:0,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/utils.h:3,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/nn/cloneable.h:5,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/nn.h:3,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/all.h:12,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/extension.h:4,\n","                     from csrc/flatten_unflatten.cpp:1:\n","    /usr/local/lib/python3.6/dist-packages/torch/include/ATen/ParallelOpenMP.h:84:0: warning: ignoring #pragma omp parallel [-Wunknown-pragmas]\n","     #pragma omp parallel for if ((end - begin) >= grain_size)\n","\n","    In file included from csrc/flatten_unflatten.cpp:2:0:\n","    /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/utils/tensor_flatten.h: In member function ‘at::DeprecatedTypeProperties& torch::utils::TensorGroup::type()’:\n","    /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/utils/tensor_flatten.h:36:28: warning: ‘at::DeprecatedTypeProperties& at::Tensor::type() const’ is deprecated: Tensor.type() is deprecated. Instead use Tensor.options(), which in many cases (e.g. in a constructor) is a drop-in replacement. If you were using data from type(), that is now available from Tensor itself, so instead of tensor.type().scalar_type(), use tensor.scalar_type() instead and instead of tensor.type().backend() use tensor.device(). [-Wdeprecated-declarations]\n","         return tensors[0].type();\n","                                ^\n","    In file included from /usr/local/lib/python3.6/dist-packages/torch/include/ATen/Tensor.h:3:0,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/ATen/Context.h:4,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/ATen/ATen.h:9,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/types.h:3,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/data/dataloader_options.h:4,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/data/dataloader/base.h:3,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/data/dataloader/stateful.h:3,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/data/dataloader.h:3,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/data.h:3,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/all.h:8,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/extension.h:4,\n","                     from csrc/flatten_unflatten.cpp:1:\n","    /usr/local/lib/python3.6/dist-packages/torch/include/ATen/core/TensorBody.h:277:30: note: declared here\n","       DeprecatedTypeProperties & type() const {\n","                                  ^~~~\n","    x86_64-linux-gnu-g++ -pthread -shared -Wl,-O1 -Wl,-Bsymbolic-functions -Wl,-Bsymbolic-functions -Wl,-z,relro -Wl,-Bsymbolic-functions -Wl,-z,relro -g -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 build/temp.linux-x86_64-3.6/csrc/flatten_unflatten.o -L/usr/local/lib/python3.6/dist-packages/torch/lib -lc10 -ltorch -ltorch_cpu -ltorch_python -o build/lib.linux-x86_64-3.6/apex_C.cpython-36m-x86_64-linux-gnu.so\n","    building 'amp_C' extension\n","    x86_64-linux-gnu-gcc -pthread -DNDEBUG -g -fwrapv -O2 -Wall -g -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -fPIC -I/usr/local/lib/python3.6/dist-packages/torch/include -I/usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include -I/usr/local/lib/python3.6/dist-packages/torch/include/TH -I/usr/local/lib/python3.6/dist-packages/torch/include/THC -I/usr/local/cuda/include -I/usr/include/python3.6m -c csrc/amp_C_frontend.cpp -o build/temp.linux-x86_64-3.6/csrc/amp_C_frontend.o -O3 -DVERSION_GE_1_1 -DVERSION_GE_1_3 -DVERSION_GE_1_5 -DTORCH_API_INCLUDE_EXTENSION_H -DTORCH_EXTENSION_NAME=amp_C -D_GLIBCXX_USE_CXX11_ABI=0 -std=c++14\n","    In file included from /usr/local/lib/python3.6/dist-packages/torch/include/ATen/Parallel.h:149:0,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/utils.h:3,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/nn/cloneable.h:5,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/nn.h:3,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/all.h:12,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/extension.h:4,\n","                     from csrc/amp_C_frontend.cpp:1:\n","    /usr/local/lib/python3.6/dist-packages/torch/include/ATen/ParallelOpenMP.h:84:0: warning: ignoring #pragma omp parallel [-Wunknown-pragmas]\n","     #pragma omp parallel for if ((end - begin) >= grain_size)\n","\n","    /usr/local/cuda/bin/nvcc -I/usr/local/lib/python3.6/dist-packages/torch/include -I/usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include -I/usr/local/lib/python3.6/dist-packages/torch/include/TH -I/usr/local/lib/python3.6/dist-packages/torch/include/THC -I/usr/local/cuda/include -I/usr/include/python3.6m -c csrc/multi_tensor_sgd_kernel.cu -o build/temp.linux-x86_64-3.6/csrc/multi_tensor_sgd_kernel.o -D__CUDA_NO_HALF_OPERATORS__ -D__CUDA_NO_HALF_CONVERSIONS__ -D__CUDA_NO_HALF2_OPERATORS__ --expt-relaxed-constexpr --compiler-options '-fPIC' -lineinfo -O3 --use_fast_math -DVERSION_GE_1_1 -DVERSION_GE_1_3 -DVERSION_GE_1_5 -DTORCH_API_INCLUDE_EXTENSION_H -DTORCH_EXTENSION_NAME=amp_C -D_GLIBCXX_USE_CXX11_ABI=0 -gencode=arch=compute_75,code=sm_75 -std=c++14\n","    /usr/local/cuda/bin/nvcc -I/usr/local/lib/python3.6/dist-packages/torch/include -I/usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include -I/usr/local/lib/python3.6/dist-packages/torch/include/TH -I/usr/local/lib/python3.6/dist-packages/torch/include/THC -I/usr/local/cuda/include -I/usr/include/python3.6m -c csrc/multi_tensor_scale_kernel.cu -o build/temp.linux-x86_64-3.6/csrc/multi_tensor_scale_kernel.o -D__CUDA_NO_HALF_OPERATORS__ -D__CUDA_NO_HALF_CONVERSIONS__ -D__CUDA_NO_HALF2_OPERATORS__ --expt-relaxed-constexpr --compiler-options '-fPIC' -lineinfo -O3 --use_fast_math -DVERSION_GE_1_1 -DVERSION_GE_1_3 -DVERSION_GE_1_5 -DTORCH_API_INCLUDE_EXTENSION_H -DTORCH_EXTENSION_NAME=amp_C -D_GLIBCXX_USE_CXX11_ABI=0 -gencode=arch=compute_75,code=sm_75 -std=c++14\n","    /usr/local/cuda/bin/nvcc -I/usr/local/lib/python3.6/dist-packages/torch/include -I/usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include -I/usr/local/lib/python3.6/dist-packages/torch/include/TH -I/usr/local/lib/python3.6/dist-packages/torch/include/THC -I/usr/local/cuda/include -I/usr/include/python3.6m -c csrc/multi_tensor_axpby_kernel.cu -o build/temp.linux-x86_64-3.6/csrc/multi_tensor_axpby_kernel.o -D__CUDA_NO_HALF_OPERATORS__ -D__CUDA_NO_HALF_CONVERSIONS__ -D__CUDA_NO_HALF2_OPERATORS__ --expt-relaxed-constexpr --compiler-options '-fPIC' -lineinfo -O3 --use_fast_math -DVERSION_GE_1_1 -DVERSION_GE_1_3 -DVERSION_GE_1_5 -DTORCH_API_INCLUDE_EXTENSION_H -DTORCH_EXTENSION_NAME=amp_C -D_GLIBCXX_USE_CXX11_ABI=0 -gencode=arch=compute_75,code=sm_75 -std=c++14\n","    /usr/local/cuda/bin/nvcc -I/usr/local/lib/python3.6/dist-packages/torch/include -I/usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include -I/usr/local/lib/python3.6/dist-packages/torch/include/TH -I/usr/local/lib/python3.6/dist-packages/torch/include/THC -I/usr/local/cuda/include -I/usr/include/python3.6m -c csrc/multi_tensor_l2norm_kernel.cu -o build/temp.linux-x86_64-3.6/csrc/multi_tensor_l2norm_kernel.o -D__CUDA_NO_HALF_OPERATORS__ -D__CUDA_NO_HALF_CONVERSIONS__ -D__CUDA_NO_HALF2_OPERATORS__ --expt-relaxed-constexpr --compiler-options '-fPIC' -lineinfo -O3 --use_fast_math -DVERSION_GE_1_1 -DVERSION_GE_1_3 -DVERSION_GE_1_5 -DTORCH_API_INCLUDE_EXTENSION_H -DTORCH_EXTENSION_NAME=amp_C -D_GLIBCXX_USE_CXX11_ABI=0 -gencode=arch=compute_75,code=sm_75 -std=c++14\n","    /usr/local/cuda/bin/nvcc -I/usr/local/lib/python3.6/dist-packages/torch/include -I/usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include -I/usr/local/lib/python3.6/dist-packages/torch/include/TH -I/usr/local/lib/python3.6/dist-packages/torch/include/THC -I/usr/local/cuda/include -I/usr/include/python3.6m -c csrc/multi_tensor_lamb_stage_1.cu -o build/temp.linux-x86_64-3.6/csrc/multi_tensor_lamb_stage_1.o -D__CUDA_NO_HALF_OPERATORS__ -D__CUDA_NO_HALF_CONVERSIONS__ -D__CUDA_NO_HALF2_OPERATORS__ --expt-relaxed-constexpr --compiler-options '-fPIC' -lineinfo -O3 --use_fast_math -DVERSION_GE_1_1 -DVERSION_GE_1_3 -DVERSION_GE_1_5 -DTORCH_API_INCLUDE_EXTENSION_H -DTORCH_EXTENSION_NAME=amp_C -D_GLIBCXX_USE_CXX11_ABI=0 -gencode=arch=compute_75,code=sm_75 -std=c++14\n","    /usr/local/cuda/bin/nvcc -I/usr/local/lib/python3.6/dist-packages/torch/include -I/usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include -I/usr/local/lib/python3.6/dist-packages/torch/include/TH -I/usr/local/lib/python3.6/dist-packages/torch/include/THC -I/usr/local/cuda/include -I/usr/include/python3.6m -c csrc/multi_tensor_lamb_stage_2.cu -o build/temp.linux-x86_64-3.6/csrc/multi_tensor_lamb_stage_2.o -D__CUDA_NO_HALF_OPERATORS__ -D__CUDA_NO_HALF_CONVERSIONS__ -D__CUDA_NO_HALF2_OPERATORS__ --expt-relaxed-constexpr --compiler-options '-fPIC' -lineinfo -O3 --use_fast_math -DVERSION_GE_1_1 -DVERSION_GE_1_3 -DVERSION_GE_1_5 -DTORCH_API_INCLUDE_EXTENSION_H -DTORCH_EXTENSION_NAME=amp_C -D_GLIBCXX_USE_CXX11_ABI=0 -gencode=arch=compute_75,code=sm_75 -std=c++14\n","    /usr/local/cuda/bin/nvcc -I/usr/local/lib/python3.6/dist-packages/torch/include -I/usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include -I/usr/local/lib/python3.6/dist-packages/torch/include/TH -I/usr/local/lib/python3.6/dist-packages/torch/include/THC -I/usr/local/cuda/include -I/usr/include/python3.6m -c csrc/multi_tensor_adam.cu -o build/temp.linux-x86_64-3.6/csrc/multi_tensor_adam.o -D__CUDA_NO_HALF_OPERATORS__ -D__CUDA_NO_HALF_CONVERSIONS__ -D__CUDA_NO_HALF2_OPERATORS__ --expt-relaxed-constexpr --compiler-options '-fPIC' -lineinfo -O3 --use_fast_math -DVERSION_GE_1_1 -DVERSION_GE_1_3 -DVERSION_GE_1_5 -DTORCH_API_INCLUDE_EXTENSION_H -DTORCH_EXTENSION_NAME=amp_C -D_GLIBCXX_USE_CXX11_ABI=0 -gencode=arch=compute_75,code=sm_75 -std=c++14\n","    /usr/local/cuda/bin/nvcc -I/usr/local/lib/python3.6/dist-packages/torch/include -I/usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include -I/usr/local/lib/python3.6/dist-packages/torch/include/TH -I/usr/local/lib/python3.6/dist-packages/torch/include/THC -I/usr/local/cuda/include -I/usr/include/python3.6m -c csrc/multi_tensor_adagrad.cu -o build/temp.linux-x86_64-3.6/csrc/multi_tensor_adagrad.o -D__CUDA_NO_HALF_OPERATORS__ -D__CUDA_NO_HALF_CONVERSIONS__ -D__CUDA_NO_HALF2_OPERATORS__ --expt-relaxed-constexpr --compiler-options '-fPIC' -lineinfo -O3 --use_fast_math -DVERSION_GE_1_1 -DVERSION_GE_1_3 -DVERSION_GE_1_5 -DTORCH_API_INCLUDE_EXTENSION_H -DTORCH_EXTENSION_NAME=amp_C -D_GLIBCXX_USE_CXX11_ABI=0 -gencode=arch=compute_75,code=sm_75 -std=c++14\n","    /usr/local/cuda/bin/nvcc -I/usr/local/lib/python3.6/dist-packages/torch/include -I/usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include -I/usr/local/lib/python3.6/dist-packages/torch/include/TH -I/usr/local/lib/python3.6/dist-packages/torch/include/THC -I/usr/local/cuda/include -I/usr/include/python3.6m -c csrc/multi_tensor_novograd.cu -o build/temp.linux-x86_64-3.6/csrc/multi_tensor_novograd.o -D__CUDA_NO_HALF_OPERATORS__ -D__CUDA_NO_HALF_CONVERSIONS__ -D__CUDA_NO_HALF2_OPERATORS__ --expt-relaxed-constexpr --compiler-options '-fPIC' -lineinfo -O3 --use_fast_math -DVERSION_GE_1_1 -DVERSION_GE_1_3 -DVERSION_GE_1_5 -DTORCH_API_INCLUDE_EXTENSION_H -DTORCH_EXTENSION_NAME=amp_C -D_GLIBCXX_USE_CXX11_ABI=0 -gencode=arch=compute_75,code=sm_75 -std=c++14\n","    /usr/local/cuda/bin/nvcc -I/usr/local/lib/python3.6/dist-packages/torch/include -I/usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include -I/usr/local/lib/python3.6/dist-packages/torch/include/TH -I/usr/local/lib/python3.6/dist-packages/torch/include/THC -I/usr/local/cuda/include -I/usr/include/python3.6m -c csrc/multi_tensor_lamb.cu -o build/temp.linux-x86_64-3.6/csrc/multi_tensor_lamb.o -D__CUDA_NO_HALF_OPERATORS__ -D__CUDA_NO_HALF_CONVERSIONS__ -D__CUDA_NO_HALF2_OPERATORS__ --expt-relaxed-constexpr --compiler-options '-fPIC' -lineinfo -O3 --use_fast_math -DVERSION_GE_1_1 -DVERSION_GE_1_3 -DVERSION_GE_1_5 -DTORCH_API_INCLUDE_EXTENSION_H -DTORCH_EXTENSION_NAME=amp_C -D_GLIBCXX_USE_CXX11_ABI=0 -gencode=arch=compute_75,code=sm_75 -std=c++14\n","    x86_64-linux-gnu-g++ -pthread -shared -Wl,-O1 -Wl,-Bsymbolic-functions -Wl,-Bsymbolic-functions -Wl,-z,relro -Wl,-Bsymbolic-functions -Wl,-z,relro -g -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 build/temp.linux-x86_64-3.6/csrc/amp_C_frontend.o build/temp.linux-x86_64-3.6/csrc/multi_tensor_sgd_kernel.o build/temp.linux-x86_64-3.6/csrc/multi_tensor_scale_kernel.o build/temp.linux-x86_64-3.6/csrc/multi_tensor_axpby_kernel.o build/temp.linux-x86_64-3.6/csrc/multi_tensor_l2norm_kernel.o build/temp.linux-x86_64-3.6/csrc/multi_tensor_lamb_stage_1.o build/temp.linux-x86_64-3.6/csrc/multi_tensor_lamb_stage_2.o build/temp.linux-x86_64-3.6/csrc/multi_tensor_adam.o build/temp.linux-x86_64-3.6/csrc/multi_tensor_adagrad.o build/temp.linux-x86_64-3.6/csrc/multi_tensor_novograd.o build/temp.linux-x86_64-3.6/csrc/multi_tensor_lamb.o -L/usr/local/lib/python3.6/dist-packages/torch/lib -L/usr/local/cuda/lib64 -lc10 -ltorch -ltorch_cpu -ltorch_python -lcudart -lc10_cuda -ltorch_cuda -o build/lib.linux-x86_64-3.6/amp_C.cpython-36m-x86_64-linux-gnu.so\n","    building 'syncbn' extension\n","    x86_64-linux-gnu-gcc -pthread -DNDEBUG -g -fwrapv -O2 -Wall -g -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -fPIC -I/usr/local/lib/python3.6/dist-packages/torch/include -I/usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include -I/usr/local/lib/python3.6/dist-packages/torch/include/TH -I/usr/local/lib/python3.6/dist-packages/torch/include/THC -I/usr/local/cuda/include -I/usr/include/python3.6m -c csrc/syncbn.cpp -o build/temp.linux-x86_64-3.6/csrc/syncbn.o -O3 -DVERSION_GE_1_1 -DVERSION_GE_1_3 -DVERSION_GE_1_5 -DTORCH_API_INCLUDE_EXTENSION_H -DTORCH_EXTENSION_NAME=syncbn -D_GLIBCXX_USE_CXX11_ABI=0 -std=c++14\n","    In file included from /usr/local/lib/python3.6/dist-packages/torch/include/ATen/Parallel.h:149:0,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/utils.h:3,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/nn/cloneable.h:5,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/nn.h:3,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/all.h:12,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/extension.h:4,\n","                     from csrc/syncbn.cpp:1:\n","    /usr/local/lib/python3.6/dist-packages/torch/include/ATen/ParallelOpenMP.h:84:0: warning: ignoring #pragma omp parallel [-Wunknown-pragmas]\n","     #pragma omp parallel for if ((end - begin) >= grain_size)\n","\n","    /usr/local/cuda/bin/nvcc -I/usr/local/lib/python3.6/dist-packages/torch/include -I/usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include -I/usr/local/lib/python3.6/dist-packages/torch/include/TH -I/usr/local/lib/python3.6/dist-packages/torch/include/THC -I/usr/local/cuda/include -I/usr/include/python3.6m -c csrc/welford.cu -o build/temp.linux-x86_64-3.6/csrc/welford.o -D__CUDA_NO_HALF_OPERATORS__ -D__CUDA_NO_HALF_CONVERSIONS__ -D__CUDA_NO_HALF2_OPERATORS__ --expt-relaxed-constexpr --compiler-options '-fPIC' -O3 -DVERSION_GE_1_1 -DVERSION_GE_1_3 -DVERSION_GE_1_5 -DTORCH_API_INCLUDE_EXTENSION_H -DTORCH_EXTENSION_NAME=syncbn -D_GLIBCXX_USE_CXX11_ABI=0 -gencode=arch=compute_75,code=sm_75 -std=c++14\n","    x86_64-linux-gnu-g++ -pthread -shared -Wl,-O1 -Wl,-Bsymbolic-functions -Wl,-Bsymbolic-functions -Wl,-z,relro -Wl,-Bsymbolic-functions -Wl,-z,relro -g -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 build/temp.linux-x86_64-3.6/csrc/syncbn.o build/temp.linux-x86_64-3.6/csrc/welford.o -L/usr/local/lib/python3.6/dist-packages/torch/lib -L/usr/local/cuda/lib64 -lc10 -ltorch -ltorch_cpu -ltorch_python -lcudart -lc10_cuda -ltorch_cuda -o build/lib.linux-x86_64-3.6/syncbn.cpython-36m-x86_64-linux-gnu.so\n","    building 'fused_layer_norm_cuda' extension\n","    x86_64-linux-gnu-gcc -pthread -DNDEBUG -g -fwrapv -O2 -Wall -g -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -fPIC -I/usr/local/lib/python3.6/dist-packages/torch/include -I/usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include -I/usr/local/lib/python3.6/dist-packages/torch/include/TH -I/usr/local/lib/python3.6/dist-packages/torch/include/THC -I/usr/local/cuda/include -I/usr/include/python3.6m -c csrc/layer_norm_cuda.cpp -o build/temp.linux-x86_64-3.6/csrc/layer_norm_cuda.o -O3 -DVERSION_GE_1_1 -DVERSION_GE_1_3 -DVERSION_GE_1_5 -DTORCH_API_INCLUDE_EXTENSION_H -DTORCH_EXTENSION_NAME=fused_layer_norm_cuda -D_GLIBCXX_USE_CXX11_ABI=0 -std=c++14\n","    In file included from /usr/local/lib/python3.6/dist-packages/torch/include/ATen/Parallel.h:149:0,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/utils.h:3,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/nn/cloneable.h:5,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/nn.h:3,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/all.h:12,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/extension.h:4,\n","                     from csrc/layer_norm_cuda.cpp:1:\n","    /usr/local/lib/python3.6/dist-packages/torch/include/ATen/ParallelOpenMP.h:84:0: warning: ignoring #pragma omp parallel [-Wunknown-pragmas]\n","     #pragma omp parallel for if ((end - begin) >= grain_size)\n","\n","    In file included from /usr/local/lib/python3.6/dist-packages/torch/include/c10/core/DeviceType.h:8:0,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/c10/core/Device.h:3,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/c10/core/Allocator.h:6,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/ATen/ATen.h:7,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/types.h:3,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/data/dataloader_options.h:4,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/data/dataloader/base.h:3,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/data/dataloader/stateful.h:3,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/data/dataloader.h:3,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/data.h:3,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/all.h:8,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/extension.h:4,\n","                     from csrc/layer_norm_cuda.cpp:1:\n","    csrc/layer_norm_cuda.cpp: In function ‘std::vector<at::Tensor> layer_norm(at::Tensor, c10::IntArrayRef, double)’:\n","    csrc/layer_norm_cuda.cpp:117:42: warning: ‘at::DeprecatedTypeProperties& at::Tensor::type() const’ is deprecated: Tensor.type() is deprecated. Instead use Tensor.options(), which in many cases (e.g. in a constructor) is a drop-in replacement. If you were using data from type(), that is now available from Tensor itself, so instead of tensor.type().scalar_type(), use tensor.scalar_type() instead and instead of tensor.type().backend() use tensor.device(). [-Wdeprecated-declarations]\n","     #define CHECK_CUDA(x) TORCH_CHECK(x.type().is_cuda(), #x \" must be a CUDA tensor\")\n","                                              ^\n","    /usr/local/lib/python3.6/dist-packages/torch/include/c10/macros/Macros.h:171:65: note: in definition of macro ‘C10_UNLIKELY’\n","     #define C10_UNLIKELY(expr)  (__builtin_expect(static_cast<bool>(expr), 0))\n","                                                                     ^~~~\n","    /usr/local/lib/python3.6/dist-packages/torch/include/c10/util/Exception.h:330:7: note: in expansion of macro ‘C10_UNLIKELY_OR_CONST’\n","       if (C10_UNLIKELY_OR_CONST(!(cond))) {                               \\\n","           ^~~~~~~~~~~~~~~~~~~~~\n","    /usr/local/lib/python3.6/dist-packages/torch/include/c10/util/Exception.h:318:3: note: in expansion of macro ‘TORCH_CHECK_WITH_MSG’\n","       TORCH_CHECK_WITH_MSG(error_t, cond, \"\", __VA_ARGS__)\n","       ^~~~~~~~~~~~~~~~~~~~\n","    /usr/local/lib/python3.6/dist-packages/torch/include/c10/util/Exception.h:341:32: note: in expansion of macro ‘TORCH_CHECK_WITH’\n","     #define TORCH_CHECK(cond, ...) TORCH_CHECK_WITH(Error, cond, __VA_ARGS__)\n","                                    ^~~~~~~~~~~~~~~~\n","    csrc/layer_norm_cuda.cpp:117:23: note: in expansion of macro ‘TORCH_CHECK’\n","     #define CHECK_CUDA(x) TORCH_CHECK(x.type().is_cuda(), #x \" must be a CUDA tensor\")\n","                           ^~~~~~~~~~~\n","    csrc/layer_norm_cuda.cpp:119:24: note: in expansion of macro ‘CHECK_CUDA’\n","     #define CHECK_INPUT(x) CHECK_CUDA(x); CHECK_CONTIGUOUS(x)\n","                            ^~~~~~~~~~\n","    csrc/layer_norm_cuda.cpp:129:3: note: in expansion of macro ‘CHECK_INPUT’\n","       CHECK_INPUT(input);\n","       ^~~~~~~~~~~\n","    In file included from /usr/local/lib/python3.6/dist-packages/torch/include/ATen/Tensor.h:3:0,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/ATen/Context.h:4,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/ATen/ATen.h:9,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/types.h:3,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/data/dataloader_options.h:4,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/data/dataloader/base.h:3,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/data/dataloader/stateful.h:3,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/data/dataloader.h:3,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/data.h:3,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/all.h:8,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/extension.h:4,\n","                     from csrc/layer_norm_cuda.cpp:1:\n","    /usr/local/lib/python3.6/dist-packages/torch/include/ATen/core/TensorBody.h:277:30: note: declared here\n","       DeprecatedTypeProperties & type() const {\n","                                  ^~~~\n","    In file included from /usr/local/lib/python3.6/dist-packages/torch/include/c10/core/DeviceType.h:8:0,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/c10/core/Device.h:3,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/c10/core/Allocator.h:6,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/ATen/ATen.h:7,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/types.h:3,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/data/dataloader_options.h:4,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/data/dataloader/base.h:3,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/data/dataloader/stateful.h:3,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/data/dataloader.h:3,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/data.h:3,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/all.h:8,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/extension.h:4,\n","                     from csrc/layer_norm_cuda.cpp:1:\n","    csrc/layer_norm_cuda.cpp: In function ‘std::vector<at::Tensor> layer_norm_affine(at::Tensor, c10::IntArrayRef, at::Tensor, at::Tensor, double)’:\n","    csrc/layer_norm_cuda.cpp:117:42: warning: ‘at::DeprecatedTypeProperties& at::Tensor::type() const’ is deprecated: Tensor.type() is deprecated. Instead use Tensor.options(), which in many cases (e.g. in a constructor) is a drop-in replacement. If you were using data from type(), that is now available from Tensor itself, so instead of tensor.type().scalar_type(), use tensor.scalar_type() instead and instead of tensor.type().backend() use tensor.device(). [-Wdeprecated-declarations]\n","     #define CHECK_CUDA(x) TORCH_CHECK(x.type().is_cuda(), #x \" must be a CUDA tensor\")\n","                                              ^\n","    /usr/local/lib/python3.6/dist-packages/torch/include/c10/macros/Macros.h:171:65: note: in definition of macro ‘C10_UNLIKELY’\n","     #define C10_UNLIKELY(expr)  (__builtin_expect(static_cast<bool>(expr), 0))\n","                                                                     ^~~~\n","    /usr/local/lib/python3.6/dist-packages/torch/include/c10/util/Exception.h:330:7: note: in expansion of macro ‘C10_UNLIKELY_OR_CONST’\n","       if (C10_UNLIKELY_OR_CONST(!(cond))) {                               \\\n","           ^~~~~~~~~~~~~~~~~~~~~\n","    /usr/local/lib/python3.6/dist-packages/torch/include/c10/util/Exception.h:318:3: note: in expansion of macro ‘TORCH_CHECK_WITH_MSG’\n","       TORCH_CHECK_WITH_MSG(error_t, cond, \"\", __VA_ARGS__)\n","       ^~~~~~~~~~~~~~~~~~~~\n","    /usr/local/lib/python3.6/dist-packages/torch/include/c10/util/Exception.h:341:32: note: in expansion of macro ‘TORCH_CHECK_WITH’\n","     #define TORCH_CHECK(cond, ...) TORCH_CHECK_WITH(Error, cond, __VA_ARGS__)\n","                                    ^~~~~~~~~~~~~~~~\n","    csrc/layer_norm_cuda.cpp:117:23: note: in expansion of macro ‘TORCH_CHECK’\n","     #define CHECK_CUDA(x) TORCH_CHECK(x.type().is_cuda(), #x \" must be a CUDA tensor\")\n","                           ^~~~~~~~~~~\n","    csrc/layer_norm_cuda.cpp:119:24: note: in expansion of macro ‘CHECK_CUDA’\n","     #define CHECK_INPUT(x) CHECK_CUDA(x); CHECK_CONTIGUOUS(x)\n","                            ^~~~~~~~~~\n","    csrc/layer_norm_cuda.cpp:149:3: note: in expansion of macro ‘CHECK_INPUT’\n","       CHECK_INPUT(input);\n","       ^~~~~~~~~~~\n","    In file included from /usr/local/lib/python3.6/dist-packages/torch/include/ATen/Tensor.h:3:0,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/ATen/Context.h:4,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/ATen/ATen.h:9,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/types.h:3,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/data/dataloader_options.h:4,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/data/dataloader/base.h:3,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/data/dataloader/stateful.h:3,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/data/dataloader.h:3,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/data.h:3,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/all.h:8,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/extension.h:4,\n","                     from csrc/layer_norm_cuda.cpp:1:\n","    /usr/local/lib/python3.6/dist-packages/torch/include/ATen/core/TensorBody.h:277:30: note: declared here\n","       DeprecatedTypeProperties & type() const {\n","                                  ^~~~\n","    In file included from /usr/local/lib/python3.6/dist-packages/torch/include/c10/core/DeviceType.h:8:0,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/c10/core/Device.h:3,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/c10/core/Allocator.h:6,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/ATen/ATen.h:7,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/types.h:3,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/data/dataloader_options.h:4,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/data/dataloader/base.h:3,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/data/dataloader/stateful.h:3,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/data/dataloader.h:3,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/data.h:3,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/all.h:8,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/extension.h:4,\n","                     from csrc/layer_norm_cuda.cpp:1:\n","    csrc/layer_norm_cuda.cpp:117:42: warning: ‘at::DeprecatedTypeProperties& at::Tensor::type() const’ is deprecated: Tensor.type() is deprecated. Instead use Tensor.options(), which in many cases (e.g. in a constructor) is a drop-in replacement. If you were using data from type(), that is now available from Tensor itself, so instead of tensor.type().scalar_type(), use tensor.scalar_type() instead and instead of tensor.type().backend() use tensor.device(). [-Wdeprecated-declarations]\n","     #define CHECK_CUDA(x) TORCH_CHECK(x.type().is_cuda(), #x \" must be a CUDA tensor\")\n","                                              ^\n","    /usr/local/lib/python3.6/dist-packages/torch/include/c10/macros/Macros.h:171:65: note: in definition of macro ‘C10_UNLIKELY’\n","     #define C10_UNLIKELY(expr)  (__builtin_expect(static_cast<bool>(expr), 0))\n","                                                                     ^~~~\n","    /usr/local/lib/python3.6/dist-packages/torch/include/c10/util/Exception.h:330:7: note: in expansion of macro ‘C10_UNLIKELY_OR_CONST’\n","       if (C10_UNLIKELY_OR_CONST(!(cond))) {                               \\\n","           ^~~~~~~~~~~~~~~~~~~~~\n","    /usr/local/lib/python3.6/dist-packages/torch/include/c10/util/Exception.h:318:3: note: in expansion of macro ‘TORCH_CHECK_WITH_MSG’\n","       TORCH_CHECK_WITH_MSG(error_t, cond, \"\", __VA_ARGS__)\n","       ^~~~~~~~~~~~~~~~~~~~\n","    /usr/local/lib/python3.6/dist-packages/torch/include/c10/util/Exception.h:341:32: note: in expansion of macro ‘TORCH_CHECK_WITH’\n","     #define TORCH_CHECK(cond, ...) TORCH_CHECK_WITH(Error, cond, __VA_ARGS__)\n","                                    ^~~~~~~~~~~~~~~~\n","    csrc/layer_norm_cuda.cpp:117:23: note: in expansion of macro ‘TORCH_CHECK’\n","     #define CHECK_CUDA(x) TORCH_CHECK(x.type().is_cuda(), #x \" must be a CUDA tensor\")\n","                           ^~~~~~~~~~~\n","    csrc/layer_norm_cuda.cpp:119:24: note: in expansion of macro ‘CHECK_CUDA’\n","     #define CHECK_INPUT(x) CHECK_CUDA(x); CHECK_CONTIGUOUS(x)\n","                            ^~~~~~~~~~\n","    csrc/layer_norm_cuda.cpp:150:3: note: in expansion of macro ‘CHECK_INPUT’\n","       CHECK_INPUT(gamma);\n","       ^~~~~~~~~~~\n","    In file included from /usr/local/lib/python3.6/dist-packages/torch/include/ATen/Tensor.h:3:0,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/ATen/Context.h:4,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/ATen/ATen.h:9,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/types.h:3,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/data/dataloader_options.h:4,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/data/dataloader/base.h:3,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/data/dataloader/stateful.h:3,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/data/dataloader.h:3,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/data.h:3,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/all.h:8,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/extension.h:4,\n","                     from csrc/layer_norm_cuda.cpp:1:\n","    /usr/local/lib/python3.6/dist-packages/torch/include/ATen/core/TensorBody.h:277:30: note: declared here\n","       DeprecatedTypeProperties & type() const {\n","                                  ^~~~\n","    In file included from /usr/local/lib/python3.6/dist-packages/torch/include/c10/core/DeviceType.h:8:0,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/c10/core/Device.h:3,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/c10/core/Allocator.h:6,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/ATen/ATen.h:7,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/types.h:3,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/data/dataloader_options.h:4,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/data/dataloader/base.h:3,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/data/dataloader/stateful.h:3,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/data/dataloader.h:3,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/data.h:3,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/all.h:8,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/extension.h:4,\n","                     from csrc/layer_norm_cuda.cpp:1:\n","    csrc/layer_norm_cuda.cpp:117:42: warning: ‘at::DeprecatedTypeProperties& at::Tensor::type() const’ is deprecated: Tensor.type() is deprecated. Instead use Tensor.options(), which in many cases (e.g. in a constructor) is a drop-in replacement. If you were using data from type(), that is now available from Tensor itself, so instead of tensor.type().scalar_type(), use tensor.scalar_type() instead and instead of tensor.type().backend() use tensor.device(). [-Wdeprecated-declarations]\n","     #define CHECK_CUDA(x) TORCH_CHECK(x.type().is_cuda(), #x \" must be a CUDA tensor\")\n","                                              ^\n","    /usr/local/lib/python3.6/dist-packages/torch/include/c10/macros/Macros.h:171:65: note: in definition of macro ‘C10_UNLIKELY’\n","     #define C10_UNLIKELY(expr)  (__builtin_expect(static_cast<bool>(expr), 0))\n","                                                                     ^~~~\n","    /usr/local/lib/python3.6/dist-packages/torch/include/c10/util/Exception.h:330:7: note: in expansion of macro ‘C10_UNLIKELY_OR_CONST’\n","       if (C10_UNLIKELY_OR_CONST(!(cond))) {                               \\\n","           ^~~~~~~~~~~~~~~~~~~~~\n","    /usr/local/lib/python3.6/dist-packages/torch/include/c10/util/Exception.h:318:3: note: in expansion of macro ‘TORCH_CHECK_WITH_MSG’\n","       TORCH_CHECK_WITH_MSG(error_t, cond, \"\", __VA_ARGS__)\n","       ^~~~~~~~~~~~~~~~~~~~\n","    /usr/local/lib/python3.6/dist-packages/torch/include/c10/util/Exception.h:341:32: note: in expansion of macro ‘TORCH_CHECK_WITH’\n","     #define TORCH_CHECK(cond, ...) TORCH_CHECK_WITH(Error, cond, __VA_ARGS__)\n","                                    ^~~~~~~~~~~~~~~~\n","    csrc/layer_norm_cuda.cpp:117:23: note: in expansion of macro ‘TORCH_CHECK’\n","     #define CHECK_CUDA(x) TORCH_CHECK(x.type().is_cuda(), #x \" must be a CUDA tensor\")\n","                           ^~~~~~~~~~~\n","    csrc/layer_norm_cuda.cpp:119:24: note: in expansion of macro ‘CHECK_CUDA’\n","     #define CHECK_INPUT(x) CHECK_CUDA(x); CHECK_CONTIGUOUS(x)\n","                            ^~~~~~~~~~\n","    csrc/layer_norm_cuda.cpp:151:3: note: in expansion of macro ‘CHECK_INPUT’\n","       CHECK_INPUT(beta);\n","       ^~~~~~~~~~~\n","    In file included from /usr/local/lib/python3.6/dist-packages/torch/include/ATen/Tensor.h:3:0,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/ATen/Context.h:4,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/ATen/ATen.h:9,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/types.h:3,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/data/dataloader_options.h:4,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/data/dataloader/base.h:3,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/data/dataloader/stateful.h:3,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/data/dataloader.h:3,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/data.h:3,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/all.h:8,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/extension.h:4,\n","                     from csrc/layer_norm_cuda.cpp:1:\n","    /usr/local/lib/python3.6/dist-packages/torch/include/ATen/core/TensorBody.h:277:30: note: declared here\n","       DeprecatedTypeProperties & type() const {\n","                                  ^~~~\n","    In file included from /usr/local/lib/python3.6/dist-packages/torch/include/c10/core/DeviceType.h:8:0,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/c10/core/Device.h:3,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/c10/core/Allocator.h:6,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/ATen/ATen.h:7,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/types.h:3,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/data/dataloader_options.h:4,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/data/dataloader/base.h:3,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/data/dataloader/stateful.h:3,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/data/dataloader.h:3,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/data.h:3,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/all.h:8,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/extension.h:4,\n","                     from csrc/layer_norm_cuda.cpp:1:\n","    csrc/layer_norm_cuda.cpp: In function ‘at::Tensor layer_norm_gradient(at::Tensor, at::Tensor, at::Tensor, at::Tensor, c10::IntArrayRef, double)’:\n","    csrc/layer_norm_cuda.cpp:117:42: warning: ‘at::DeprecatedTypeProperties& at::Tensor::type() const’ is deprecated: Tensor.type() is deprecated. Instead use Tensor.options(), which in many cases (e.g. in a constructor) is a drop-in replacement. If you were using data from type(), that is now available from Tensor itself, so instead of tensor.type().scalar_type(), use tensor.scalar_type() instead and instead of tensor.type().backend() use tensor.device(). [-Wdeprecated-declarations]\n","     #define CHECK_CUDA(x) TORCH_CHECK(x.type().is_cuda(), #x \" must be a CUDA tensor\")\n","                                              ^\n","    /usr/local/lib/python3.6/dist-packages/torch/include/c10/macros/Macros.h:171:65: note: in definition of macro ‘C10_UNLIKELY’\n","     #define C10_UNLIKELY(expr)  (__builtin_expect(static_cast<bool>(expr), 0))\n","                                                                     ^~~~\n","    /usr/local/lib/python3.6/dist-packages/torch/include/c10/util/Exception.h:330:7: note: in expansion of macro ‘C10_UNLIKELY_OR_CONST’\n","       if (C10_UNLIKELY_OR_CONST(!(cond))) {                               \\\n","           ^~~~~~~~~~~~~~~~~~~~~\n","    /usr/local/lib/python3.6/dist-packages/torch/include/c10/util/Exception.h:318:3: note: in expansion of macro ‘TORCH_CHECK_WITH_MSG’\n","       TORCH_CHECK_WITH_MSG(error_t, cond, \"\", __VA_ARGS__)\n","       ^~~~~~~~~~~~~~~~~~~~\n","    /usr/local/lib/python3.6/dist-packages/torch/include/c10/util/Exception.h:341:32: note: in expansion of macro ‘TORCH_CHECK_WITH’\n","     #define TORCH_CHECK(cond, ...) TORCH_CHECK_WITH(Error, cond, __VA_ARGS__)\n","                                    ^~~~~~~~~~~~~~~~\n","    csrc/layer_norm_cuda.cpp:117:23: note: in expansion of macro ‘TORCH_CHECK’\n","     #define CHECK_CUDA(x) TORCH_CHECK(x.type().is_cuda(), #x \" must be a CUDA tensor\")\n","                           ^~~~~~~~~~~\n","    csrc/layer_norm_cuda.cpp:119:24: note: in expansion of macro ‘CHECK_CUDA’\n","     #define CHECK_INPUT(x) CHECK_CUDA(x); CHECK_CONTIGUOUS(x)\n","                            ^~~~~~~~~~\n","    csrc/layer_norm_cuda.cpp:193:3: note: in expansion of macro ‘CHECK_INPUT’\n","       CHECK_INPUT(dout);\n","       ^~~~~~~~~~~\n","    In file included from /usr/local/lib/python3.6/dist-packages/torch/include/ATen/Tensor.h:3:0,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/ATen/Context.h:4,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/ATen/ATen.h:9,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/types.h:3,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/data/dataloader_options.h:4,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/data/dataloader/base.h:3,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/data/dataloader/stateful.h:3,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/data/dataloader.h:3,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/data.h:3,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/all.h:8,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/extension.h:4,\n","                     from csrc/layer_norm_cuda.cpp:1:\n","    /usr/local/lib/python3.6/dist-packages/torch/include/ATen/core/TensorBody.h:277:30: note: declared here\n","       DeprecatedTypeProperties & type() const {\n","                                  ^~~~\n","    In file included from /usr/local/lib/python3.6/dist-packages/torch/include/c10/core/DeviceType.h:8:0,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/c10/core/Device.h:3,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/c10/core/Allocator.h:6,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/ATen/ATen.h:7,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/types.h:3,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/data/dataloader_options.h:4,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/data/dataloader/base.h:3,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/data/dataloader/stateful.h:3,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/data/dataloader.h:3,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/data.h:3,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/all.h:8,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/extension.h:4,\n","                     from csrc/layer_norm_cuda.cpp:1:\n","    csrc/layer_norm_cuda.cpp:117:42: warning: ‘at::DeprecatedTypeProperties& at::Tensor::type() const’ is deprecated: Tensor.type() is deprecated. Instead use Tensor.options(), which in many cases (e.g. in a constructor) is a drop-in replacement. If you were using data from type(), that is now available from Tensor itself, so instead of tensor.type().scalar_type(), use tensor.scalar_type() instead and instead of tensor.type().backend() use tensor.device(). [-Wdeprecated-declarations]\n","     #define CHECK_CUDA(x) TORCH_CHECK(x.type().is_cuda(), #x \" must be a CUDA tensor\")\n","                                              ^\n","    /usr/local/lib/python3.6/dist-packages/torch/include/c10/macros/Macros.h:171:65: note: in definition of macro ‘C10_UNLIKELY’\n","     #define C10_UNLIKELY(expr)  (__builtin_expect(static_cast<bool>(expr), 0))\n","                                                                     ^~~~\n","    /usr/local/lib/python3.6/dist-packages/torch/include/c10/util/Exception.h:330:7: note: in expansion of macro ‘C10_UNLIKELY_OR_CONST’\n","       if (C10_UNLIKELY_OR_CONST(!(cond))) {                               \\\n","           ^~~~~~~~~~~~~~~~~~~~~\n","    /usr/local/lib/python3.6/dist-packages/torch/include/c10/util/Exception.h:318:3: note: in expansion of macro ‘TORCH_CHECK_WITH_MSG’\n","       TORCH_CHECK_WITH_MSG(error_t, cond, \"\", __VA_ARGS__)\n","       ^~~~~~~~~~~~~~~~~~~~\n","    /usr/local/lib/python3.6/dist-packages/torch/include/c10/util/Exception.h:341:32: note: in expansion of macro ‘TORCH_CHECK_WITH’\n","     #define TORCH_CHECK(cond, ...) TORCH_CHECK_WITH(Error, cond, __VA_ARGS__)\n","                                    ^~~~~~~~~~~~~~~~\n","    csrc/layer_norm_cuda.cpp:117:23: note: in expansion of macro ‘TORCH_CHECK’\n","     #define CHECK_CUDA(x) TORCH_CHECK(x.type().is_cuda(), #x \" must be a CUDA tensor\")\n","                           ^~~~~~~~~~~\n","    csrc/layer_norm_cuda.cpp:119:24: note: in expansion of macro ‘CHECK_CUDA’\n","     #define CHECK_INPUT(x) CHECK_CUDA(x); CHECK_CONTIGUOUS(x)\n","                            ^~~~~~~~~~\n","    csrc/layer_norm_cuda.cpp:194:3: note: in expansion of macro ‘CHECK_INPUT’\n","       CHECK_INPUT(mean);\n","       ^~~~~~~~~~~\n","    In file included from /usr/local/lib/python3.6/dist-packages/torch/include/ATen/Tensor.h:3:0,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/ATen/Context.h:4,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/ATen/ATen.h:9,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/types.h:3,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/data/dataloader_options.h:4,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/data/dataloader/base.h:3,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/data/dataloader/stateful.h:3,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/data/dataloader.h:3,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/data.h:3,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/all.h:8,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/extension.h:4,\n","                     from csrc/layer_norm_cuda.cpp:1:\n","    /usr/local/lib/python3.6/dist-packages/torch/include/ATen/core/TensorBody.h:277:30: note: declared here\n","       DeprecatedTypeProperties & type() const {\n","                                  ^~~~\n","    In file included from /usr/local/lib/python3.6/dist-packages/torch/include/c10/core/DeviceType.h:8:0,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/c10/core/Device.h:3,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/c10/core/Allocator.h:6,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/ATen/ATen.h:7,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/types.h:3,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/data/dataloader_options.h:4,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/data/dataloader/base.h:3,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/data/dataloader/stateful.h:3,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/data/dataloader.h:3,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/data.h:3,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/all.h:8,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/extension.h:4,\n","                     from csrc/layer_norm_cuda.cpp:1:\n","    csrc/layer_norm_cuda.cpp:117:42: warning: ‘at::DeprecatedTypeProperties& at::Tensor::type() const’ is deprecated: Tensor.type() is deprecated. Instead use Tensor.options(), which in many cases (e.g. in a constructor) is a drop-in replacement. If you were using data from type(), that is now available from Tensor itself, so instead of tensor.type().scalar_type(), use tensor.scalar_type() instead and instead of tensor.type().backend() use tensor.device(). [-Wdeprecated-declarations]\n","     #define CHECK_CUDA(x) TORCH_CHECK(x.type().is_cuda(), #x \" must be a CUDA tensor\")\n","                                              ^\n","    /usr/local/lib/python3.6/dist-packages/torch/include/c10/macros/Macros.h:171:65: note: in definition of macro ‘C10_UNLIKELY’\n","     #define C10_UNLIKELY(expr)  (__builtin_expect(static_cast<bool>(expr), 0))\n","                                                                     ^~~~\n","    /usr/local/lib/python3.6/dist-packages/torch/include/c10/util/Exception.h:330:7: note: in expansion of macro ‘C10_UNLIKELY_OR_CONST’\n","       if (C10_UNLIKELY_OR_CONST(!(cond))) {                               \\\n","           ^~~~~~~~~~~~~~~~~~~~~\n","    /usr/local/lib/python3.6/dist-packages/torch/include/c10/util/Exception.h:318:3: note: in expansion of macro ‘TORCH_CHECK_WITH_MSG’\n","       TORCH_CHECK_WITH_MSG(error_t, cond, \"\", __VA_ARGS__)\n","       ^~~~~~~~~~~~~~~~~~~~\n","    /usr/local/lib/python3.6/dist-packages/torch/include/c10/util/Exception.h:341:32: note: in expansion of macro ‘TORCH_CHECK_WITH’\n","     #define TORCH_CHECK(cond, ...) TORCH_CHECK_WITH(Error, cond, __VA_ARGS__)\n","                                    ^~~~~~~~~~~~~~~~\n","    csrc/layer_norm_cuda.cpp:117:23: note: in expansion of macro ‘TORCH_CHECK’\n","     #define CHECK_CUDA(x) TORCH_CHECK(x.type().is_cuda(), #x \" must be a CUDA tensor\")\n","                           ^~~~~~~~~~~\n","    csrc/layer_norm_cuda.cpp:119:24: note: in expansion of macro ‘CHECK_CUDA’\n","     #define CHECK_INPUT(x) CHECK_CUDA(x); CHECK_CONTIGUOUS(x)\n","                            ^~~~~~~~~~\n","    csrc/layer_norm_cuda.cpp:195:3: note: in expansion of macro ‘CHECK_INPUT’\n","       CHECK_INPUT(invvar);\n","       ^~~~~~~~~~~\n","    In file included from /usr/local/lib/python3.6/dist-packages/torch/include/ATen/Tensor.h:3:0,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/ATen/Context.h:4,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/ATen/ATen.h:9,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/types.h:3,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/data/dataloader_options.h:4,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/data/dataloader/base.h:3,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/data/dataloader/stateful.h:3,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/data/dataloader.h:3,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/data.h:3,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/all.h:8,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/extension.h:4,\n","                     from csrc/layer_norm_cuda.cpp:1:\n","    /usr/local/lib/python3.6/dist-packages/torch/include/ATen/core/TensorBody.h:277:30: note: declared here\n","       DeprecatedTypeProperties & type() const {\n","                                  ^~~~\n","    In file included from /usr/local/lib/python3.6/dist-packages/torch/include/c10/core/DeviceType.h:8:0,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/c10/core/Device.h:3,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/c10/core/Allocator.h:6,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/ATen/ATen.h:7,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/types.h:3,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/data/dataloader_options.h:4,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/data/dataloader/base.h:3,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/data/dataloader/stateful.h:3,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/data/dataloader.h:3,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/data.h:3,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/all.h:8,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/extension.h:4,\n","                     from csrc/layer_norm_cuda.cpp:1:\n","    csrc/layer_norm_cuda.cpp:117:42: warning: ‘at::DeprecatedTypeProperties& at::Tensor::type() const’ is deprecated: Tensor.type() is deprecated. Instead use Tensor.options(), which in many cases (e.g. in a constructor) is a drop-in replacement. If you were using data from type(), that is now available from Tensor itself, so instead of tensor.type().scalar_type(), use tensor.scalar_type() instead and instead of tensor.type().backend() use tensor.device(). [-Wdeprecated-declarations]\n","     #define CHECK_CUDA(x) TORCH_CHECK(x.type().is_cuda(), #x \" must be a CUDA tensor\")\n","                                              ^\n","    /usr/local/lib/python3.6/dist-packages/torch/include/c10/macros/Macros.h:171:65: note: in definition of macro ‘C10_UNLIKELY’\n","     #define C10_UNLIKELY(expr)  (__builtin_expect(static_cast<bool>(expr), 0))\n","                                                                     ^~~~\n","    /usr/local/lib/python3.6/dist-packages/torch/include/c10/util/Exception.h:330:7: note: in expansion of macro ‘C10_UNLIKELY_OR_CONST’\n","       if (C10_UNLIKELY_OR_CONST(!(cond))) {                               \\\n","           ^~~~~~~~~~~~~~~~~~~~~\n","    /usr/local/lib/python3.6/dist-packages/torch/include/c10/util/Exception.h:318:3: note: in expansion of macro ‘TORCH_CHECK_WITH_MSG’\n","       TORCH_CHECK_WITH_MSG(error_t, cond, \"\", __VA_ARGS__)\n","       ^~~~~~~~~~~~~~~~~~~~\n","    /usr/local/lib/python3.6/dist-packages/torch/include/c10/util/Exception.h:341:32: note: in expansion of macro ‘TORCH_CHECK_WITH’\n","     #define TORCH_CHECK(cond, ...) TORCH_CHECK_WITH(Error, cond, __VA_ARGS__)\n","                                    ^~~~~~~~~~~~~~~~\n","    csrc/layer_norm_cuda.cpp:117:23: note: in expansion of macro ‘TORCH_CHECK’\n","     #define CHECK_CUDA(x) TORCH_CHECK(x.type().is_cuda(), #x \" must be a CUDA tensor\")\n","                           ^~~~~~~~~~~\n","    csrc/layer_norm_cuda.cpp:119:24: note: in expansion of macro ‘CHECK_CUDA’\n","     #define CHECK_INPUT(x) CHECK_CUDA(x); CHECK_CONTIGUOUS(x)\n","                            ^~~~~~~~~~\n","    csrc/layer_norm_cuda.cpp:196:3: note: in expansion of macro ‘CHECK_INPUT’\n","       CHECK_INPUT(input);\n","       ^~~~~~~~~~~\n","    In file included from /usr/local/lib/python3.6/dist-packages/torch/include/ATen/Tensor.h:3:0,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/ATen/Context.h:4,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/ATen/ATen.h:9,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/types.h:3,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/data/dataloader_options.h:4,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/data/dataloader/base.h:3,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/data/dataloader/stateful.h:3,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/data/dataloader.h:3,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/data.h:3,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/all.h:8,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/extension.h:4,\n","                     from csrc/layer_norm_cuda.cpp:1:\n","    /usr/local/lib/python3.6/dist-packages/torch/include/ATen/core/TensorBody.h:277:30: note: declared here\n","       DeprecatedTypeProperties & type() const {\n","                                  ^~~~\n","    In file included from /usr/local/lib/python3.6/dist-packages/torch/include/c10/core/DeviceType.h:8:0,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/c10/core/Device.h:3,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/c10/core/Allocator.h:6,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/ATen/ATen.h:7,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/types.h:3,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/data/dataloader_options.h:4,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/data/dataloader/base.h:3,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/data/dataloader/stateful.h:3,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/data/dataloader.h:3,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/data.h:3,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/all.h:8,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/extension.h:4,\n","                     from csrc/layer_norm_cuda.cpp:1:\n","    csrc/layer_norm_cuda.cpp: In function ‘std::vector<at::Tensor> layer_norm_gradient_affine(at::Tensor, at::Tensor, at::Tensor, at::Tensor, c10::IntArrayRef, at::Tensor, at::Tensor, double)’:\n","    csrc/layer_norm_cuda.cpp:117:42: warning: ‘at::DeprecatedTypeProperties& at::Tensor::type() const’ is deprecated: Tensor.type() is deprecated. Instead use Tensor.options(), which in many cases (e.g. in a constructor) is a drop-in replacement. If you were using data from type(), that is now available from Tensor itself, so instead of tensor.type().scalar_type(), use tensor.scalar_type() instead and instead of tensor.type().backend() use tensor.device(). [-Wdeprecated-declarations]\n","     #define CHECK_CUDA(x) TORCH_CHECK(x.type().is_cuda(), #x \" must be a CUDA tensor\")\n","                                              ^\n","    /usr/local/lib/python3.6/dist-packages/torch/include/c10/macros/Macros.h:171:65: note: in definition of macro ‘C10_UNLIKELY’\n","     #define C10_UNLIKELY(expr)  (__builtin_expect(static_cast<bool>(expr), 0))\n","                                                                     ^~~~\n","    /usr/local/lib/python3.6/dist-packages/torch/include/c10/util/Exception.h:330:7: note: in expansion of macro ‘C10_UNLIKELY_OR_CONST’\n","       if (C10_UNLIKELY_OR_CONST(!(cond))) {                               \\\n","           ^~~~~~~~~~~~~~~~~~~~~\n","    /usr/local/lib/python3.6/dist-packages/torch/include/c10/util/Exception.h:318:3: note: in expansion of macro ‘TORCH_CHECK_WITH_MSG’\n","       TORCH_CHECK_WITH_MSG(error_t, cond, \"\", __VA_ARGS__)\n","       ^~~~~~~~~~~~~~~~~~~~\n","    /usr/local/lib/python3.6/dist-packages/torch/include/c10/util/Exception.h:341:32: note: in expansion of macro ‘TORCH_CHECK_WITH’\n","     #define TORCH_CHECK(cond, ...) TORCH_CHECK_WITH(Error, cond, __VA_ARGS__)\n","                                    ^~~~~~~~~~~~~~~~\n","    csrc/layer_norm_cuda.cpp:117:23: note: in expansion of macro ‘TORCH_CHECK’\n","     #define CHECK_CUDA(x) TORCH_CHECK(x.type().is_cuda(), #x \" must be a CUDA tensor\")\n","                           ^~~~~~~~~~~\n","    csrc/layer_norm_cuda.cpp:119:24: note: in expansion of macro ‘CHECK_CUDA’\n","     #define CHECK_INPUT(x) CHECK_CUDA(x); CHECK_CONTIGUOUS(x)\n","                            ^~~~~~~~~~\n","    csrc/layer_norm_cuda.cpp:218:3: note: in expansion of macro ‘CHECK_INPUT’\n","       CHECK_INPUT(dout);\n","       ^~~~~~~~~~~\n","    In file included from /usr/local/lib/python3.6/dist-packages/torch/include/ATen/Tensor.h:3:0,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/ATen/Context.h:4,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/ATen/ATen.h:9,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/types.h:3,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/data/dataloader_options.h:4,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/data/dataloader/base.h:3,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/data/dataloader/stateful.h:3,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/data/dataloader.h:3,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/data.h:3,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/all.h:8,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/extension.h:4,\n","                     from csrc/layer_norm_cuda.cpp:1:\n","    /usr/local/lib/python3.6/dist-packages/torch/include/ATen/core/TensorBody.h:277:30: note: declared here\n","       DeprecatedTypeProperties & type() const {\n","                                  ^~~~\n","    In file included from /usr/local/lib/python3.6/dist-packages/torch/include/c10/core/DeviceType.h:8:0,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/c10/core/Device.h:3,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/c10/core/Allocator.h:6,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/ATen/ATen.h:7,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/types.h:3,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/data/dataloader_options.h:4,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/data/dataloader/base.h:3,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/data/dataloader/stateful.h:3,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/data/dataloader.h:3,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/data.h:3,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/all.h:8,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/extension.h:4,\n","                     from csrc/layer_norm_cuda.cpp:1:\n","    csrc/layer_norm_cuda.cpp:117:42: warning: ‘at::DeprecatedTypeProperties& at::Tensor::type() const’ is deprecated: Tensor.type() is deprecated. Instead use Tensor.options(), which in many cases (e.g. in a constructor) is a drop-in replacement. If you were using data from type(), that is now available from Tensor itself, so instead of tensor.type().scalar_type(), use tensor.scalar_type() instead and instead of tensor.type().backend() use tensor.device(). [-Wdeprecated-declarations]\n","     #define CHECK_CUDA(x) TORCH_CHECK(x.type().is_cuda(), #x \" must be a CUDA tensor\")\n","                                              ^\n","    /usr/local/lib/python3.6/dist-packages/torch/include/c10/macros/Macros.h:171:65: note: in definition of macro ‘C10_UNLIKELY’\n","     #define C10_UNLIKELY(expr)  (__builtin_expect(static_cast<bool>(expr), 0))\n","                                                                     ^~~~\n","    /usr/local/lib/python3.6/dist-packages/torch/include/c10/util/Exception.h:330:7: note: in expansion of macro ‘C10_UNLIKELY_OR_CONST’\n","       if (C10_UNLIKELY_OR_CONST(!(cond))) {                               \\\n","           ^~~~~~~~~~~~~~~~~~~~~\n","    /usr/local/lib/python3.6/dist-packages/torch/include/c10/util/Exception.h:318:3: note: in expansion of macro ‘TORCH_CHECK_WITH_MSG’\n","       TORCH_CHECK_WITH_MSG(error_t, cond, \"\", __VA_ARGS__)\n","       ^~~~~~~~~~~~~~~~~~~~\n","    /usr/local/lib/python3.6/dist-packages/torch/include/c10/util/Exception.h:341:32: note: in expansion of macro ‘TORCH_CHECK_WITH’\n","     #define TORCH_CHECK(cond, ...) TORCH_CHECK_WITH(Error, cond, __VA_ARGS__)\n","                                    ^~~~~~~~~~~~~~~~\n","    csrc/layer_norm_cuda.cpp:117:23: note: in expansion of macro ‘TORCH_CHECK’\n","     #define CHECK_CUDA(x) TORCH_CHECK(x.type().is_cuda(), #x \" must be a CUDA tensor\")\n","                           ^~~~~~~~~~~\n","    csrc/layer_norm_cuda.cpp:119:24: note: in expansion of macro ‘CHECK_CUDA’\n","     #define CHECK_INPUT(x) CHECK_CUDA(x); CHECK_CONTIGUOUS(x)\n","                            ^~~~~~~~~~\n","    csrc/layer_norm_cuda.cpp:219:3: note: in expansion of macro ‘CHECK_INPUT’\n","       CHECK_INPUT(mean);\n","       ^~~~~~~~~~~\n","    In file included from /usr/local/lib/python3.6/dist-packages/torch/include/ATen/Tensor.h:3:0,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/ATen/Context.h:4,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/ATen/ATen.h:9,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/types.h:3,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/data/dataloader_options.h:4,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/data/dataloader/base.h:3,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/data/dataloader/stateful.h:3,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/data/dataloader.h:3,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/data.h:3,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/all.h:8,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/extension.h:4,\n","                     from csrc/layer_norm_cuda.cpp:1:\n","    /usr/local/lib/python3.6/dist-packages/torch/include/ATen/core/TensorBody.h:277:30: note: declared here\n","       DeprecatedTypeProperties & type() const {\n","                                  ^~~~\n","    In file included from /usr/local/lib/python3.6/dist-packages/torch/include/c10/core/DeviceType.h:8:0,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/c10/core/Device.h:3,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/c10/core/Allocator.h:6,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/ATen/ATen.h:7,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/types.h:3,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/data/dataloader_options.h:4,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/data/dataloader/base.h:3,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/data/dataloader/stateful.h:3,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/data/dataloader.h:3,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/data.h:3,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/all.h:8,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/extension.h:4,\n","                     from csrc/layer_norm_cuda.cpp:1:\n","    csrc/layer_norm_cuda.cpp:117:42: warning: ‘at::DeprecatedTypeProperties& at::Tensor::type() const’ is deprecated: Tensor.type() is deprecated. Instead use Tensor.options(), which in many cases (e.g. in a constructor) is a drop-in replacement. If you were using data from type(), that is now available from Tensor itself, so instead of tensor.type().scalar_type(), use tensor.scalar_type() instead and instead of tensor.type().backend() use tensor.device(). [-Wdeprecated-declarations]\n","     #define CHECK_CUDA(x) TORCH_CHECK(x.type().is_cuda(), #x \" must be a CUDA tensor\")\n","                                              ^\n","    /usr/local/lib/python3.6/dist-packages/torch/include/c10/macros/Macros.h:171:65: note: in definition of macro ‘C10_UNLIKELY’\n","     #define C10_UNLIKELY(expr)  (__builtin_expect(static_cast<bool>(expr), 0))\n","                                                                     ^~~~\n","    /usr/local/lib/python3.6/dist-packages/torch/include/c10/util/Exception.h:330:7: note: in expansion of macro ‘C10_UNLIKELY_OR_CONST’\n","       if (C10_UNLIKELY_OR_CONST(!(cond))) {                               \\\n","           ^~~~~~~~~~~~~~~~~~~~~\n","    /usr/local/lib/python3.6/dist-packages/torch/include/c10/util/Exception.h:318:3: note: in expansion of macro ‘TORCH_CHECK_WITH_MSG’\n","       TORCH_CHECK_WITH_MSG(error_t, cond, \"\", __VA_ARGS__)\n","       ^~~~~~~~~~~~~~~~~~~~\n","    /usr/local/lib/python3.6/dist-packages/torch/include/c10/util/Exception.h:341:32: note: in expansion of macro ‘TORCH_CHECK_WITH’\n","     #define TORCH_CHECK(cond, ...) TORCH_CHECK_WITH(Error, cond, __VA_ARGS__)\n","                                    ^~~~~~~~~~~~~~~~\n","    csrc/layer_norm_cuda.cpp:117:23: note: in expansion of macro ‘TORCH_CHECK’\n","     #define CHECK_CUDA(x) TORCH_CHECK(x.type().is_cuda(), #x \" must be a CUDA tensor\")\n","                           ^~~~~~~~~~~\n","    csrc/layer_norm_cuda.cpp:119:24: note: in expansion of macro ‘CHECK_CUDA’\n","     #define CHECK_INPUT(x) CHECK_CUDA(x); CHECK_CONTIGUOUS(x)\n","                            ^~~~~~~~~~\n","    csrc/layer_norm_cuda.cpp:220:3: note: in expansion of macro ‘CHECK_INPUT’\n","       CHECK_INPUT(invvar);\n","       ^~~~~~~~~~~\n","    In file included from /usr/local/lib/python3.6/dist-packages/torch/include/ATen/Tensor.h:3:0,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/ATen/Context.h:4,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/ATen/ATen.h:9,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/types.h:3,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/data/dataloader_options.h:4,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/data/dataloader/base.h:3,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/data/dataloader/stateful.h:3,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/data/dataloader.h:3,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/data.h:3,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/all.h:8,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/extension.h:4,\n","                     from csrc/layer_norm_cuda.cpp:1:\n","    /usr/local/lib/python3.6/dist-packages/torch/include/ATen/core/TensorBody.h:277:30: note: declared here\n","       DeprecatedTypeProperties & type() const {\n","                                  ^~~~\n","    In file included from /usr/local/lib/python3.6/dist-packages/torch/include/c10/core/DeviceType.h:8:0,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/c10/core/Device.h:3,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/c10/core/Allocator.h:6,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/ATen/ATen.h:7,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/types.h:3,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/data/dataloader_options.h:4,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/data/dataloader/base.h:3,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/data/dataloader/stateful.h:3,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/data/dataloader.h:3,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/data.h:3,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/all.h:8,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/extension.h:4,\n","                     from csrc/layer_norm_cuda.cpp:1:\n","    csrc/layer_norm_cuda.cpp:117:42: warning: ‘at::DeprecatedTypeProperties& at::Tensor::type() const’ is deprecated: Tensor.type() is deprecated. Instead use Tensor.options(), which in many cases (e.g. in a constructor) is a drop-in replacement. If you were using data from type(), that is now available from Tensor itself, so instead of tensor.type().scalar_type(), use tensor.scalar_type() instead and instead of tensor.type().backend() use tensor.device(). [-Wdeprecated-declarations]\n","     #define CHECK_CUDA(x) TORCH_CHECK(x.type().is_cuda(), #x \" must be a CUDA tensor\")\n","                                              ^\n","    /usr/local/lib/python3.6/dist-packages/torch/include/c10/macros/Macros.h:171:65: note: in definition of macro ‘C10_UNLIKELY’\n","     #define C10_UNLIKELY(expr)  (__builtin_expect(static_cast<bool>(expr), 0))\n","                                                                     ^~~~\n","    /usr/local/lib/python3.6/dist-packages/torch/include/c10/util/Exception.h:330:7: note: in expansion of macro ‘C10_UNLIKELY_OR_CONST’\n","       if (C10_UNLIKELY_OR_CONST(!(cond))) {                               \\\n","           ^~~~~~~~~~~~~~~~~~~~~\n","    /usr/local/lib/python3.6/dist-packages/torch/include/c10/util/Exception.h:318:3: note: in expansion of macro ‘TORCH_CHECK_WITH_MSG’\n","       TORCH_CHECK_WITH_MSG(error_t, cond, \"\", __VA_ARGS__)\n","       ^~~~~~~~~~~~~~~~~~~~\n","    /usr/local/lib/python3.6/dist-packages/torch/include/c10/util/Exception.h:341:32: note: in expansion of macro ‘TORCH_CHECK_WITH’\n","     #define TORCH_CHECK(cond, ...) TORCH_CHECK_WITH(Error, cond, __VA_ARGS__)\n","                                    ^~~~~~~~~~~~~~~~\n","    csrc/layer_norm_cuda.cpp:117:23: note: in expansion of macro ‘TORCH_CHECK’\n","     #define CHECK_CUDA(x) TORCH_CHECK(x.type().is_cuda(), #x \" must be a CUDA tensor\")\n","                           ^~~~~~~~~~~\n","    csrc/layer_norm_cuda.cpp:119:24: note: in expansion of macro ‘CHECK_CUDA’\n","     #define CHECK_INPUT(x) CHECK_CUDA(x); CHECK_CONTIGUOUS(x)\n","                            ^~~~~~~~~~\n","    csrc/layer_norm_cuda.cpp:221:3: note: in expansion of macro ‘CHECK_INPUT’\n","       CHECK_INPUT(input);\n","       ^~~~~~~~~~~\n","    In file included from /usr/local/lib/python3.6/dist-packages/torch/include/ATen/Tensor.h:3:0,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/ATen/Context.h:4,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/ATen/ATen.h:9,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/types.h:3,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/data/dataloader_options.h:4,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/data/dataloader/base.h:3,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/data/dataloader/stateful.h:3,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/data/dataloader.h:3,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/data.h:3,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/all.h:8,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/extension.h:4,\n","                     from csrc/layer_norm_cuda.cpp:1:\n","    /usr/local/lib/python3.6/dist-packages/torch/include/ATen/core/TensorBody.h:277:30: note: declared here\n","       DeprecatedTypeProperties & type() const {\n","                                  ^~~~\n","    In file included from /usr/local/lib/python3.6/dist-packages/torch/include/c10/core/DeviceType.h:8:0,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/c10/core/Device.h:3,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/c10/core/Allocator.h:6,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/ATen/ATen.h:7,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/types.h:3,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/data/dataloader_options.h:4,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/data/dataloader/base.h:3,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/data/dataloader/stateful.h:3,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/data/dataloader.h:3,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/data.h:3,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/all.h:8,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/extension.h:4,\n","                     from csrc/layer_norm_cuda.cpp:1:\n","    csrc/layer_norm_cuda.cpp:117:42: warning: ‘at::DeprecatedTypeProperties& at::Tensor::type() const’ is deprecated: Tensor.type() is deprecated. Instead use Tensor.options(), which in many cases (e.g. in a constructor) is a drop-in replacement. If you were using data from type(), that is now available from Tensor itself, so instead of tensor.type().scalar_type(), use tensor.scalar_type() instead and instead of tensor.type().backend() use tensor.device(). [-Wdeprecated-declarations]\n","     #define CHECK_CUDA(x) TORCH_CHECK(x.type().is_cuda(), #x \" must be a CUDA tensor\")\n","                                              ^\n","    /usr/local/lib/python3.6/dist-packages/torch/include/c10/macros/Macros.h:171:65: note: in definition of macro ‘C10_UNLIKELY’\n","     #define C10_UNLIKELY(expr)  (__builtin_expect(static_cast<bool>(expr), 0))\n","                                                                     ^~~~\n","    /usr/local/lib/python3.6/dist-packages/torch/include/c10/util/Exception.h:330:7: note: in expansion of macro ‘C10_UNLIKELY_OR_CONST’\n","       if (C10_UNLIKELY_OR_CONST(!(cond))) {                               \\\n","           ^~~~~~~~~~~~~~~~~~~~~\n","    /usr/local/lib/python3.6/dist-packages/torch/include/c10/util/Exception.h:318:3: note: in expansion of macro ‘TORCH_CHECK_WITH_MSG’\n","       TORCH_CHECK_WITH_MSG(error_t, cond, \"\", __VA_ARGS__)\n","       ^~~~~~~~~~~~~~~~~~~~\n","    /usr/local/lib/python3.6/dist-packages/torch/include/c10/util/Exception.h:341:32: note: in expansion of macro ‘TORCH_CHECK_WITH’\n","     #define TORCH_CHECK(cond, ...) TORCH_CHECK_WITH(Error, cond, __VA_ARGS__)\n","                                    ^~~~~~~~~~~~~~~~\n","    csrc/layer_norm_cuda.cpp:117:23: note: in expansion of macro ‘TORCH_CHECK’\n","     #define CHECK_CUDA(x) TORCH_CHECK(x.type().is_cuda(), #x \" must be a CUDA tensor\")\n","                           ^~~~~~~~~~~\n","    csrc/layer_norm_cuda.cpp:119:24: note: in expansion of macro ‘CHECK_CUDA’\n","     #define CHECK_INPUT(x) CHECK_CUDA(x); CHECK_CONTIGUOUS(x)\n","                            ^~~~~~~~~~\n","    csrc/layer_norm_cuda.cpp:222:3: note: in expansion of macro ‘CHECK_INPUT’\n","       CHECK_INPUT(gamma);\n","       ^~~~~~~~~~~\n","    In file included from /usr/local/lib/python3.6/dist-packages/torch/include/ATen/Tensor.h:3:0,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/ATen/Context.h:4,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/ATen/ATen.h:9,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/types.h:3,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/data/dataloader_options.h:4,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/data/dataloader/base.h:3,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/data/dataloader/stateful.h:3,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/data/dataloader.h:3,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/data.h:3,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/all.h:8,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/extension.h:4,\n","                     from csrc/layer_norm_cuda.cpp:1:\n","    /usr/local/lib/python3.6/dist-packages/torch/include/ATen/core/TensorBody.h:277:30: note: declared here\n","       DeprecatedTypeProperties & type() const {\n","                                  ^~~~\n","    In file included from /usr/local/lib/python3.6/dist-packages/torch/include/c10/core/DeviceType.h:8:0,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/c10/core/Device.h:3,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/c10/core/Allocator.h:6,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/ATen/ATen.h:7,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/types.h:3,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/data/dataloader_options.h:4,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/data/dataloader/base.h:3,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/data/dataloader/stateful.h:3,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/data/dataloader.h:3,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/data.h:3,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/all.h:8,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/extension.h:4,\n","                     from csrc/layer_norm_cuda.cpp:1:\n","    csrc/layer_norm_cuda.cpp:117:42: warning: ‘at::DeprecatedTypeProperties& at::Tensor::type() const’ is deprecated: Tensor.type() is deprecated. Instead use Tensor.options(), which in many cases (e.g. in a constructor) is a drop-in replacement. If you were using data from type(), that is now available from Tensor itself, so instead of tensor.type().scalar_type(), use tensor.scalar_type() instead and instead of tensor.type().backend() use tensor.device(). [-Wdeprecated-declarations]\n","     #define CHECK_CUDA(x) TORCH_CHECK(x.type().is_cuda(), #x \" must be a CUDA tensor\")\n","                                              ^\n","    /usr/local/lib/python3.6/dist-packages/torch/include/c10/macros/Macros.h:171:65: note: in definition of macro ‘C10_UNLIKELY’\n","     #define C10_UNLIKELY(expr)  (__builtin_expect(static_cast<bool>(expr), 0))\n","                                                                     ^~~~\n","    /usr/local/lib/python3.6/dist-packages/torch/include/c10/util/Exception.h:330:7: note: in expansion of macro ‘C10_UNLIKELY_OR_CONST’\n","       if (C10_UNLIKELY_OR_CONST(!(cond))) {                               \\\n","           ^~~~~~~~~~~~~~~~~~~~~\n","    /usr/local/lib/python3.6/dist-packages/torch/include/c10/util/Exception.h:318:3: note: in expansion of macro ‘TORCH_CHECK_WITH_MSG’\n","       TORCH_CHECK_WITH_MSG(error_t, cond, \"\", __VA_ARGS__)\n","       ^~~~~~~~~~~~~~~~~~~~\n","    /usr/local/lib/python3.6/dist-packages/torch/include/c10/util/Exception.h:341:32: note: in expansion of macro ‘TORCH_CHECK_WITH’\n","     #define TORCH_CHECK(cond, ...) TORCH_CHECK_WITH(Error, cond, __VA_ARGS__)\n","                                    ^~~~~~~~~~~~~~~~\n","    csrc/layer_norm_cuda.cpp:117:23: note: in expansion of macro ‘TORCH_CHECK’\n","     #define CHECK_CUDA(x) TORCH_CHECK(x.type().is_cuda(), #x \" must be a CUDA tensor\")\n","                           ^~~~~~~~~~~\n","    csrc/layer_norm_cuda.cpp:119:24: note: in expansion of macro ‘CHECK_CUDA’\n","     #define CHECK_INPUT(x) CHECK_CUDA(x); CHECK_CONTIGUOUS(x)\n","                            ^~~~~~~~~~\n","    csrc/layer_norm_cuda.cpp:223:3: note: in expansion of macro ‘CHECK_INPUT’\n","       CHECK_INPUT(beta);\n","       ^~~~~~~~~~~\n","    In file included from /usr/local/lib/python3.6/dist-packages/torch/include/ATen/Tensor.h:3:0,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/ATen/Context.h:4,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/ATen/ATen.h:9,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/types.h:3,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/data/dataloader_options.h:4,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/data/dataloader/base.h:3,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/data/dataloader/stateful.h:3,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/data/dataloader.h:3,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/data.h:3,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/all.h:8,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/extension.h:4,\n","                     from csrc/layer_norm_cuda.cpp:1:\n","    /usr/local/lib/python3.6/dist-packages/torch/include/ATen/core/TensorBody.h:277:30: note: declared here\n","       DeprecatedTypeProperties & type() const {\n","                                  ^~~~\n","    /usr/local/cuda/bin/nvcc -I/usr/local/lib/python3.6/dist-packages/torch/include -I/usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include -I/usr/local/lib/python3.6/dist-packages/torch/include/TH -I/usr/local/lib/python3.6/dist-packages/torch/include/THC -I/usr/local/cuda/include -I/usr/include/python3.6m -c csrc/layer_norm_cuda_kernel.cu -o build/temp.linux-x86_64-3.6/csrc/layer_norm_cuda_kernel.o -D__CUDA_NO_HALF_OPERATORS__ -D__CUDA_NO_HALF_CONVERSIONS__ -D__CUDA_NO_HALF2_OPERATORS__ --expt-relaxed-constexpr --compiler-options '-fPIC' -maxrregcount=50 -O3 --use_fast_math -DVERSION_GE_1_1 -DVERSION_GE_1_3 -DVERSION_GE_1_5 -DTORCH_API_INCLUDE_EXTENSION_H -DTORCH_EXTENSION_NAME=fused_layer_norm_cuda -D_GLIBCXX_USE_CXX11_ABI=0 -gencode=arch=compute_75,code=sm_75 -std=c++14\n","    x86_64-linux-gnu-g++ -pthread -shared -Wl,-O1 -Wl,-Bsymbolic-functions -Wl,-Bsymbolic-functions -Wl,-z,relro -Wl,-Bsymbolic-functions -Wl,-z,relro -g -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 build/temp.linux-x86_64-3.6/csrc/layer_norm_cuda.o build/temp.linux-x86_64-3.6/csrc/layer_norm_cuda_kernel.o -L/usr/local/lib/python3.6/dist-packages/torch/lib -L/usr/local/cuda/lib64 -lc10 -ltorch -ltorch_cpu -ltorch_python -lcudart -lc10_cuda -ltorch_cuda -o build/lib.linux-x86_64-3.6/fused_layer_norm_cuda.cpython-36m-x86_64-linux-gnu.so\n","    building 'mlp_cuda' extension\n","    x86_64-linux-gnu-gcc -pthread -DNDEBUG -g -fwrapv -O2 -Wall -g -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -fPIC -I/usr/local/lib/python3.6/dist-packages/torch/include -I/usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include -I/usr/local/lib/python3.6/dist-packages/torch/include/TH -I/usr/local/lib/python3.6/dist-packages/torch/include/THC -I/usr/local/cuda/include -I/usr/include/python3.6m -c csrc/mlp.cpp -o build/temp.linux-x86_64-3.6/csrc/mlp.o -O3 -DVERSION_GE_1_1 -DVERSION_GE_1_3 -DVERSION_GE_1_5 -DTORCH_API_INCLUDE_EXTENSION_H -DTORCH_EXTENSION_NAME=mlp_cuda -D_GLIBCXX_USE_CXX11_ABI=0 -std=c++14\n","    In file included from /usr/local/lib/python3.6/dist-packages/torch/include/ATen/Parallel.h:149:0,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/utils.h:3,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/nn/cloneable.h:5,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/nn.h:3,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/all.h:12,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/extension.h:4,\n","                     from csrc/mlp.cpp:1:\n","    /usr/local/lib/python3.6/dist-packages/torch/include/ATen/ParallelOpenMP.h:84:0: warning: ignoring #pragma omp parallel [-Wunknown-pragmas]\n","     #pragma omp parallel for if ((end - begin) >= grain_size)\n","\n","    csrc/mlp.cpp: In function ‘std::vector<at::Tensor> mlp_forward(int, int, std::vector<at::Tensor>)’:\n","    csrc/mlp.cpp:56:21: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]\n","       for (int i = 0; i < num_layers; i++) {\n","                       ~~^~~~~~~~~~~~\n","    csrc/mlp.cpp:64:77: warning: ‘at::DeprecatedTypeProperties& at::Tensor::type() const’ is deprecated: Tensor.type() is deprecated. Instead use Tensor.options(), which in many cases (e.g. in a constructor) is a drop-in replacement. If you were using data from type(), that is now available from Tensor itself, so instead of tensor.type().scalar_type(), use tensor.scalar_type() instead and instead of tensor.type().backend() use tensor.device(). [-Wdeprecated-declarations]\n","       auto out = at::empty({batch_size, output_features.back()}, inputs[0].type());\n","                                                                                 ^\n","    In file included from /usr/local/lib/python3.6/dist-packages/torch/include/ATen/Tensor.h:3:0,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/ATen/Context.h:4,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/ATen/ATen.h:9,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/types.h:3,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/data/dataloader_options.h:4,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/data/dataloader/base.h:3,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/data/dataloader/stateful.h:3,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/data/dataloader.h:3,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/data.h:3,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/all.h:8,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/extension.h:4,\n","                     from csrc/mlp.cpp:1:\n","    /usr/local/lib/python3.6/dist-packages/torch/include/ATen/core/TensorBody.h:277:30: note: declared here\n","       DeprecatedTypeProperties & type() const {\n","                                  ^~~~\n","    csrc/mlp.cpp:65:67: warning: ‘at::DeprecatedTypeProperties& at::Tensor::type() const’ is deprecated: Tensor.type() is deprecated. Instead use Tensor.options(), which in many cases (e.g. in a constructor) is a drop-in replacement. If you were using data from type(), that is now available from Tensor itself, so instead of tensor.type().scalar_type(), use tensor.scalar_type() instead and instead of tensor.type().backend() use tensor.device(). [-Wdeprecated-declarations]\n","       auto reserved_space = at::empty({reserved_size}, inputs[0].type());\n","                                                                       ^\n","    In file included from /usr/local/lib/python3.6/dist-packages/torch/include/ATen/Tensor.h:3:0,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/ATen/Context.h:4,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/ATen/ATen.h:9,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/types.h:3,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/data/dataloader_options.h:4,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/data/dataloader/base.h:3,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/data/dataloader/stateful.h:3,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/data/dataloader.h:3,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/data.h:3,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/all.h:8,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/extension.h:4,\n","                     from csrc/mlp.cpp:1:\n","    /usr/local/lib/python3.6/dist-packages/torch/include/ATen/core/TensorBody.h:277:30: note: declared here\n","       DeprecatedTypeProperties & type() const {\n","                                  ^~~~\n","    csrc/mlp.cpp:65:68: warning: narrowing conversion of ‘reserved_size’ from ‘long unsigned int’ to ‘long int’ inside { } [-Wnarrowing]\n","       auto reserved_space = at::empty({reserved_size}, inputs[0].type());\n","                                                                        ^\n","    csrc/mlp.cpp:65:68: warning: narrowing conversion of ‘reserved_size’ from ‘long unsigned int’ to ‘long int’ inside { } [-Wnarrowing]\n","    In file included from /usr/local/lib/python3.6/dist-packages/torch/include/ATen/ATen.h:13:0,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/types.h:3,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/data/dataloader_options.h:4,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/data/dataloader/base.h:3,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/data/dataloader/stateful.h:3,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/data/dataloader.h:3,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/data.h:3,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/all.h:8,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/extension.h:4,\n","                     from csrc/mlp.cpp:1:\n","    csrc/mlp.cpp: In lambda function:\n","    csrc/mlp.cpp:67:54: warning: ‘at::DeprecatedTypeProperties& at::Tensor::type() const’ is deprecated: Tensor.type() is deprecated. Instead use Tensor.options(), which in many cases (e.g. in a constructor) is a drop-in replacement. If you were using data from type(), that is now available from Tensor itself, so instead of tensor.type().scalar_type(), use tensor.scalar_type() instead and instead of tensor.type().backend() use tensor.device(). [-Wdeprecated-declarations]\n","       AT_DISPATCH_FLOATING_TYPES_AND_HALF(inputs[0].type(), \"mlp_forward\", [&] {\n","                                                          ^\n","    /usr/local/lib/python3.6/dist-packages/torch/include/ATen/Dispatch.h:150:28: note: in definition of macro ‘AT_DISPATCH_FLOATING_TYPES_AND_HALF’\n","         const auto& the_type = TYPE;                                            \\\n","                                ^~~~\n","    In file included from /usr/local/lib/python3.6/dist-packages/torch/include/ATen/Tensor.h:3:0,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/ATen/Context.h:4,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/ATen/ATen.h:9,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/types.h:3,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/data/dataloader_options.h:4,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/data/dataloader/base.h:3,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/data/dataloader/stateful.h:3,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/data/dataloader.h:3,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/data.h:3,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/all.h:8,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/extension.h:4,\n","                     from csrc/mlp.cpp:1:\n","    /usr/local/lib/python3.6/dist-packages/torch/include/ATen/core/TensorBody.h:277:30: note: declared here\n","       DeprecatedTypeProperties & type() const {\n","                                  ^~~~\n","    In file included from /usr/local/lib/python3.6/dist-packages/torch/include/ATen/ATen.h:13:0,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/types.h:3,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/data/dataloader_options.h:4,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/data/dataloader/base.h:3,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/data/dataloader/stateful.h:3,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/data/dataloader.h:3,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/data.h:3,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/all.h:8,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/extension.h:4,\n","                     from csrc/mlp.cpp:1:\n","    /usr/local/lib/python3.6/dist-packages/torch/include/ATen/Dispatch.h:152:56: warning: ‘c10::ScalarType detail::scalar_type(const at::DeprecatedTypeProperties&)’ is deprecated: passing at::DeprecatedTypeProperties to an AT_DISPATCH macro is deprecated, pass an at::ScalarType instead [-Wdeprecated-declarations]\n","         at::ScalarType _st = ::detail::scalar_type(the_type);                   \\\n","                                                            ^\n","    csrc/mlp.cpp:67:3: note: in expansion of macro ‘AT_DISPATCH_FLOATING_TYPES_AND_HALF’\n","       AT_DISPATCH_FLOATING_TYPES_AND_HALF(inputs[0].type(), \"mlp_forward\", [&] {\n","       ^\n","    /usr/local/lib/python3.6/dist-packages/torch/include/ATen/Dispatch.h:66:23: note: declared here\n","     inline at::ScalarType scalar_type(const at::DeprecatedTypeProperties& t) {\n","                           ^~~~~~~~~~~\n","    csrc/mlp.cpp: In lambda function:\n","    csrc/mlp.cpp:70:23: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]\n","         for (int i = 0; i < num_layers; i++) {\n","                         ~~^~~\n","    /usr/local/lib/python3.6/dist-packages/torch/include/ATen/Dispatch.h:13:12: note: in definition of macro ‘AT_PRIVATE_CASE_TYPE’\n","         return __VA_ARGS__();                          \\\n","                ^~~~~~~~~~~\n","    csrc/mlp.cpp:67:3: note: in expansion of macro ‘AT_DISPATCH_FLOATING_TYPES_AND_HALF’\n","       AT_DISPATCH_FLOATING_TYPES_AND_HALF(inputs[0].type(), \"mlp_forward\", [&] {\n","       ^\n","    csrc/mlp.cpp:76:10: warning: unused variable ‘result’ [-Wunused-variable]\n","         auto result = mlp_fp<scalar_t>(\n","              ^\n","    /usr/local/lib/python3.6/dist-packages/torch/include/ATen/Dispatch.h:13:12: note: in definition of macro ‘AT_PRIVATE_CASE_TYPE’\n","         return __VA_ARGS__();                          \\\n","                ^~~~~~~~~~~\n","    csrc/mlp.cpp:67:3: note: in expansion of macro ‘AT_DISPATCH_FLOATING_TYPES_AND_HALF’\n","       AT_DISPATCH_FLOATING_TYPES_AND_HALF(inputs[0].type(), \"mlp_forward\", [&] {\n","       ^\n","    csrc/mlp.cpp: In lambda function:\n","    csrc/mlp.cpp:70:23: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]\n","         for (int i = 0; i < num_layers; i++) {\n","                         ~~^~~\n","    /usr/local/lib/python3.6/dist-packages/torch/include/ATen/Dispatch.h:13:12: note: in definition of macro ‘AT_PRIVATE_CASE_TYPE’\n","         return __VA_ARGS__();                          \\\n","                ^~~~~~~~~~~\n","    csrc/mlp.cpp:67:3: note: in expansion of macro ‘AT_DISPATCH_FLOATING_TYPES_AND_HALF’\n","       AT_DISPATCH_FLOATING_TYPES_AND_HALF(inputs[0].type(), \"mlp_forward\", [&] {\n","       ^\n","    csrc/mlp.cpp:76:10: warning: unused variable ‘result’ [-Wunused-variable]\n","         auto result = mlp_fp<scalar_t>(\n","              ^\n","    /usr/local/lib/python3.6/dist-packages/torch/include/ATen/Dispatch.h:13:12: note: in definition of macro ‘AT_PRIVATE_CASE_TYPE’\n","         return __VA_ARGS__();                          \\\n","                ^~~~~~~~~~~\n","    csrc/mlp.cpp:67:3: note: in expansion of macro ‘AT_DISPATCH_FLOATING_TYPES_AND_HALF’\n","       AT_DISPATCH_FLOATING_TYPES_AND_HALF(inputs[0].type(), \"mlp_forward\", [&] {\n","       ^\n","    csrc/mlp.cpp: In lambda function:\n","    csrc/mlp.cpp:70:23: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]\n","         for (int i = 0; i < num_layers; i++) {\n","                         ~~^~~\n","    /usr/local/lib/python3.6/dist-packages/torch/include/ATen/Dispatch.h:13:12: note: in definition of macro ‘AT_PRIVATE_CASE_TYPE’\n","         return __VA_ARGS__();                          \\\n","                ^~~~~~~~~~~\n","    csrc/mlp.cpp:67:3: note: in expansion of macro ‘AT_DISPATCH_FLOATING_TYPES_AND_HALF’\n","       AT_DISPATCH_FLOATING_TYPES_AND_HALF(inputs[0].type(), \"mlp_forward\", [&] {\n","       ^\n","    csrc/mlp.cpp:76:10: warning: unused variable ‘result’ [-Wunused-variable]\n","         auto result = mlp_fp<scalar_t>(\n","              ^\n","    /usr/local/lib/python3.6/dist-packages/torch/include/ATen/Dispatch.h:13:12: note: in definition of macro ‘AT_PRIVATE_CASE_TYPE’\n","         return __VA_ARGS__();                          \\\n","                ^~~~~~~~~~~\n","    csrc/mlp.cpp:67:3: note: in expansion of macro ‘AT_DISPATCH_FLOATING_TYPES_AND_HALF’\n","       AT_DISPATCH_FLOATING_TYPES_AND_HALF(inputs[0].type(), \"mlp_forward\", [&] {\n","       ^\n","    csrc/mlp.cpp: In function ‘std::vector<at::Tensor> mlp_backward(int, int, at::Tensor, std::vector<at::Tensor>, std::vector<at::Tensor>)’:\n","    csrc/mlp.cpp:113:21: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]\n","       for (int i = 0; i < num_layers; i++) {\n","                       ~~^~~~~~~~~~~~\n","    csrc/mlp.cpp:119:21: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]\n","       for (int i = 0; i < inputs.size(); i++) {\n","                       ~~^~~~~~~~~~~~~~~\n","    csrc/mlp.cpp:120:67: warning: ‘at::DeprecatedTypeProperties& at::Tensor::type() const’ is deprecated: Tensor.type() is deprecated. Instead use Tensor.options(), which in many cases (e.g. in a constructor) is a drop-in replacement. If you were using data from type(), that is now available from Tensor itself, so instead of tensor.type().scalar_type(), use tensor.scalar_type() instead and instead of tensor.type().backend() use tensor.device(). [-Wdeprecated-declarations]\n","         outputs.push_back(at::empty(inputs[i].sizes(), inputs[i].type()));  // clone for testing now\n","                                                                       ^\n","    In file included from /usr/local/lib/python3.6/dist-packages/torch/include/ATen/Tensor.h:3:0,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/ATen/Context.h:4,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/ATen/ATen.h:9,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/types.h:3,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/data/dataloader_options.h:4,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/data/dataloader/base.h:3,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/data/dataloader/stateful.h:3,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/data/dataloader.h:3,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/data.h:3,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/all.h:8,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/extension.h:4,\n","                     from csrc/mlp.cpp:1:\n","    /usr/local/lib/python3.6/dist-packages/torch/include/ATen/core/TensorBody.h:277:30: note: declared here\n","       DeprecatedTypeProperties & type() const {\n","                                  ^~~~\n","    In file included from /usr/local/lib/python3.6/dist-packages/torch/include/ATen/ATen.h:13:0,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/types.h:3,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/data/dataloader_options.h:4,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/data/dataloader/base.h:3,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/data/dataloader/stateful.h:3,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/data/dataloader.h:3,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/data.h:3,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/all.h:8,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/extension.h:4,\n","                     from csrc/mlp.cpp:1:\n","    csrc/mlp.cpp: In lambda function:\n","    csrc/mlp.cpp:123:54: warning: ‘at::DeprecatedTypeProperties& at::Tensor::type() const’ is deprecated: Tensor.type() is deprecated. Instead use Tensor.options(), which in many cases (e.g. in a constructor) is a drop-in replacement. If you were using data from type(), that is now available from Tensor itself, so instead of tensor.type().scalar_type(), use tensor.scalar_type() instead and instead of tensor.type().backend() use tensor.device(). [-Wdeprecated-declarations]\n","       AT_DISPATCH_FLOATING_TYPES_AND_HALF(inputs[0].type(), \"mlp_backward\", [&] {\n","                                                          ^\n","    /usr/local/lib/python3.6/dist-packages/torch/include/ATen/Dispatch.h:150:28: note: in definition of macro ‘AT_DISPATCH_FLOATING_TYPES_AND_HALF’\n","         const auto& the_type = TYPE;                                            \\\n","                                ^~~~\n","    In file included from /usr/local/lib/python3.6/dist-packages/torch/include/ATen/Tensor.h:3:0,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/ATen/Context.h:4,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/ATen/ATen.h:9,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/types.h:3,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/data/dataloader_options.h:4,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/data/dataloader/base.h:3,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/data/dataloader/stateful.h:3,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/data/dataloader.h:3,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/data.h:3,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/all.h:8,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/extension.h:4,\n","                     from csrc/mlp.cpp:1:\n","    /usr/local/lib/python3.6/dist-packages/torch/include/ATen/core/TensorBody.h:277:30: note: declared here\n","       DeprecatedTypeProperties & type() const {\n","                                  ^~~~\n","    In file included from /usr/local/lib/python3.6/dist-packages/torch/include/ATen/ATen.h:13:0,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/types.h:3,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/data/dataloader_options.h:4,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/data/dataloader/base.h:3,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/data/dataloader/stateful.h:3,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/data/dataloader.h:3,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/data.h:3,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/all.h:8,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/extension.h:4,\n","                     from csrc/mlp.cpp:1:\n","    /usr/local/lib/python3.6/dist-packages/torch/include/ATen/Dispatch.h:152:56: warning: ‘c10::ScalarType detail::scalar_type(const at::DeprecatedTypeProperties&)’ is deprecated: passing at::DeprecatedTypeProperties to an AT_DISPATCH macro is deprecated, pass an at::ScalarType instead [-Wdeprecated-declarations]\n","         at::ScalarType _st = ::detail::scalar_type(the_type);                   \\\n","                                                            ^\n","    csrc/mlp.cpp:123:3: note: in expansion of macro ‘AT_DISPATCH_FLOATING_TYPES_AND_HALF’\n","       AT_DISPATCH_FLOATING_TYPES_AND_HALF(inputs[0].type(), \"mlp_backward\", [&] {\n","       ^\n","    /usr/local/lib/python3.6/dist-packages/torch/include/ATen/Dispatch.h:66:23: note: declared here\n","     inline at::ScalarType scalar_type(const at::DeprecatedTypeProperties& t) {\n","                           ^~~~~~~~~~~\n","    csrc/mlp.cpp: In lambda function:\n","    csrc/mlp.cpp:125:23: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]\n","         for (int i = 0; i < num_layers; i++) {\n","                         ~~^~~\n","    /usr/local/lib/python3.6/dist-packages/torch/include/ATen/Dispatch.h:13:12: note: in definition of macro ‘AT_PRIVATE_CASE_TYPE’\n","         return __VA_ARGS__();                          \\\n","                ^~~~~~~~~~~\n","    csrc/mlp.cpp:123:3: note: in expansion of macro ‘AT_DISPATCH_FLOATING_TYPES_AND_HALF’\n","       AT_DISPATCH_FLOATING_TYPES_AND_HALF(inputs[0].type(), \"mlp_backward\", [&] {\n","       ^\n","    csrc/mlp.cpp:129:23: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]\n","         for (int i = 0; i < inputs.size(); i++) {\n","                         ~~^~~~~~~~~~~~~~~\n","    /usr/local/lib/python3.6/dist-packages/torch/include/ATen/Dispatch.h:13:12: note: in definition of macro ‘AT_PRIVATE_CASE_TYPE’\n","         return __VA_ARGS__();                          \\\n","                ^~~~~~~~~~~\n","    csrc/mlp.cpp:123:3: note: in expansion of macro ‘AT_DISPATCH_FLOATING_TYPES_AND_HALF’\n","       AT_DISPATCH_FLOATING_TYPES_AND_HALF(inputs[0].type(), \"mlp_backward\", [&] {\n","       ^\n","    csrc/mlp.cpp:137:80: warning: ‘at::DeprecatedTypeProperties& at::Tensor::type() const’ is deprecated: Tensor.type() is deprecated. Instead use Tensor.options(), which in many cases (e.g. in a constructor) is a drop-in replacement. If you were using data from type(), that is now available from Tensor itself, so instead of tensor.type().scalar_type(), use tensor.scalar_type() instead and instead of tensor.type().backend() use tensor.device(). [-Wdeprecated-declarations]\n","         auto work_space = at::empty({work_size / sizeof(scalar_t)}, inputs[0].type());\n","                                                                                    ^\n","    /usr/local/lib/python3.6/dist-packages/torch/include/ATen/Dispatch.h:13:12: note: in definition of macro ‘AT_PRIVATE_CASE_TYPE’\n","         return __VA_ARGS__();                          \\\n","                ^~~~~~~~~~~\n","    csrc/mlp.cpp:123:3: note: in expansion of macro ‘AT_DISPATCH_FLOATING_TYPES_AND_HALF’\n","       AT_DISPATCH_FLOATING_TYPES_AND_HALF(inputs[0].type(), \"mlp_backward\", [&] {\n","       ^\n","    In file included from /usr/local/lib/python3.6/dist-packages/torch/include/ATen/Tensor.h:3:0,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/ATen/Context.h:4,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/ATen/ATen.h:9,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/types.h:3,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/data/dataloader_options.h:4,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/data/dataloader/base.h:3,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/data/dataloader/stateful.h:3,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/data/dataloader.h:3,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/data.h:3,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/all.h:8,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/extension.h:4,\n","                     from csrc/mlp.cpp:1:\n","    /usr/local/lib/python3.6/dist-packages/torch/include/ATen/core/TensorBody.h:277:30: note: declared here\n","       DeprecatedTypeProperties & type() const {\n","                                  ^~~~\n","    In file included from /usr/local/lib/python3.6/dist-packages/torch/include/ATen/ATen.h:13:0,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/types.h:3,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/data/dataloader_options.h:4,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/data/dataloader/base.h:3,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/data/dataloader/stateful.h:3,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/data/dataloader.h:3,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/data.h:3,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/all.h:8,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/extension.h:4,\n","                     from csrc/mlp.cpp:1:\n","    csrc/mlp.cpp:137:44: warning: narrowing conversion of ‘(work_size / sizeof (scalar_t))’ from ‘long unsigned int’ to ‘long int’ inside { } [-Wnarrowing]\n","         auto work_space = at::empty({work_size / sizeof(scalar_t)}, inputs[0].type());\n","                                      ~~~~~~~~~~^~~~~~~~~\n","    /usr/local/lib/python3.6/dist-packages/torch/include/ATen/Dispatch.h:13:12: note: in definition of macro ‘AT_PRIVATE_CASE_TYPE’\n","         return __VA_ARGS__();                          \\\n","                ^~~~~~~~~~~\n","    csrc/mlp.cpp:123:3: note: in expansion of macro ‘AT_DISPATCH_FLOATING_TYPES_AND_HALF’\n","       AT_DISPATCH_FLOATING_TYPES_AND_HALF(inputs[0].type(), \"mlp_backward\", [&] {\n","       ^\n","    csrc/mlp.cpp:137:44: warning: narrowing conversion of ‘(work_size / sizeof (scalar_t))’ from ‘long unsigned int’ to ‘long int’ inside { } [-Wnarrowing]\n","         auto work_space = at::empty({work_size / sizeof(scalar_t)}, inputs[0].type());\n","                                      ~~~~~~~~~~^~~~~~~~~\n","    /usr/local/lib/python3.6/dist-packages/torch/include/ATen/Dispatch.h:13:12: note: in definition of macro ‘AT_PRIVATE_CASE_TYPE’\n","         return __VA_ARGS__();                          \\\n","                ^~~~~~~~~~~\n","    csrc/mlp.cpp:123:3: note: in expansion of macro ‘AT_DISPATCH_FLOATING_TYPES_AND_HALF’\n","       AT_DISPATCH_FLOATING_TYPES_AND_HALF(inputs[0].type(), \"mlp_backward\", [&] {\n","       ^\n","    csrc/mlp.cpp:139:10: warning: unused variable ‘result’ [-Wunused-variable]\n","         auto result = mlp_bp<scalar_t>(\n","              ^\n","    /usr/local/lib/python3.6/dist-packages/torch/include/ATen/Dispatch.h:13:12: note: in definition of macro ‘AT_PRIVATE_CASE_TYPE’\n","         return __VA_ARGS__();                          \\\n","                ^~~~~~~~~~~\n","    csrc/mlp.cpp:123:3: note: in expansion of macro ‘AT_DISPATCH_FLOATING_TYPES_AND_HALF’\n","       AT_DISPATCH_FLOATING_TYPES_AND_HALF(inputs[0].type(), \"mlp_backward\", [&] {\n","       ^\n","    csrc/mlp.cpp: In lambda function:\n","    csrc/mlp.cpp:125:23: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]\n","         for (int i = 0; i < num_layers; i++) {\n","                         ~~^~~\n","    /usr/local/lib/python3.6/dist-packages/torch/include/ATen/Dispatch.h:13:12: note: in definition of macro ‘AT_PRIVATE_CASE_TYPE’\n","         return __VA_ARGS__();                          \\\n","                ^~~~~~~~~~~\n","    csrc/mlp.cpp:123:3: note: in expansion of macro ‘AT_DISPATCH_FLOATING_TYPES_AND_HALF’\n","       AT_DISPATCH_FLOATING_TYPES_AND_HALF(inputs[0].type(), \"mlp_backward\", [&] {\n","       ^\n","    csrc/mlp.cpp:129:23: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]\n","         for (int i = 0; i < inputs.size(); i++) {\n","                         ~~^~~~~~~~~~~~~~~\n","    /usr/local/lib/python3.6/dist-packages/torch/include/ATen/Dispatch.h:13:12: note: in definition of macro ‘AT_PRIVATE_CASE_TYPE’\n","         return __VA_ARGS__();                          \\\n","                ^~~~~~~~~~~\n","    csrc/mlp.cpp:123:3: note: in expansion of macro ‘AT_DISPATCH_FLOATING_TYPES_AND_HALF’\n","       AT_DISPATCH_FLOATING_TYPES_AND_HALF(inputs[0].type(), \"mlp_backward\", [&] {\n","       ^\n","    csrc/mlp.cpp:137:80: warning: ‘at::DeprecatedTypeProperties& at::Tensor::type() const’ is deprecated: Tensor.type() is deprecated. Instead use Tensor.options(), which in many cases (e.g. in a constructor) is a drop-in replacement. If you were using data from type(), that is now available from Tensor itself, so instead of tensor.type().scalar_type(), use tensor.scalar_type() instead and instead of tensor.type().backend() use tensor.device(). [-Wdeprecated-declarations]\n","         auto work_space = at::empty({work_size / sizeof(scalar_t)}, inputs[0].type());\n","                                                                                    ^\n","    /usr/local/lib/python3.6/dist-packages/torch/include/ATen/Dispatch.h:13:12: note: in definition of macro ‘AT_PRIVATE_CASE_TYPE’\n","         return __VA_ARGS__();                          \\\n","                ^~~~~~~~~~~\n","    csrc/mlp.cpp:123:3: note: in expansion of macro ‘AT_DISPATCH_FLOATING_TYPES_AND_HALF’\n","       AT_DISPATCH_FLOATING_TYPES_AND_HALF(inputs[0].type(), \"mlp_backward\", [&] {\n","       ^\n","    In file included from /usr/local/lib/python3.6/dist-packages/torch/include/ATen/Tensor.h:3:0,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/ATen/Context.h:4,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/ATen/ATen.h:9,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/types.h:3,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/data/dataloader_options.h:4,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/data/dataloader/base.h:3,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/data/dataloader/stateful.h:3,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/data/dataloader.h:3,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/data.h:3,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/all.h:8,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/extension.h:4,\n","                     from csrc/mlp.cpp:1:\n","    /usr/local/lib/python3.6/dist-packages/torch/include/ATen/core/TensorBody.h:277:30: note: declared here\n","       DeprecatedTypeProperties & type() const {\n","                                  ^~~~\n","    In file included from /usr/local/lib/python3.6/dist-packages/torch/include/ATen/ATen.h:13:0,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/types.h:3,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/data/dataloader_options.h:4,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/data/dataloader/base.h:3,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/data/dataloader/stateful.h:3,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/data/dataloader.h:3,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/data.h:3,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/all.h:8,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/extension.h:4,\n","                     from csrc/mlp.cpp:1:\n","    csrc/mlp.cpp:137:44: warning: narrowing conversion of ‘(work_size / sizeof (scalar_t))’ from ‘long unsigned int’ to ‘long int’ inside { } [-Wnarrowing]\n","         auto work_space = at::empty({work_size / sizeof(scalar_t)}, inputs[0].type());\n","                                      ~~~~~~~~~~^~~~~~~~~\n","    /usr/local/lib/python3.6/dist-packages/torch/include/ATen/Dispatch.h:13:12: note: in definition of macro ‘AT_PRIVATE_CASE_TYPE’\n","         return __VA_ARGS__();                          \\\n","                ^~~~~~~~~~~\n","    csrc/mlp.cpp:123:3: note: in expansion of macro ‘AT_DISPATCH_FLOATING_TYPES_AND_HALF’\n","       AT_DISPATCH_FLOATING_TYPES_AND_HALF(inputs[0].type(), \"mlp_backward\", [&] {\n","       ^\n","    csrc/mlp.cpp:137:44: warning: narrowing conversion of ‘(work_size / sizeof (scalar_t))’ from ‘long unsigned int’ to ‘long int’ inside { } [-Wnarrowing]\n","         auto work_space = at::empty({work_size / sizeof(scalar_t)}, inputs[0].type());\n","                                      ~~~~~~~~~~^~~~~~~~~\n","    /usr/local/lib/python3.6/dist-packages/torch/include/ATen/Dispatch.h:13:12: note: in definition of macro ‘AT_PRIVATE_CASE_TYPE’\n","         return __VA_ARGS__();                          \\\n","                ^~~~~~~~~~~\n","    csrc/mlp.cpp:123:3: note: in expansion of macro ‘AT_DISPATCH_FLOATING_TYPES_AND_HALF’\n","       AT_DISPATCH_FLOATING_TYPES_AND_HALF(inputs[0].type(), \"mlp_backward\", [&] {\n","       ^\n","    csrc/mlp.cpp:139:10: warning: unused variable ‘result’ [-Wunused-variable]\n","         auto result = mlp_bp<scalar_t>(\n","              ^\n","    /usr/local/lib/python3.6/dist-packages/torch/include/ATen/Dispatch.h:13:12: note: in definition of macro ‘AT_PRIVATE_CASE_TYPE’\n","         return __VA_ARGS__();                          \\\n","                ^~~~~~~~~~~\n","    csrc/mlp.cpp:123:3: note: in expansion of macro ‘AT_DISPATCH_FLOATING_TYPES_AND_HALF’\n","       AT_DISPATCH_FLOATING_TYPES_AND_HALF(inputs[0].type(), \"mlp_backward\", [&] {\n","       ^\n","    csrc/mlp.cpp: In lambda function:\n","    csrc/mlp.cpp:125:23: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]\n","         for (int i = 0; i < num_layers; i++) {\n","                         ~~^~~\n","    /usr/local/lib/python3.6/dist-packages/torch/include/ATen/Dispatch.h:13:12: note: in definition of macro ‘AT_PRIVATE_CASE_TYPE’\n","         return __VA_ARGS__();                          \\\n","                ^~~~~~~~~~~\n","    csrc/mlp.cpp:123:3: note: in expansion of macro ‘AT_DISPATCH_FLOATING_TYPES_AND_HALF’\n","       AT_DISPATCH_FLOATING_TYPES_AND_HALF(inputs[0].type(), \"mlp_backward\", [&] {\n","       ^\n","    csrc/mlp.cpp:129:23: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]\n","         for (int i = 0; i < inputs.size(); i++) {\n","                         ~~^~~~~~~~~~~~~~~\n","    /usr/local/lib/python3.6/dist-packages/torch/include/ATen/Dispatch.h:13:12: note: in definition of macro ‘AT_PRIVATE_CASE_TYPE’\n","         return __VA_ARGS__();                          \\\n","                ^~~~~~~~~~~\n","    csrc/mlp.cpp:123:3: note: in expansion of macro ‘AT_DISPATCH_FLOATING_TYPES_AND_HALF’\n","       AT_DISPATCH_FLOATING_TYPES_AND_HALF(inputs[0].type(), \"mlp_backward\", [&] {\n","       ^\n","    csrc/mlp.cpp:137:80: warning: ‘at::DeprecatedTypeProperties& at::Tensor::type() const’ is deprecated: Tensor.type() is deprecated. Instead use Tensor.options(), which in many cases (e.g. in a constructor) is a drop-in replacement. If you were using data from type(), that is now available from Tensor itself, so instead of tensor.type().scalar_type(), use tensor.scalar_type() instead and instead of tensor.type().backend() use tensor.device(). [-Wdeprecated-declarations]\n","         auto work_space = at::empty({work_size / sizeof(scalar_t)}, inputs[0].type());\n","                                                                                    ^\n","    /usr/local/lib/python3.6/dist-packages/torch/include/ATen/Dispatch.h:13:12: note: in definition of macro ‘AT_PRIVATE_CASE_TYPE’\n","         return __VA_ARGS__();                          \\\n","                ^~~~~~~~~~~\n","    csrc/mlp.cpp:123:3: note: in expansion of macro ‘AT_DISPATCH_FLOATING_TYPES_AND_HALF’\n","       AT_DISPATCH_FLOATING_TYPES_AND_HALF(inputs[0].type(), \"mlp_backward\", [&] {\n","       ^\n","    In file included from /usr/local/lib/python3.6/dist-packages/torch/include/ATen/Tensor.h:3:0,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/ATen/Context.h:4,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/ATen/ATen.h:9,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/types.h:3,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/data/dataloader_options.h:4,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/data/dataloader/base.h:3,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/data/dataloader/stateful.h:3,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/data/dataloader.h:3,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/data.h:3,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/all.h:8,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/extension.h:4,\n","                     from csrc/mlp.cpp:1:\n","    /usr/local/lib/python3.6/dist-packages/torch/include/ATen/core/TensorBody.h:277:30: note: declared here\n","       DeprecatedTypeProperties & type() const {\n","                                  ^~~~\n","    In file included from /usr/local/lib/python3.6/dist-packages/torch/include/ATen/ATen.h:13:0,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/types.h:3,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/data/dataloader_options.h:4,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/data/dataloader/base.h:3,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/data/dataloader/stateful.h:3,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/data/dataloader.h:3,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/data.h:3,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include/torch/all.h:8,\n","                     from /usr/local/lib/python3.6/dist-packages/torch/include/torch/extension.h:4,\n","                     from csrc/mlp.cpp:1:\n","    csrc/mlp.cpp:137:44: warning: narrowing conversion of ‘(work_size / sizeof (scalar_t))’ from ‘long unsigned int’ to ‘long int’ inside { } [-Wnarrowing]\n","         auto work_space = at::empty({work_size / sizeof(scalar_t)}, inputs[0].type());\n","                                      ~~~~~~~~~~^~~~~~~~~\n","    /usr/local/lib/python3.6/dist-packages/torch/include/ATen/Dispatch.h:13:12: note: in definition of macro ‘AT_PRIVATE_CASE_TYPE’\n","         return __VA_ARGS__();                          \\\n","                ^~~~~~~~~~~\n","    csrc/mlp.cpp:123:3: note: in expansion of macro ‘AT_DISPATCH_FLOATING_TYPES_AND_HALF’\n","       AT_DISPATCH_FLOATING_TYPES_AND_HALF(inputs[0].type(), \"mlp_backward\", [&] {\n","       ^\n","    csrc/mlp.cpp:137:44: warning: narrowing conversion of ‘(work_size / sizeof (scalar_t))’ from ‘long unsigned int’ to ‘long int’ inside { } [-Wnarrowing]\n","         auto work_space = at::empty({work_size / sizeof(scalar_t)}, inputs[0].type());\n","                                      ~~~~~~~~~~^~~~~~~~~\n","    /usr/local/lib/python3.6/dist-packages/torch/include/ATen/Dispatch.h:13:12: note: in definition of macro ‘AT_PRIVATE_CASE_TYPE’\n","         return __VA_ARGS__();                          \\\n","                ^~~~~~~~~~~\n","    csrc/mlp.cpp:123:3: note: in expansion of macro ‘AT_DISPATCH_FLOATING_TYPES_AND_HALF’\n","       AT_DISPATCH_FLOATING_TYPES_AND_HALF(inputs[0].type(), \"mlp_backward\", [&] {\n","       ^\n","    csrc/mlp.cpp:139:10: warning: unused variable ‘result’ [-Wunused-variable]\n","         auto result = mlp_bp<scalar_t>(\n","              ^\n","    /usr/local/lib/python3.6/dist-packages/torch/include/ATen/Dispatch.h:13:12: note: in definition of macro ‘AT_PRIVATE_CASE_TYPE’\n","         return __VA_ARGS__();                          \\\n","                ^~~~~~~~~~~\n","    csrc/mlp.cpp:123:3: note: in expansion of macro ‘AT_DISPATCH_FLOATING_TYPES_AND_HALF’\n","       AT_DISPATCH_FLOATING_TYPES_AND_HALF(inputs[0].type(), \"mlp_backward\", [&] {\n","       ^\n","    /usr/local/cuda/bin/nvcc -I/usr/local/lib/python3.6/dist-packages/torch/include -I/usr/local/lib/python3.6/dist-packages/torch/include/torch/csrc/api/include -I/usr/local/lib/python3.6/dist-packages/torch/include/TH -I/usr/local/lib/python3.6/dist-packages/torch/include/THC -I/usr/local/cuda/include -I/usr/include/python3.6m -c csrc/mlp_cuda.cu -o build/temp.linux-x86_64-3.6/csrc/mlp_cuda.o -D__CUDA_NO_HALF_OPERATORS__ -D__CUDA_NO_HALF_CONVERSIONS__ -D__CUDA_NO_HALF2_OPERATORS__ --expt-relaxed-constexpr --compiler-options '-fPIC' -O3 -DVERSION_GE_1_1 -DVERSION_GE_1_3 -DVERSION_GE_1_5 -DTORCH_API_INCLUDE_EXTENSION_H -DTORCH_EXTENSION_NAME=mlp_cuda -D_GLIBCXX_USE_CXX11_ABI=0 -gencode=arch=compute_75,code=sm_75 -std=c++14\n","    /usr/local/lib/python3.6/dist-packages/torch/include/ATen/core/boxing/impl/boxing.h(100): warning: integer conversion resulted in a change of sign\n","\n","    /usr/local/lib/python3.6/dist-packages/torch/include/ATen/core/op_registration/op_whitelist.h(39): warning: integer conversion resulted in a change of sign\n","\n","    /usr/local/lib/python3.6/dist-packages/torch/include/ATen/core/boxing/impl/boxing.h(100): warning: integer conversion resulted in a change of sign\n","\n","    /usr/local/lib/python3.6/dist-packages/torch/include/ATen/core/op_registration/op_whitelist.h(39): warning: integer conversion resulted in a change of sign\n","\n","    x86_64-linux-gnu-g++ -pthread -shared -Wl,-O1 -Wl,-Bsymbolic-functions -Wl,-Bsymbolic-functions -Wl,-z,relro -Wl,-Bsymbolic-functions -Wl,-z,relro -g -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 build/temp.linux-x86_64-3.6/csrc/mlp.o build/temp.linux-x86_64-3.6/csrc/mlp_cuda.o -L/usr/local/lib/python3.6/dist-packages/torch/lib -L/usr/local/cuda/lib64 -lc10 -ltorch -ltorch_cpu -ltorch_python -lcudart -lc10_cuda -ltorch_cuda -o build/lib.linux-x86_64-3.6/mlp_cuda.cpython-36m-x86_64-linux-gnu.so\n","    running install_lib\n","    copying build/lib.linux-x86_64-3.6/syncbn.cpython-36m-x86_64-linux-gnu.so -> /usr/local/lib/python3.6/dist-packages\n","    creating /usr/local/lib/python3.6/dist-packages/apex\n","    creating /usr/local/lib/python3.6/dist-packages/apex/fp16_utils\n","    copying build/lib.linux-x86_64-3.6/apex/fp16_utils/fp16_optimizer.py -> /usr/local/lib/python3.6/dist-packages/apex/fp16_utils\n","    copying build/lib.linux-x86_64-3.6/apex/fp16_utils/loss_scaler.py -> /usr/local/lib/python3.6/dist-packages/apex/fp16_utils\n","    copying build/lib.linux-x86_64-3.6/apex/fp16_utils/fp16util.py -> /usr/local/lib/python3.6/dist-packages/apex/fp16_utils\n","    copying build/lib.linux-x86_64-3.6/apex/fp16_utils/__init__.py -> /usr/local/lib/python3.6/dist-packages/apex/fp16_utils\n","    creating /usr/local/lib/python3.6/dist-packages/apex/mlp\n","    copying build/lib.linux-x86_64-3.6/apex/mlp/mlp.py -> /usr/local/lib/python3.6/dist-packages/apex/mlp\n","    copying build/lib.linux-x86_64-3.6/apex/mlp/__init__.py -> /usr/local/lib/python3.6/dist-packages/apex/mlp\n","    creating /usr/local/lib/python3.6/dist-packages/apex/parallel\n","    copying build/lib.linux-x86_64-3.6/apex/parallel/multiproc.py -> /usr/local/lib/python3.6/dist-packages/apex/parallel\n","    copying build/lib.linux-x86_64-3.6/apex/parallel/optimized_sync_batchnorm.py -> /usr/local/lib/python3.6/dist-packages/apex/parallel\n","    copying build/lib.linux-x86_64-3.6/apex/parallel/optimized_sync_batchnorm_kernel.py -> /usr/local/lib/python3.6/dist-packages/apex/parallel\n","    copying build/lib.linux-x86_64-3.6/apex/parallel/sync_batchnorm_kernel.py -> /usr/local/lib/python3.6/dist-packages/apex/parallel\n","    copying build/lib.linux-x86_64-3.6/apex/parallel/sync_batchnorm.py -> /usr/local/lib/python3.6/dist-packages/apex/parallel\n","    copying build/lib.linux-x86_64-3.6/apex/parallel/LARC.py -> /usr/local/lib/python3.6/dist-packages/apex/parallel\n","    copying build/lib.linux-x86_64-3.6/apex/parallel/__init__.py -> /usr/local/lib/python3.6/dist-packages/apex/parallel\n","    copying build/lib.linux-x86_64-3.6/apex/parallel/distributed.py -> /usr/local/lib/python3.6/dist-packages/apex/parallel\n","    creating /usr/local/lib/python3.6/dist-packages/apex/RNN\n","    copying build/lib.linux-x86_64-3.6/apex/RNN/cells.py -> /usr/local/lib/python3.6/dist-packages/apex/RNN\n","    copying build/lib.linux-x86_64-3.6/apex/RNN/models.py -> /usr/local/lib/python3.6/dist-packages/apex/RNN\n","    copying build/lib.linux-x86_64-3.6/apex/RNN/RNNBackend.py -> /usr/local/lib/python3.6/dist-packages/apex/RNN\n","    copying build/lib.linux-x86_64-3.6/apex/RNN/__init__.py -> /usr/local/lib/python3.6/dist-packages/apex/RNN\n","    creating /usr/local/lib/python3.6/dist-packages/apex/pyprof\n","    creating /usr/local/lib/python3.6/dist-packages/apex/pyprof/prof\n","    copying build/lib.linux-x86_64-3.6/apex/pyprof/prof/utility.py -> /usr/local/lib/python3.6/dist-packages/apex/pyprof/prof\n","    copying build/lib.linux-x86_64-3.6/apex/pyprof/prof/blas.py -> /usr/local/lib/python3.6/dist-packages/apex/pyprof/prof\n","    copying build/lib.linux-x86_64-3.6/apex/pyprof/prof/loss.py -> /usr/local/lib/python3.6/dist-packages/apex/pyprof/prof\n","    copying build/lib.linux-x86_64-3.6/apex/pyprof/prof/misc.py -> /usr/local/lib/python3.6/dist-packages/apex/pyprof/prof\n","    copying build/lib.linux-x86_64-3.6/apex/pyprof/prof/recurrentCell.py -> /usr/local/lib/python3.6/dist-packages/apex/pyprof/prof\n","    copying build/lib.linux-x86_64-3.6/apex/pyprof/prof/optim.py -> /usr/local/lib/python3.6/dist-packages/apex/pyprof/prof\n","    copying build/lib.linux-x86_64-3.6/apex/pyprof/prof/reduction.py -> /usr/local/lib/python3.6/dist-packages/apex/pyprof/prof\n","    copying build/lib.linux-x86_64-3.6/apex/pyprof/prof/prof.py -> /usr/local/lib/python3.6/dist-packages/apex/pyprof/prof\n","    copying build/lib.linux-x86_64-3.6/apex/pyprof/prof/output.py -> /usr/local/lib/python3.6/dist-packages/apex/pyprof/prof\n","    copying build/lib.linux-x86_64-3.6/apex/pyprof/prof/index_slice_join_mutate.py -> /usr/local/lib/python3.6/dist-packages/apex/pyprof/prof\n","    copying build/lib.linux-x86_64-3.6/apex/pyprof/prof/activation.py -> /usr/local/lib/python3.6/dist-packages/apex/pyprof/prof\n","    copying build/lib.linux-x86_64-3.6/apex/pyprof/prof/pointwise.py -> /usr/local/lib/python3.6/dist-packages/apex/pyprof/prof\n","    copying build/lib.linux-x86_64-3.6/apex/pyprof/prof/usage.py -> /usr/local/lib/python3.6/dist-packages/apex/pyprof/prof\n","    copying build/lib.linux-x86_64-3.6/apex/pyprof/prof/base.py -> /usr/local/lib/python3.6/dist-packages/apex/pyprof/prof\n","    copying build/lib.linux-x86_64-3.6/apex/pyprof/prof/pooling.py -> /usr/local/lib/python3.6/dist-packages/apex/pyprof/prof\n","    copying build/lib.linux-x86_64-3.6/apex/pyprof/prof/convert.py -> /usr/local/lib/python3.6/dist-packages/apex/pyprof/prof\n","    copying build/lib.linux-x86_64-3.6/apex/pyprof/prof/randomSample.py -> /usr/local/lib/python3.6/dist-packages/apex/pyprof/prof\n","    copying build/lib.linux-x86_64-3.6/apex/pyprof/prof/data.py -> /usr/local/lib/python3.6/dist-packages/apex/pyprof/prof\n","    copying build/lib.linux-x86_64-3.6/apex/pyprof/prof/__main__.py -> /usr/local/lib/python3.6/dist-packages/apex/pyprof/prof\n","    copying build/lib.linux-x86_64-3.6/apex/pyprof/prof/conv.py -> /usr/local/lib/python3.6/dist-packages/apex/pyprof/prof\n","    copying build/lib.linux-x86_64-3.6/apex/pyprof/prof/dropout.py -> /usr/local/lib/python3.6/dist-packages/apex/pyprof/prof\n","    copying build/lib.linux-x86_64-3.6/apex/pyprof/prof/normalization.py -> /usr/local/lib/python3.6/dist-packages/apex/pyprof/prof\n","    copying build/lib.linux-x86_64-3.6/apex/pyprof/prof/softmax.py -> /usr/local/lib/python3.6/dist-packages/apex/pyprof/prof\n","    copying build/lib.linux-x86_64-3.6/apex/pyprof/prof/embedding.py -> /usr/local/lib/python3.6/dist-packages/apex/pyprof/prof\n","    copying build/lib.linux-x86_64-3.6/apex/pyprof/prof/linear.py -> /usr/local/lib/python3.6/dist-packages/apex/pyprof/prof\n","    copying build/lib.linux-x86_64-3.6/apex/pyprof/prof/__init__.py -> /usr/local/lib/python3.6/dist-packages/apex/pyprof/prof\n","    creating /usr/local/lib/python3.6/dist-packages/apex/pyprof/parse\n","    copying build/lib.linux-x86_64-3.6/apex/pyprof/parse/parse.py -> /usr/local/lib/python3.6/dist-packages/apex/pyprof/parse\n","    copying build/lib.linux-x86_64-3.6/apex/pyprof/parse/nvvp.py -> /usr/local/lib/python3.6/dist-packages/apex/pyprof/parse\n","    copying build/lib.linux-x86_64-3.6/apex/pyprof/parse/__main__.py -> /usr/local/lib/python3.6/dist-packages/apex/pyprof/parse\n","    copying build/lib.linux-x86_64-3.6/apex/pyprof/parse/db.py -> /usr/local/lib/python3.6/dist-packages/apex/pyprof/parse\n","    copying build/lib.linux-x86_64-3.6/apex/pyprof/parse/kernel.py -> /usr/local/lib/python3.6/dist-packages/apex/pyprof/parse\n","    copying build/lib.linux-x86_64-3.6/apex/pyprof/parse/__init__.py -> /usr/local/lib/python3.6/dist-packages/apex/pyprof/parse\n","    creating /usr/local/lib/python3.6/dist-packages/apex/pyprof/nvtx\n","    copying build/lib.linux-x86_64-3.6/apex/pyprof/nvtx/nvmarker.py -> /usr/local/lib/python3.6/dist-packages/apex/pyprof/nvtx\n","    copying build/lib.linux-x86_64-3.6/apex/pyprof/nvtx/__init__.py -> /usr/local/lib/python3.6/dist-packages/apex/pyprof/nvtx\n","    copying build/lib.linux-x86_64-3.6/apex/pyprof/__init__.py -> /usr/local/lib/python3.6/dist-packages/apex/pyprof\n","    creating /usr/local/lib/python3.6/dist-packages/apex/reparameterization\n","    copying build/lib.linux-x86_64-3.6/apex/reparameterization/weight_norm.py -> /usr/local/lib/python3.6/dist-packages/apex/reparameterization\n","    copying build/lib.linux-x86_64-3.6/apex/reparameterization/reparameterization.py -> /usr/local/lib/python3.6/dist-packages/apex/reparameterization\n","    copying build/lib.linux-x86_64-3.6/apex/reparameterization/__init__.py -> /usr/local/lib/python3.6/dist-packages/apex/reparameterization\n","    creating /usr/local/lib/python3.6/dist-packages/apex/amp\n","    copying build/lib.linux-x86_64-3.6/apex/amp/rnn_compat.py -> /usr/local/lib/python3.6/dist-packages/apex/amp\n","    copying build/lib.linux-x86_64-3.6/apex/amp/_process_optimizer.py -> /usr/local/lib/python3.6/dist-packages/apex/amp\n","    copying build/lib.linux-x86_64-3.6/apex/amp/_amp_state.py -> /usr/local/lib/python3.6/dist-packages/apex/amp\n","    copying build/lib.linux-x86_64-3.6/apex/amp/wrap.py -> /usr/local/lib/python3.6/dist-packages/apex/amp\n","    copying build/lib.linux-x86_64-3.6/apex/amp/compat.py -> /usr/local/lib/python3.6/dist-packages/apex/amp\n","    copying build/lib.linux-x86_64-3.6/apex/amp/frontend.py -> /usr/local/lib/python3.6/dist-packages/apex/amp\n","    copying build/lib.linux-x86_64-3.6/apex/amp/scaler.py -> /usr/local/lib/python3.6/dist-packages/apex/amp\n","    copying build/lib.linux-x86_64-3.6/apex/amp/__version__.py -> /usr/local/lib/python3.6/dist-packages/apex/amp\n","    creating /usr/local/lib/python3.6/dist-packages/apex/amp/lists\n","    copying build/lib.linux-x86_64-3.6/apex/amp/lists/tensor_overrides.py -> /usr/local/lib/python3.6/dist-packages/apex/amp/lists\n","    copying build/lib.linux-x86_64-3.6/apex/amp/lists/functional_overrides.py -> /usr/local/lib/python3.6/dist-packages/apex/amp/lists\n","    copying build/lib.linux-x86_64-3.6/apex/amp/lists/torch_overrides.py -> /usr/local/lib/python3.6/dist-packages/apex/amp/lists\n","    copying build/lib.linux-x86_64-3.6/apex/amp/lists/__init__.py -> /usr/local/lib/python3.6/dist-packages/apex/amp/lists\n","    copying build/lib.linux-x86_64-3.6/apex/amp/amp.py -> /usr/local/lib/python3.6/dist-packages/apex/amp\n","    copying build/lib.linux-x86_64-3.6/apex/amp/_initialize.py -> /usr/local/lib/python3.6/dist-packages/apex/amp\n","    copying build/lib.linux-x86_64-3.6/apex/amp/handle.py -> /usr/local/lib/python3.6/dist-packages/apex/amp\n","    copying build/lib.linux-x86_64-3.6/apex/amp/opt.py -> /usr/local/lib/python3.6/dist-packages/apex/amp\n","    copying build/lib.linux-x86_64-3.6/apex/amp/utils.py -> /usr/local/lib/python3.6/dist-packages/apex/amp\n","    copying build/lib.linux-x86_64-3.6/apex/amp/__init__.py -> /usr/local/lib/python3.6/dist-packages/apex/amp\n","    creating /usr/local/lib/python3.6/dist-packages/apex/contrib\n","    creating /usr/local/lib/python3.6/dist-packages/apex/contrib/multihead_attn\n","    copying build/lib.linux-x86_64-3.6/apex/contrib/multihead_attn/fast_encdec_multihead_attn_norm_add_func.py -> /usr/local/lib/python3.6/dist-packages/apex/contrib/multihead_attn\n","    copying build/lib.linux-x86_64-3.6/apex/contrib/multihead_attn/fast_self_multihead_attn_func.py -> /usr/local/lib/python3.6/dist-packages/apex/contrib/multihead_attn\n","    copying build/lib.linux-x86_64-3.6/apex/contrib/multihead_attn/encdec_multihead_attn.py -> /usr/local/lib/python3.6/dist-packages/apex/contrib/multihead_attn\n","    copying build/lib.linux-x86_64-3.6/apex/contrib/multihead_attn/self_multihead_attn.py -> /usr/local/lib/python3.6/dist-packages/apex/contrib/multihead_attn\n","    copying build/lib.linux-x86_64-3.6/apex/contrib/multihead_attn/fast_self_multihead_attn_norm_add_func.py -> /usr/local/lib/python3.6/dist-packages/apex/contrib/multihead_attn\n","    copying build/lib.linux-x86_64-3.6/apex/contrib/multihead_attn/encdec_multihead_attn_func.py -> /usr/local/lib/python3.6/dist-packages/apex/contrib/multihead_attn\n","    copying build/lib.linux-x86_64-3.6/apex/contrib/multihead_attn/mask_softmax_dropout_func.py -> /usr/local/lib/python3.6/dist-packages/apex/contrib/multihead_attn\n","    copying build/lib.linux-x86_64-3.6/apex/contrib/multihead_attn/self_multihead_attn_func.py -> /usr/local/lib/python3.6/dist-packages/apex/contrib/multihead_attn\n","    copying build/lib.linux-x86_64-3.6/apex/contrib/multihead_attn/fast_encdec_multihead_attn_func.py -> /usr/local/lib/python3.6/dist-packages/apex/contrib/multihead_attn\n","    copying build/lib.linux-x86_64-3.6/apex/contrib/multihead_attn/__init__.py -> /usr/local/lib/python3.6/dist-packages/apex/contrib/multihead_attn\n","    creating /usr/local/lib/python3.6/dist-packages/apex/contrib/groupbn\n","    copying build/lib.linux-x86_64-3.6/apex/contrib/groupbn/batch_norm.py -> /usr/local/lib/python3.6/dist-packages/apex/contrib/groupbn\n","    copying build/lib.linux-x86_64-3.6/apex/contrib/groupbn/__init__.py -> /usr/local/lib/python3.6/dist-packages/apex/contrib/groupbn\n","    creating /usr/local/lib/python3.6/dist-packages/apex/contrib/sparsity\n","    copying build/lib.linux-x86_64-3.6/apex/contrib/sparsity/sparse_masklib.py -> /usr/local/lib/python3.6/dist-packages/apex/contrib/sparsity\n","    copying build/lib.linux-x86_64-3.6/apex/contrib/sparsity/asp.py -> /usr/local/lib/python3.6/dist-packages/apex/contrib/sparsity\n","    copying build/lib.linux-x86_64-3.6/apex/contrib/sparsity/__init__.py -> /usr/local/lib/python3.6/dist-packages/apex/contrib/sparsity\n","    creating /usr/local/lib/python3.6/dist-packages/apex/contrib/xentropy\n","    copying build/lib.linux-x86_64-3.6/apex/contrib/xentropy/softmax_xentropy.py -> /usr/local/lib/python3.6/dist-packages/apex/contrib/xentropy\n","    copying build/lib.linux-x86_64-3.6/apex/contrib/xentropy/__init__.py -> /usr/local/lib/python3.6/dist-packages/apex/contrib/xentropy\n","    creating /usr/local/lib/python3.6/dist-packages/apex/contrib/optimizers\n","    copying build/lib.linux-x86_64-3.6/apex/contrib/optimizers/fp16_optimizer.py -> /usr/local/lib/python3.6/dist-packages/apex/contrib/optimizers\n","    copying build/lib.linux-x86_64-3.6/apex/contrib/optimizers/distributed_fused_lamb.py -> /usr/local/lib/python3.6/dist-packages/apex/contrib/optimizers\n","    copying build/lib.linux-x86_64-3.6/apex/contrib/optimizers/fused_adam.py -> /usr/local/lib/python3.6/dist-packages/apex/contrib/optimizers\n","    copying build/lib.linux-x86_64-3.6/apex/contrib/optimizers/distributed_fused_adam.py -> /usr/local/lib/python3.6/dist-packages/apex/contrib/optimizers\n","    copying build/lib.linux-x86_64-3.6/apex/contrib/optimizers/distributed_fused_adam_v3.py -> /usr/local/lib/python3.6/dist-packages/apex/contrib/optimizers\n","    copying build/lib.linux-x86_64-3.6/apex/contrib/optimizers/fused_sgd.py -> /usr/local/lib/python3.6/dist-packages/apex/contrib/optimizers\n","    copying build/lib.linux-x86_64-3.6/apex/contrib/optimizers/distributed_fused_adam_v2.py -> /usr/local/lib/python3.6/dist-packages/apex/contrib/optimizers\n","    copying build/lib.linux-x86_64-3.6/apex/contrib/optimizers/fused_lamb.py -> /usr/local/lib/python3.6/dist-packages/apex/contrib/optimizers\n","    copying build/lib.linux-x86_64-3.6/apex/contrib/optimizers/__init__.py -> /usr/local/lib/python3.6/dist-packages/apex/contrib/optimizers\n","    copying build/lib.linux-x86_64-3.6/apex/contrib/__init__.py -> /usr/local/lib/python3.6/dist-packages/apex/contrib\n","    creating /usr/local/lib/python3.6/dist-packages/apex/multi_tensor_apply\n","    copying build/lib.linux-x86_64-3.6/apex/multi_tensor_apply/multi_tensor_apply.py -> /usr/local/lib/python3.6/dist-packages/apex/multi_tensor_apply\n","    copying build/lib.linux-x86_64-3.6/apex/multi_tensor_apply/__init__.py -> /usr/local/lib/python3.6/dist-packages/apex/multi_tensor_apply\n","    creating /usr/local/lib/python3.6/dist-packages/apex/optimizers\n","    copying build/lib.linux-x86_64-3.6/apex/optimizers/fused_adagrad.py -> /usr/local/lib/python3.6/dist-packages/apex/optimizers\n","    copying build/lib.linux-x86_64-3.6/apex/optimizers/fused_novograd.py -> /usr/local/lib/python3.6/dist-packages/apex/optimizers\n","    copying build/lib.linux-x86_64-3.6/apex/optimizers/fused_adam.py -> /usr/local/lib/python3.6/dist-packages/apex/optimizers\n","    copying build/lib.linux-x86_64-3.6/apex/optimizers/fused_sgd.py -> /usr/local/lib/python3.6/dist-packages/apex/optimizers\n","    copying build/lib.linux-x86_64-3.6/apex/optimizers/fused_lamb.py -> /usr/local/lib/python3.6/dist-packages/apex/optimizers\n","    copying build/lib.linux-x86_64-3.6/apex/optimizers/__init__.py -> /usr/local/lib/python3.6/dist-packages/apex/optimizers\n","    creating /usr/local/lib/python3.6/dist-packages/apex/normalization\n","    copying build/lib.linux-x86_64-3.6/apex/normalization/fused_layer_norm.py -> /usr/local/lib/python3.6/dist-packages/apex/normalization\n","    copying build/lib.linux-x86_64-3.6/apex/normalization/__init__.py -> /usr/local/lib/python3.6/dist-packages/apex/normalization\n","    copying build/lib.linux-x86_64-3.6/apex/__init__.py -> /usr/local/lib/python3.6/dist-packages/apex\n","    copying build/lib.linux-x86_64-3.6/apex_C.cpython-36m-x86_64-linux-gnu.so -> /usr/local/lib/python3.6/dist-packages\n","    copying build/lib.linux-x86_64-3.6/mlp_cuda.cpython-36m-x86_64-linux-gnu.so -> /usr/local/lib/python3.6/dist-packages\n","    copying build/lib.linux-x86_64-3.6/amp_C.cpython-36m-x86_64-linux-gnu.so -> /usr/local/lib/python3.6/dist-packages\n","    copying build/lib.linux-x86_64-3.6/fused_layer_norm_cuda.cpython-36m-x86_64-linux-gnu.so -> /usr/local/lib/python3.6/dist-packages\n","    byte-compiling /usr/local/lib/python3.6/dist-packages/apex/fp16_utils/fp16_optimizer.py to fp16_optimizer.cpython-36.pyc\n","    byte-compiling /usr/local/lib/python3.6/dist-packages/apex/fp16_utils/loss_scaler.py to loss_scaler.cpython-36.pyc\n","    byte-compiling /usr/local/lib/python3.6/dist-packages/apex/fp16_utils/fp16util.py to fp16util.cpython-36.pyc\n","    byte-compiling /usr/local/lib/python3.6/dist-packages/apex/fp16_utils/__init__.py to __init__.cpython-36.pyc\n","    byte-compiling /usr/local/lib/python3.6/dist-packages/apex/mlp/mlp.py to mlp.cpython-36.pyc\n","    byte-compiling /usr/local/lib/python3.6/dist-packages/apex/mlp/__init__.py to __init__.cpython-36.pyc\n","    byte-compiling /usr/local/lib/python3.6/dist-packages/apex/parallel/multiproc.py to multiproc.cpython-36.pyc\n","    byte-compiling /usr/local/lib/python3.6/dist-packages/apex/parallel/optimized_sync_batchnorm.py to optimized_sync_batchnorm.cpython-36.pyc\n","    byte-compiling /usr/local/lib/python3.6/dist-packages/apex/parallel/optimized_sync_batchnorm_kernel.py to optimized_sync_batchnorm_kernel.cpython-36.pyc\n","    byte-compiling /usr/local/lib/python3.6/dist-packages/apex/parallel/sync_batchnorm_kernel.py to sync_batchnorm_kernel.cpython-36.pyc\n","    byte-compiling /usr/local/lib/python3.6/dist-packages/apex/parallel/sync_batchnorm.py to sync_batchnorm.cpython-36.pyc\n","    byte-compiling /usr/local/lib/python3.6/dist-packages/apex/parallel/LARC.py to LARC.cpython-36.pyc\n","    byte-compiling /usr/local/lib/python3.6/dist-packages/apex/parallel/__init__.py to __init__.cpython-36.pyc\n","    byte-compiling /usr/local/lib/python3.6/dist-packages/apex/parallel/distributed.py to distributed.cpython-36.pyc\n","    byte-compiling /usr/local/lib/python3.6/dist-packages/apex/RNN/cells.py to cells.cpython-36.pyc\n","    byte-compiling /usr/local/lib/python3.6/dist-packages/apex/RNN/models.py to models.cpython-36.pyc\n","    byte-compiling /usr/local/lib/python3.6/dist-packages/apex/RNN/RNNBackend.py to RNNBackend.cpython-36.pyc\n","    byte-compiling /usr/local/lib/python3.6/dist-packages/apex/RNN/__init__.py to __init__.cpython-36.pyc\n","    byte-compiling /usr/local/lib/python3.6/dist-packages/apex/pyprof/prof/utility.py to utility.cpython-36.pyc\n","    byte-compiling /usr/local/lib/python3.6/dist-packages/apex/pyprof/prof/blas.py to blas.cpython-36.pyc\n","    byte-compiling /usr/local/lib/python3.6/dist-packages/apex/pyprof/prof/loss.py to loss.cpython-36.pyc\n","    byte-compiling /usr/local/lib/python3.6/dist-packages/apex/pyprof/prof/misc.py to misc.cpython-36.pyc\n","    byte-compiling /usr/local/lib/python3.6/dist-packages/apex/pyprof/prof/recurrentCell.py to recurrentCell.cpython-36.pyc\n","    byte-compiling /usr/local/lib/python3.6/dist-packages/apex/pyprof/prof/optim.py to optim.cpython-36.pyc\n","    byte-compiling /usr/local/lib/python3.6/dist-packages/apex/pyprof/prof/reduction.py to reduction.cpython-36.pyc\n","    byte-compiling /usr/local/lib/python3.6/dist-packages/apex/pyprof/prof/prof.py to prof.cpython-36.pyc\n","    byte-compiling /usr/local/lib/python3.6/dist-packages/apex/pyprof/prof/output.py to output.cpython-36.pyc\n","    byte-compiling /usr/local/lib/python3.6/dist-packages/apex/pyprof/prof/index_slice_join_mutate.py to index_slice_join_mutate.cpython-36.pyc\n","    byte-compiling /usr/local/lib/python3.6/dist-packages/apex/pyprof/prof/activation.py to activation.cpython-36.pyc\n","    byte-compiling /usr/local/lib/python3.6/dist-packages/apex/pyprof/prof/pointwise.py to pointwise.cpython-36.pyc\n","    byte-compiling /usr/local/lib/python3.6/dist-packages/apex/pyprof/prof/usage.py to usage.cpython-36.pyc\n","    byte-compiling /usr/local/lib/python3.6/dist-packages/apex/pyprof/prof/base.py to base.cpython-36.pyc\n","    byte-compiling /usr/local/lib/python3.6/dist-packages/apex/pyprof/prof/pooling.py to pooling.cpython-36.pyc\n","    byte-compiling /usr/local/lib/python3.6/dist-packages/apex/pyprof/prof/convert.py to convert.cpython-36.pyc\n","    byte-compiling /usr/local/lib/python3.6/dist-packages/apex/pyprof/prof/randomSample.py to randomSample.cpython-36.pyc\n","    byte-compiling /usr/local/lib/python3.6/dist-packages/apex/pyprof/prof/data.py to data.cpython-36.pyc\n","    byte-compiling /usr/local/lib/python3.6/dist-packages/apex/pyprof/prof/__main__.py to __main__.cpython-36.pyc\n","    byte-compiling /usr/local/lib/python3.6/dist-packages/apex/pyprof/prof/conv.py to conv.cpython-36.pyc\n","    byte-compiling /usr/local/lib/python3.6/dist-packages/apex/pyprof/prof/dropout.py to dropout.cpython-36.pyc\n","    byte-compiling /usr/local/lib/python3.6/dist-packages/apex/pyprof/prof/normalization.py to normalization.cpython-36.pyc\n","    byte-compiling /usr/local/lib/python3.6/dist-packages/apex/pyprof/prof/softmax.py to softmax.cpython-36.pyc\n","    byte-compiling /usr/local/lib/python3.6/dist-packages/apex/pyprof/prof/embedding.py to embedding.cpython-36.pyc\n","    byte-compiling /usr/local/lib/python3.6/dist-packages/apex/pyprof/prof/linear.py to linear.cpython-36.pyc\n","    byte-compiling /usr/local/lib/python3.6/dist-packages/apex/pyprof/prof/__init__.py to __init__.cpython-36.pyc\n","    byte-compiling /usr/local/lib/python3.6/dist-packages/apex/pyprof/parse/parse.py to parse.cpython-36.pyc\n","    byte-compiling /usr/local/lib/python3.6/dist-packages/apex/pyprof/parse/nvvp.py to nvvp.cpython-36.pyc\n","    byte-compiling /usr/local/lib/python3.6/dist-packages/apex/pyprof/parse/__main__.py to __main__.cpython-36.pyc\n","    byte-compiling /usr/local/lib/python3.6/dist-packages/apex/pyprof/parse/db.py to db.cpython-36.pyc\n","    byte-compiling /usr/local/lib/python3.6/dist-packages/apex/pyprof/parse/kernel.py to kernel.cpython-36.pyc\n","    byte-compiling /usr/local/lib/python3.6/dist-packages/apex/pyprof/parse/__init__.py to __init__.cpython-36.pyc\n","    byte-compiling /usr/local/lib/python3.6/dist-packages/apex/pyprof/nvtx/nvmarker.py to nvmarker.cpython-36.pyc\n","    byte-compiling /usr/local/lib/python3.6/dist-packages/apex/pyprof/nvtx/__init__.py to __init__.cpython-36.pyc\n","    byte-compiling /usr/local/lib/python3.6/dist-packages/apex/pyprof/__init__.py to __init__.cpython-36.pyc\n","    byte-compiling /usr/local/lib/python3.6/dist-packages/apex/reparameterization/weight_norm.py to weight_norm.cpython-36.pyc\n","    byte-compiling /usr/local/lib/python3.6/dist-packages/apex/reparameterization/reparameterization.py to reparameterization.cpython-36.pyc\n","    byte-compiling /usr/local/lib/python3.6/dist-packages/apex/reparameterization/__init__.py to __init__.cpython-36.pyc\n","    byte-compiling /usr/local/lib/python3.6/dist-packages/apex/amp/rnn_compat.py to rnn_compat.cpython-36.pyc\n","    byte-compiling /usr/local/lib/python3.6/dist-packages/apex/amp/_process_optimizer.py to _process_optimizer.cpython-36.pyc\n","    byte-compiling /usr/local/lib/python3.6/dist-packages/apex/amp/_amp_state.py to _amp_state.cpython-36.pyc\n","    byte-compiling /usr/local/lib/python3.6/dist-packages/apex/amp/wrap.py to wrap.cpython-36.pyc\n","    byte-compiling /usr/local/lib/python3.6/dist-packages/apex/amp/compat.py to compat.cpython-36.pyc\n","    byte-compiling /usr/local/lib/python3.6/dist-packages/apex/amp/frontend.py to frontend.cpython-36.pyc\n","    byte-compiling /usr/local/lib/python3.6/dist-packages/apex/amp/scaler.py to scaler.cpython-36.pyc\n","    byte-compiling /usr/local/lib/python3.6/dist-packages/apex/amp/__version__.py to __version__.cpython-36.pyc\n","    byte-compiling /usr/local/lib/python3.6/dist-packages/apex/amp/lists/tensor_overrides.py to tensor_overrides.cpython-36.pyc\n","    byte-compiling /usr/local/lib/python3.6/dist-packages/apex/amp/lists/functional_overrides.py to functional_overrides.cpython-36.pyc\n","    byte-compiling /usr/local/lib/python3.6/dist-packages/apex/amp/lists/torch_overrides.py to torch_overrides.cpython-36.pyc\n","    byte-compiling /usr/local/lib/python3.6/dist-packages/apex/amp/lists/__init__.py to __init__.cpython-36.pyc\n","    byte-compiling /usr/local/lib/python3.6/dist-packages/apex/amp/amp.py to amp.cpython-36.pyc\n","    byte-compiling /usr/local/lib/python3.6/dist-packages/apex/amp/_initialize.py to _initialize.cpython-36.pyc\n","    byte-compiling /usr/local/lib/python3.6/dist-packages/apex/amp/handle.py to handle.cpython-36.pyc\n","    byte-compiling /usr/local/lib/python3.6/dist-packages/apex/amp/opt.py to opt.cpython-36.pyc\n","    byte-compiling /usr/local/lib/python3.6/dist-packages/apex/amp/utils.py to utils.cpython-36.pyc\n","    byte-compiling /usr/local/lib/python3.6/dist-packages/apex/amp/__init__.py to __init__.cpython-36.pyc\n","    byte-compiling /usr/local/lib/python3.6/dist-packages/apex/contrib/multihead_attn/fast_encdec_multihead_attn_norm_add_func.py to fast_encdec_multihead_attn_norm_add_func.cpython-36.pyc\n","    byte-compiling /usr/local/lib/python3.6/dist-packages/apex/contrib/multihead_attn/fast_self_multihead_attn_func.py to fast_self_multihead_attn_func.cpython-36.pyc\n","    byte-compiling /usr/local/lib/python3.6/dist-packages/apex/contrib/multihead_attn/encdec_multihead_attn.py to encdec_multihead_attn.cpython-36.pyc\n","    byte-compiling /usr/local/lib/python3.6/dist-packages/apex/contrib/multihead_attn/self_multihead_attn.py to self_multihead_attn.cpython-36.pyc\n","    byte-compiling /usr/local/lib/python3.6/dist-packages/apex/contrib/multihead_attn/fast_self_multihead_attn_norm_add_func.py to fast_self_multihead_attn_norm_add_func.cpython-36.pyc\n","    byte-compiling /usr/local/lib/python3.6/dist-packages/apex/contrib/multihead_attn/encdec_multihead_attn_func.py to encdec_multihead_attn_func.cpython-36.pyc\n","    byte-compiling /usr/local/lib/python3.6/dist-packages/apex/contrib/multihead_attn/mask_softmax_dropout_func.py to mask_softmax_dropout_func.cpython-36.pyc\n","    byte-compiling /usr/local/lib/python3.6/dist-packages/apex/contrib/multihead_attn/self_multihead_attn_func.py to self_multihead_attn_func.cpython-36.pyc\n","    byte-compiling /usr/local/lib/python3.6/dist-packages/apex/contrib/multihead_attn/fast_encdec_multihead_attn_func.py to fast_encdec_multihead_attn_func.cpython-36.pyc\n","    byte-compiling /usr/local/lib/python3.6/dist-packages/apex/contrib/multihead_attn/__init__.py to __init__.cpython-36.pyc\n","    byte-compiling /usr/local/lib/python3.6/dist-packages/apex/contrib/groupbn/batch_norm.py to batch_norm.cpython-36.pyc\n","    byte-compiling /usr/local/lib/python3.6/dist-packages/apex/contrib/groupbn/__init__.py to __init__.cpython-36.pyc\n","    byte-compiling /usr/local/lib/python3.6/dist-packages/apex/contrib/sparsity/sparse_masklib.py to sparse_masklib.cpython-36.pyc\n","    byte-compiling /usr/local/lib/python3.6/dist-packages/apex/contrib/sparsity/asp.py to asp.cpython-36.pyc\n","    byte-compiling /usr/local/lib/python3.6/dist-packages/apex/contrib/sparsity/__init__.py to __init__.cpython-36.pyc\n","    byte-compiling /usr/local/lib/python3.6/dist-packages/apex/contrib/xentropy/softmax_xentropy.py to softmax_xentropy.cpython-36.pyc\n","    byte-compiling /usr/local/lib/python3.6/dist-packages/apex/contrib/xentropy/__init__.py to __init__.cpython-36.pyc\n","    byte-compiling /usr/local/lib/python3.6/dist-packages/apex/contrib/optimizers/fp16_optimizer.py to fp16_optimizer.cpython-36.pyc\n","    byte-compiling /usr/local/lib/python3.6/dist-packages/apex/contrib/optimizers/distributed_fused_lamb.py to distributed_fused_lamb.cpython-36.pyc\n","    byte-compiling /usr/local/lib/python3.6/dist-packages/apex/contrib/optimizers/fused_adam.py to fused_adam.cpython-36.pyc\n","    byte-compiling /usr/local/lib/python3.6/dist-packages/apex/contrib/optimizers/distributed_fused_adam.py to distributed_fused_adam.cpython-36.pyc\n","    byte-compiling /usr/local/lib/python3.6/dist-packages/apex/contrib/optimizers/distributed_fused_adam_v3.py to distributed_fused_adam_v3.cpython-36.pyc\n","    byte-compiling /usr/local/lib/python3.6/dist-packages/apex/contrib/optimizers/fused_sgd.py to fused_sgd.cpython-36.pyc\n","    byte-compiling /usr/local/lib/python3.6/dist-packages/apex/contrib/optimizers/distributed_fused_adam_v2.py to distributed_fused_adam_v2.cpython-36.pyc\n","    byte-compiling /usr/local/lib/python3.6/dist-packages/apex/contrib/optimizers/fused_lamb.py to fused_lamb.cpython-36.pyc\n","    byte-compiling /usr/local/lib/python3.6/dist-packages/apex/contrib/optimizers/__init__.py to __init__.cpython-36.pyc\n","    byte-compiling /usr/local/lib/python3.6/dist-packages/apex/contrib/__init__.py to __init__.cpython-36.pyc\n","    byte-compiling /usr/local/lib/python3.6/dist-packages/apex/multi_tensor_apply/multi_tensor_apply.py to multi_tensor_apply.cpython-36.pyc\n","    byte-compiling /usr/local/lib/python3.6/dist-packages/apex/multi_tensor_apply/__init__.py to __init__.cpython-36.pyc\n","    byte-compiling /usr/local/lib/python3.6/dist-packages/apex/optimizers/fused_adagrad.py to fused_adagrad.cpython-36.pyc\n","    byte-compiling /usr/local/lib/python3.6/dist-packages/apex/optimizers/fused_novograd.py to fused_novograd.cpython-36.pyc\n","    byte-compiling /usr/local/lib/python3.6/dist-packages/apex/optimizers/fused_adam.py to fused_adam.cpython-36.pyc\n","    byte-compiling /usr/local/lib/python3.6/dist-packages/apex/optimizers/fused_sgd.py to fused_sgd.cpython-36.pyc\n","    byte-compiling /usr/local/lib/python3.6/dist-packages/apex/optimizers/fused_lamb.py to fused_lamb.cpython-36.pyc\n","    byte-compiling /usr/local/lib/python3.6/dist-packages/apex/optimizers/__init__.py to __init__.cpython-36.pyc\n","    byte-compiling /usr/local/lib/python3.6/dist-packages/apex/normalization/fused_layer_norm.py to fused_layer_norm.cpython-36.pyc\n","    byte-compiling /usr/local/lib/python3.6/dist-packages/apex/normalization/__init__.py to __init__.cpython-36.pyc\n","    byte-compiling /usr/local/lib/python3.6/dist-packages/apex/__init__.py to __init__.cpython-36.pyc\n","    running install_egg_info\n","    running egg_info\n","    creating apex.egg-info\n","    writing apex.egg-info/PKG-INFO\n","    writing dependency_links to apex.egg-info/dependency_links.txt\n","    writing top-level names to apex.egg-info/top_level.txt\n","    writing manifest file 'apex.egg-info/SOURCES.txt'\n","    writing manifest file 'apex.egg-info/SOURCES.txt'\n","    Copying apex.egg-info to /usr/local/lib/python3.6/dist-packages/apex-0.1-py3.6.egg-info\n","    running install_scripts\n","    writing list of installed files to '/tmp/pip-record-vfmc8jt_/install-record.txt'\n","    Running setup.py install for apex ... \u001b[?25l\u001b[?25hdone\n","  Removing source in /tmp/pip-req-build-8qx14kzb\n","Successfully installed apex-0.1\n","Cleaning up...\n","Removed build tracker '/tmp/pip-req-tracker-uei_ilwq'\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"wqdm4kjFU-eT","executionInfo":{"status":"ok","timestamp":1610786037664,"user_tz":-330,"elapsed":1024,"user":{"displayName":"AMBUJE GUPTA","photoUrl":"","userId":"08374827863947652219"}},"outputId":"ff8d532b-09a3-4b3c-dbda-ff0ef19bc5c7"},"source":["!pwd"],"execution_count":null,"outputs":[{"output_type":"stream","text":["/content\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"kDk_mNT2VFsa"},"source":[""],"execution_count":null,"outputs":[]}]}